{
    // Düzenleyici
  
    // Düzenleyicinin CodeLens'i gösterip göstermediğini kontrol eder.
    "diffEditor.codeLens" : yanlış ,
  
    // Etkinleştirildiğinde, fark düzenleyici, baştaki veya sondaki boşluklardaki değişiklikleri yok sayar.
    "diffEditor.ignoreTrimWhitespace" : doğru ,
  
    // Fark hesaplamasının iptal edildiği milisaniye cinsinden zaman aşımı. Zaman aşımı olmaması için 0 kullanın.
    "diffEditor.maxComputationTime" : 5000 ,
  
    // Diff düzenleyicisinin eklenen/kaldırılan değişiklikler için +/- göstergeleri gösterip göstermediğini kontrol eder.
    "diffEditor.renderIndicators" : true ,
  
    // Diff düzenleyicisinin diff'i yan yana mı yoksa satır içinde mi göstereceğini kontrol eder.
    "diffEditor.renderSideBySide" : doğru ,
  
    // - kapalı: Satırlar asla kaydırılmaz.
    // - açık: Çizgiler, görünüm alanı genişliğinde sarılır.
    // - devral: Satırlar `editor.wordWrap` ayarına göre kaydırılacaktır.
    "diffEditor.wordWrap" : " devralma " ,
  
    // Taahhüt karakterlerinde önerilerin kabul edilip edilmeyeceğini kontrol eder. Örneğin, JavaScript'te noktalı virgül (`;`), bir öneriyi kabul eden ve bu karakteri yazan bir kesinleştirme karakteri olabilir.
    "editor.accept RecommendionOnCommitCharacter" : doğru ,
  
    // 'Sekme'ye ek olarak 'Enter'da önerilerin kabul edilip edilmeyeceğini kontrol eder. Yeni satır ekleme veya önerileri kabul etme arasındaki belirsizliği önlemeye yardımcı olur.
    // - üzerinde
    // - akıllı: Yalnızca metinsel bir değişiklik yaptığında `Enter` ile bir öneriyi kabul edin.
    // - kapalı
    "editor.accept RecommendionOnEnter" : " üzerinde " ,
  
    // Düzenleyicinin, ekran okuyucular için optimize edildiği bir modda çalışıp çalışmayacağını kontrol eder. Açık olarak ayarlamak, sözcük kaydırmayı devre dışı bırakır.
    // - otomatik: Düzenleyici, bir Ekran Okuyucunun ne zaman eklendiğini algılamak için platform API'lerini kullanır.
    // - açık: Düzenleyici, Ekran Okuyucu ile kullanım için kalıcı olarak optimize edilecektir. Kelime kaydırma devre dışı bırakılacak.
    // - kapalı: Düzenleyici hiçbir zaman Ekran Okuyucu ile kullanım için optimize edilmeyecektir.
    "editor.accessibilitySupport" : " auto " ,
  
    // Kullanıcı bir açılış ayracı ekledikten sonra editörün parantezleri otomatik olarak kapatıp kapatmayacağını kontrol eder.
    // - Her zaman
    // - dil Tanımlı: Köşeli parantezlerin ne zaman otomatik kapatılacağını belirlemek için dil yapılandırmalarını kullanın.
    // - BeforeWhitespace: Parantezleri yalnızca imleç boşluk alanının solundayken otomatik kapat.
    // - asla
    "editor.autoClosingBrackets" : " languageDefined " ,
  
    // Editörün silme sırasında bitişik kapanış tırnaklarını mı yoksa parantezleri mi kaldıracağını kontrol eder.
    // - Her zaman
    // - auto: Bitişik tırnakları veya parantezleri yalnızca otomatik olarak eklendiyse kaldırın.
    // - asla
    "editor.autoClosingDelete" : " auto " ,
  
    // Editörün kapanış tırnakları üzerine mi yoksa parantezler üzerine mi yazacağını kontrol eder.
    // - Her zaman
    // - auto: Kapanış tırnaklarının veya parantezlerin üzerine yalnızca otomatik olarak eklendiyse yazın.
    // - asla
    "editor.autoClosingOvertype" : " auto " ,
  
    // Kullanıcı bir açılış teklifi ekledikten sonra editörün tırnak işaretlerini otomatik olarak kapatıp kapatmayacağını kontrol eder.
    // - Her zaman
    // - dil Tanımlı: Tırnakların ne zaman otomatik kapatılacağını belirlemek için dil yapılandırmalarını kullanın.
    // - BeforeWhitespace: Yalnızca imleç boşluk alanının solundayken tırnakları otomatik kapat.
    // - asla
    "editor.autoClosingQuotes" : " languageDefined " ,
  
    // Kullanıcılar satırları yazarken, yapıştırırken, taşırken veya girintiler oluştururken düzenleyicinin girintiyi otomatik olarak ayarlayıp ayarlamayacağını kontrol eder.
    // - yok: Düzenleyici otomatik olarak girinti eklemez.
    // - koru: Düzenleyici, geçerli satırın girintisini koruyacaktır.
    // - parantezler: Düzenleyici, geçerli satırın girintisini koruyacak ve dil tanımlı parantezleri dikkate alacaktır.
    // - gelişmiş: Düzenleyici, geçerli satırın girintisini koruyacak, dil tarafından tanımlanan parantezleri dikkate alacak ve diller tarafından tanımlanan özel onEnterRules'ı çağıracaktır.
    // - dolu: Düzenleyici, geçerli satırın girintisini, dil tarafından tanımlanan parantezleri dikkate alır, diller tarafından tanımlanan özel onEnterRules'ı çağırır ve diller tarafından tanımlanan indentationRules'ı dikkate alır.
    "editor.autoIndent" : " tam " ,
  
    // Editörün tırnak veya parantez yazarken seçimleri otomatik olarak çevreleyip çevrelemeyeceğini kontrol eder.
    // - LanguageDefined: Seçimlerin ne zaman otomatik olarak çevreleneceğini belirlemek için dil yapılandırmalarını kullanın.
    // - tırnak işaretleri: Köşeli parantezler değil tırnak işaretleri ile çevreleyin.
    // - köşeli ayraçlar: Köşeli ayraçlarla çevreleyin, ancak tırnak işaretleri ile değil.
    // - asla
    "editor.autoSurround" : " languageDefined " ,
  
    // Köşeli ayraç çifti renklendirmesinin etkin olup olmadığını kontrol eder. Köşeli ayraç vurgu renklerini geçersiz kılmak için 'workbench.colorCustomizations' kullanın.
    "editor.bracketPairColorization.enabled" : yanlış ,
  
    // Kaydederken çalıştırılacak eylem türlerini kodlayın.
    "editor.codeActionsOnSave" : {},
  
    // Düzenleyicinin CodeLens'i gösterip göstermediğini kontrol eder.
    "editor.codeLens" : doğru ,
  
    // CodeLens için yazı tipi ailesini kontrol eder.
    "editor.codeLensFontFamily" : " " ,
  
    // CodeLens için yazı tipi boyutunu piksel cinsinden kontrol eder. "0" olarak ayarlandığında, "editor.fontSize" öğesinin %90'ı kullanılır.
    "editor.codeLensFontSize" : 0 ,
  
    // Düzenleyicinin satır içi renk dekoratörlerini ve renk seçiciyi oluşturup oluşturmayacağını kontrol eder.
    "editor.colorDecorators" : doğru ,
  
    // Mouse ve tuşlar ile yapılan seçimin kolon seçimi yapmasını etkinleştirin.
    "editor.columnSelection" : yanlış ,
  
    // Satır yorumları için geçiş, ekleme veya kaldırma eylemleriyle boş satırların yoksayılıp yok sayılmayacağını kontrol eder.
    "editor.comments.ignoreEmptyLines" : doğru ,
  
    // Yorum yaparken boşluk karakterinin eklenip eklenmeyeceğini kontrol eder.
    "editor.comments.insertSpace" : doğru ,
  
    // Sözdizimi vurgulamanın panoya kopyalanıp kopyalanmayacağını kontrol eder.
    "editor.copyWithSyntaxHighlighting" : doğru ,
  
    // İmleç animasyon stilini kontrol edin.
    "editor.cursorYanıp sönüyor" : " yanıp sönüyor " ,
  
    // Düzgün şapka animasyonunun etkinleştirilip etkinleştirilmeyeceğini kontrol eder.
    "editor.cursorSmoothCaretAnimation" : yanlış ,
  
    // İmleç stilini kontrol eder.
    "editor.cursorStyle" : " satır " ,
  
    // İmleci çevreleyen minimum sayıda görünür ön ve son çizgiyi kontrol eder. Diğer bazı düzenleyicilerde 'scrollOff' veya 'scrollOffset' olarak bilinir.
    "editor.cursorSurroundingLines" : 0 ,
  
    // "cursorSurroundingLines"ın ne zaman uygulanması gerektiğini kontrol eder.
    // - varsayılan: "cursorSurroundingLines" yalnızca klavye veya API aracılığıyla tetiklendiğinde uygulanır.
    // - tümü: `cursorSurroundingLines` her zaman uygulanır.
    "editor.cursorSurroundingLinesStyle" : " varsayılan " ,
  
    // 'editor.cursorStyle', 'line' olarak ayarlandığında imlecin genişliğini kontrol eder.
    "editor.cursorWidth" : 0 ,
  
    // Diğer tüm biçimlendirici ayarlarından öncelikli olan varsayılan bir biçimlendirici tanımlar. Biçimlendiriciye katkıda bulunan bir uzantının tanımlayıcısı olmalıdır.
    "editor.defaultFormatter" : boş ,
  
    // Definition'a Git fare hareketinin her zaman peek widget'ını açıp açmayacağını kontrol eder.
    "editor.definitionLinkOpensInPeek" : yanlış ,
  
    // Dosya içeriğine göre bir dosya açıldığında `editor.tabSize#` ve `#editor.insertSpaces` öğelerinin otomatik olarak algılanıp algılanmayacağını kontrol eder.
    "editor.detectIndentation" : doğru ,
  
    // Editörün sürükle ve bırak yoluyla seçimlerin taşınmasına izin verip vermeyeceğini kontrol eder.
    "editor.dragAndDrop" : doğru ,
  
    // Seçim olmadan kopyalamanın geçerli satırı kopyalayıp kopyalamayacağını kontrol eder.
    "editor.emptySelectionClipboard" : doğru ,
  
    // `Alt` tuşuna basıldığında kaydırma hızı çarpanı.
    "editor.fastScrollSensitivity" : 5 ,
  
    // Find Widget'ın düzenleyicinin üstüne fazladan satır ekleyip eklemeyeceğini kontrol eder. Doğru olduğunda, Find Widget görünür olduğunda ilk satırın ötesine geçebilirsiniz.
    "editor.find.addExtraSpaceOnTop" : true ,
  
    // Seçimde Bul'u otomatik olarak açma koşulunu kontrol eder.
    // - asla: Seçimde Bul'u hiçbir zaman otomatik olarak açma (varsayılan).
    // - her zaman: Seçimde Bul'u her zaman otomatik olarak açın.
    // - çok satırlı: Birden çok içerik satırı seçildiğinde Seçimde Bul'u otomatik olarak açın.
    "editor.find.autoFindInSelection" : " asla " ,
  
    // Yazarken imlecin eşleşmeleri bulmak için atlayıp atlamayacağını kontrol eder.
    "editor.find.cursorMoveOnType" : doğru ,
  
    // Find Widget'ının macOS'ta paylaşılan bulma panosunu okuması veya değiştirmesi gerekip gerekmediğini kontrol eder.
    "editor.find.globalFindClipboard" : yanlış ,
  
    // Başka eşleşme bulunamadığında aramanın otomatik olarak baştan (veya sondan) yeniden başlayıp başlamayacağını kontrol eder.
    "editor.find.loop" : doğru ,
  
    // Find Widget'taki arama dizesinin düzenleyici seçiminden tohumlanıp ekilmediğini kontrol eder.
    // - asla: Asla düzenleyici seçiminden arama dizesi ekleme.
    // - her zaman: İmleç konumundaki kelime dahil, her zaman düzenleyici seçiminden arama dizesini tohumlayın.
    // - seçim: Yalnızca düzenleyici seçiminden tohum arama dizesi.
    "editor.find.seedSearchStringFromSelection" : " her zaman " ,
  
    // Düzenleyicide kod katlamanın etkin olup olmadığını kontrol eder.
    "editör.katlama" : doğru ,
  
    // Düzenleyicinin katlanmış aralıkları vurgulayıp vurgulamayacağını kontrol eder.
    "editor.foldingHighlight" : doğru ,
  
    // Düzenleyicinin içe aktarma aralıklarını otomatik olarak daraltıp daraltmayacağını kontrol eder.
    "editor.foldingImportsByDefault" : false ,
  
    // Katlama aralıklarını hesaplama stratejisini kontrol eder.
    // - otomatik: Varsa, dile özgü bir katlama stratejisi kullanın, yoksa girintiye dayalı olanını kullanın.
    // - girinti: Girinti tabanlı katlama stratejisini kullanın.
    "editor.foldingStrategy" : " auto " ,
  
    // Yazı tipi ailesini kontrol eder.
    "editor.fontFamily" : " Consolas, 'Courier New', monospace " ,
  
    // Yazı tipi bitişik harflerini veya yazı tipi özelliklerini yapılandırır. Bitişik harfleri etkinleştirmek/devre dışı bırakmak için bir boole veya CSS 'font-feature-settings' özelliğinin değeri için bir dize olabilir.
    "editor.fontLigatures" : false ,
  
    // Yazı tipi boyutunu piksel cinsinden kontrol eder.
    "editor.fontSize" : 14 ,
  
    // Yazı tipi ağırlığını kontrol eder. "Normal" ve "kalın" anahtar kelimeleri veya 1 ile 1000 arasındaki sayıları kabul eder.
    "editor.fontWeight" : " normal " ,
  
    // Düzenleyicinin yapıştırılan içeriği otomatik olarak biçimlendirmesi gerekip gerekmediğini kontrol eder. Bir biçimlendirici mevcut olmalıdır ve biçimlendirici bir belgedeki bir aralığı biçimlendirebilmelidir.
    "editor.formatOnPaste" : yanlış ,
  
    // Kaydederken bir dosyayı biçimlendirin. Bir formatlayıcı mevcut olmalı, dosya gecikmeden kaydedilmemeli ve editör kapatılmamalıdır.
    "editor.formatOnSave" : yanlış ,
  
    // Kayıttaki formatın tüm dosyayı mı yoksa sadece değişiklikleri mi biçimlendirdiğini kontrol eder. Yalnızca "editor.formatOnSave" etkinleştirildiğinde geçerlidir.
    // - dosya: Tüm dosyayı biçimlendirin.
    // - modifikasyonlar: Format değişiklikleri (kaynak kontrolü gerektirir).
    // - modifikasyonlarifAvailable: Yalnızca değişiklikleri biçimlendirmeye çalışır (kaynak denetimi gerektirir). Kaynak denetimi kullanılamıyorsa, tüm dosya biçimlendirilir.
    "editor.formatOnSaveMode" : " dosya " ,
  
    // Editörün, yazdıktan sonra satırı otomatik olarak biçimlendirmesi gerekip gerekmediğini kontrol eder.
    "editor.formatOnType" : yanlış ,
  
    // Editörün dikey glif kenar boşluğunu oluşturup oluşturmayacağını kontrol eder. Glif kenar boşluğu çoğunlukla hata ayıklama için kullanılır.
    "editor.glyphMargin" : doğru ,
  
    // 'Bildirime Git' sonucu geçerli konum olduğunda yürütülmekte olan alternatif komut kimliği.
    "editor.gotoLocation.alternativeDeclarationCommand" : " editor.action.goToReferences " ,
  
    // 'Tanıma Git' sonucu geçerli konum olduğunda yürütülmekte olan alternatif komut kimliği.
    "editor.gotoLocation.alternativeDefinitionCommand" : " editor.action.goToReferences " ,
  
    // 'Uygulamaya Git' sonucu geçerli konum olduğunda yürütülmekte olan alternatif komut kimliği.
    "editor.gotoLocation.alternativeImplementationCommand" : " " ,
  
    // 'Referansa Git' sonucu geçerli konum olduğunda yürütülmekte olan alternatif komut kimliği.
    "editor.gotoLocation.alternativeReferenceCommand" : " " ,
  
    // 'Tür Tanımına Git' sonucu geçerli konum olduğunda yürütülmekte olan alternatif komut kimliği.
    "editor.gotoLocation.alternativeTypeDefinitionCommand" : " editor.action.goToReferences " ,
  
    // Birden fazla hedef konum mevcut olduğunda 'Bildirime Git' komutunun davranışını kontrol eder.
    // - peek: Sonuçların peek görünümünü göster (varsayılan)
    // - gotoAndPeek: Birincil sonuca git ve bir göz atma görünümü göster
    // - git: Birincil sonuca git ve diğerlerine göz atmadan gezinmeyi etkinleştir
    "editor.gotoLocation.multipleDeclarations" : " peek " ,
  
    // Birden fazla hedef konum mevcut olduğunda 'Tanıma Git' komutunun davranışını kontrol eder.
    // - peek: Sonuçların peek görünümünü göster (varsayılan)
    // - gotoAndPeek: Birincil sonuca git ve bir göz atma görünümü göster
    // - git: Birincil sonuca git ve diğerlerine göz atmadan gezinmeyi etkinleştir
    "editor.gotoLocation.multipleDefinitions" : " peek " ,
  
    // Birden fazla hedef konum mevcut olduğunda 'Uygulamalara Git' komutunun davranışını kontrol eder.
    // - peek: Sonuçların peek görünümünü göster (varsayılan)
    // - gotoAndPeek: Birincil sonuca git ve bir göz atma görünümü göster
    // - git: Birincil sonuca git ve diğerlerine göz atmadan gezinmeyi etkinleştir
    "editor.gotoLocation.multipleImplementations" : " peek " ,
  
    // Birden fazla hedef konum mevcut olduğunda 'Referanslara Git' komutunun davranışını kontrol eder.
    // - peek: Sonuçların peek görünümünü göster (varsayılan)
    // - gotoAndPeek: Birincil sonuca git ve bir göz atma görünümü göster
    // - git: Birincil sonuca git ve diğerlerine göz atmadan gezinmeyi etkinleştir
    "editor.gotoLocation.multipleReferences" : " peek " ,
  
    // Birden fazla hedef konum mevcut olduğunda 'Tür Tanımına Git' komutunun davranışını kontrol eder.
    // - peek: Sonuçların peek görünümünü göster (varsayılan)
    // - gotoAndPeek: Birincil sonuca git ve bir göz atma görünümü göster
    // - git: Birincil sonuca git ve diğerlerine göz atmadan gezinmeyi etkinleştir
    "editor.gotoLocation.multipleTypeDefinitions" : " peek " ,
  
    // Köşeli ayraç çifti kılavuzlarının etkinleştirilip etkinleştirilmediğini kontrol eder.
    // - true: Köşeli ayraç çifti kılavuzlarını etkinleştirir.
    // - aktif: Yalnızca aktif köşeli ayraç çifti için köşeli ayraç çifti kılavuzlarını etkinleştirir.
    // - false: Köşeli ayraç çifti kılavuzlarını devre dışı bırakır.
    "editor.guides.bracketPairs" : yanlış ,
  
    // Yatay parantez çifti kılavuzlarının etkinleştirilip etkinleştirilmediğini kontrol eder.
    // - true: Dikey parantez çifti kılavuzlarına ek olarak yatay kılavuzları etkinleştirir.
    // - etkin: Yalnızca etkin parantez çifti için yatay kılavuzları etkinleştirir.
    // - false: Yatay parantez çifti kılavuzlarını devre dışı bırakır.
    "editor.guides.bracketPairsHorizontal" : " aktif " ,
  
    // Köşeli ayraç çifti kılavuzlarının etkinleştirilip etkinleştirilmediğini kontrol eder.
    "editor.guides.highlightActiveBracketPair" : true ,
  
    // Düzenleyicinin etkin girinti kılavuzunu vurgulayıp vurgulamayacağını kontrol eder.
    "editor.guides.highlightActiveIndentation" : true ,
  
    // Editörün girinti kılavuzlarını oluşturup oluşturmayacağını kontrol eder.
    "editor.guides.indentation" : doğru ,
  
    // İmlecin genel bakış cetvelinde gizlenip gizlenmeyeceğini kontrol eder.
    "editor.hideCursorInOverviewRuler" : yanlış ,
  
    // Boşluk varsa, çizginin üzerinde imleçleri göstermeyi tercih edin.
    "editor.hover.above" : doğru ,
  
    // Fareyle üzerine gelmenin gösterilmesinden sonraki milisaniye cinsinden gecikmeyi kontrol eder.
    "editör.hover.delay" : 300 ,
  
    // Fareyle üzerine gelmenin gösterilip gösterilmeyeceğini kontrol eder.
    "editor.hover.enabled" : doğru ,
  
    // Fare üzerine getirildiğinde fareyle üzerine gelindiğinde görünür olup olmayacağını kontrol eder.
    "editor.hover.sticky" : doğru ,
  
    // Düzenleyicide yerleştirme ipuçlarını etkinleştirir.
    "editor.inlayHints.enabled" : doğru ,
  
    // Düzenleyicideki yerleştirme ipuçlarının yazı tipi ailesini kontrol eder. Boş olarak ayarlandığında, "editor.fontFamily" kullanılır.
    "editor.inlayHints.fontFamily" : " " ,
  
    // Düzenleyicideki yerleştirme ipuçlarının yazı tipi boyutunu kontrol eder. Yapılandırılan değer "5"ten küçük veya düzenleyici yazı tipi boyutundan büyük olduğunda varsayılan olarak "editor.fontSize" öğesinin %90'ı kullanılır.
    "editor.inlayHints.fontSize" : 0 ,
  
    // Düzenleyicide satır içi önerilerin otomatik olarak gösterilip gösterilmeyeceğini kontrol eder.
    "editor.inlineSuggest.enabled" : true ,
  
    // `Tab` tuşuna basarken boşluk ekleyin. Bu ayar, "editor.detectIndentation" açıkken dosya içeriğine göre geçersiz kılınır.
    "editor.insertSpaces" : doğru ,
  
    // Girintiyi artıran veya azaltan parantez sembollerini tanımlar.
    "editor.language.brackets" : yanlış ,
  
    // Köşeli ayraç çifti renklendirme etkinleştirilmişse, yuvalama düzeylerine göre renklendirilen köşeli ayraç çiftlerini tanımlar.
    "editor.language.colorizedBracketPairs" : yanlış ,
  
    // Harf aralığını piksel cinsinden kontrol eder.
    "editor.letterSpacing" : 0 ,
  
    // Düzenleyicide kod eylemi ampulünü etkinleştirir.
    "editor.lightbulb.enabled" : doğru ,
  
    // Satır yüksekliğini kontrol eder.
    // - Yazı tipi boyutundan satır yüksekliğini otomatik olarak hesaplamak için 0 kullanın.
    // - 0 ile 8 arasındaki değerler yazı tipi boyutu ile çarpan olarak kullanılacaktır.
    // - 8'e eşit veya daha büyük değerler etkin değerler olarak kullanılacaktır.
    "editor.lineHeight" : 0 ,
  
    // Satır numaralarının görüntülenmesini kontrol eder.
    // - kapalı: Satır numaraları oluşturulmaz.
    // - açık: Satır numaraları mutlak sayı olarak işlenir.
    // - göreceli: Satır numaraları, satırlarda imleç konumuna olan mesafe olarak işlenir.
    // - aralık: Satır numaraları her 10 satırda bir işlenir.
    "editor.lineNumbers" : " üzerinde " ,
  
    // Düzenleyicinin bağlantılı düzenlemeyi etkinleştirip etkinleştirmediğini kontrol eder. Dile bağlı olarak, ilgili semboller, örneğin HTML etiketleri, düzenleme sırasında güncellenir.
    "editor.linkedEditing" : yanlış ,
  
    // Editörün bağlantıları algılayıp tıklanabilir hale getirip getirmediğini kontrol eder.
    "editor.links" : doğru ,
  
    // Eşleşen parantezleri vurgulayın.
    "editor.matchBrackets" : " her zaman " ,
  
    // Mini haritanın gösterilip gösterilmeyeceğini kontrol eder.
    "editor.minimap.enabled" : doğru ,
  
    // En fazla belirli sayıda sütun oluşturmak için mini haritanın genişliğini sınırlayın.
    "editor.minimap.maxColumn" : 120 ,
  
    // Gerçek karakterleri renk bloklarının aksine bir satırda işleyin.
    "editor.minimap.renderCharacters" : doğru ,
  
    // Mini haritada çizilen içeriğin ölçeği: 1, 2 veya 3.
    "editor.minimap.scale" : 1 ,
  
    // Mini harita kaydırıcısının ne zaman gösterileceğini kontrol eder.
    "editor.minimap.showSlider" : " fareyle üzerine gelindiğinde " ,
  
    // Mini haritanın oluşturulacağı tarafı kontrol eder.
    "editor.minimap.side" : " sağ " ,
  
    // Mini haritanın boyutunu kontrol eder.
    // - orantılı: Mini harita, düzenleyici içeriğiyle aynı boyuta sahiptir (ve kaydırılabilir).
    // - doldur: Mini harita, düzenleyicinin yüksekliğini doldurmak için gerektiği kadar uzar veya küçülür (kaydırma yok).
    // - sığdır: Mini harita, hiçbir zaman düzenleyiciden daha büyük olmayacak şekilde küçülür (kaydırma yok).
    "editor.minimap.size" : " orantılı " ,
  
    // Fare tekerleği kaydırma olaylarının "deltaX" ve "deltaY" üzerinde kullanılacak bir çarpan.
    "editor.mouseWheelScrollSensitivity" : 1 ,
  
    // Fare tekerleğini kullanırken ve `Ctrl` tuşunu basılı tutarken editörün yazı tipini yakınlaştırın.
    "editor.mouseWheelZoom" : yanlış ,
  
    // Fare ile birden çok imleç eklemek için kullanılacak değiştirici. Tanıma Git ve Bağlantıyı Aç fare hareketleri, çoklu imleç değiştiriciyle çakışmayacak şekilde uyarlanır.
    // - ctrlCmd: Windows ve Linux'ta "Kontrol" ve macOS'ta "Komut" ile eşlenir.
    // - alt: Windows ve Linux'ta "Alt" ve macOS'ta "Option" ile eşlenir.
    "editor.multiCursorModifier" : " alt " ,
  
    // Yapıştırılan metnin satır sayısı imleç sayısıyla eşleştiğinde yapıştırmayı kontrol eder.
    // - yayılma: Her imleç metnin tek bir satırını yapıştırır.
    // - tam: Her imleç tam metni yapıştırır.
    "editor.multiCursorPaste" : " yayıldı " ,
  
    // Düzenleyicinin anlamsal sembol oluşumlarını vurgulayıp vurgulamayacağını kontrol eder.
    "editor.occurrencesHighlight" : doğru ,
  
    // Genel bakış cetvelinin çevresine bir sınır çizilip çizilmeyeceğini kontrol eder.
    "editor.overviewRulerBorder" : doğru ,
  
    // Editörün alt kenarı ile son satır arasındaki boşluk miktarını kontrol eder.
    "editör.padding.bottom" : 0 ,
  
    // Editörün üst kenarı ile ilk satır arasındaki boşluk miktarını kontrol eder.
    "editör.padding.top" : 0 ,
  
    // Parametre ipuçları menüsünün listenin sonuna gelindiğinde kapanıp kapanmayacağını kontrol eder.
    "editor.parameterHints.cycle" : yanlış ,
  
    // Siz yazarken parametre belgelerini ve tür bilgilerini gösteren bir açılır pencereyi etkinleştirir.
    "editor.parameterHints.enabled" : doğru ,
  
    // Peek widget'ındaki satır içi düzenleyiciye mi yoksa ağaca mı odaklanılacağını kontrol eder.
    // - ağaç: Peek'i açarken ağaca odaklan
    // - editör: Peek'i açarken düzenleyiciye odaklanın
    "editor.peekWidgetDefaultFocus" : " ağaç " ,
  
    // Önerilerin yazarken otomatik olarak görünüp görünmeyeceğini kontrol eder.
    "editor.quickÖneriler" : {
      "diğer" : doğru ,
      "yorumlar" : yanlış ,
      "dizeler" : yanlış
    },
  
    // Hızlı önerilerin gösterileceği süreyi milisaniye cinsinden kontrol eder.
    "editor.quick RecommendionsDelay" : 10 ,
  
    // Yeniden adlandırmadan önce değişiklikleri önizleme özelliğini etkinleştirin/devre dışı bırakın
    "editor.rename.enablePreview" : doğru ,
  
    // Editörün kontrol karakterlerini oluşturup oluşturmayacağını kontrol eder.
    "editor.renderControlCharacters" : true ,
  
    // Dosya yeni bir satırla bittiğinde son satır numarasını oluştur.
    "editor.renderFinalNewline" : true ,
  
    // Düzenleyicinin geçerli satır vurgusunu nasıl oluşturacağını kontrol eder.
    // - Yok
    // - oluk
    // - astar
    // - tümü: Hem oluğu hem de geçerli satırı vurgular.
    "editor.renderLineHighlight" : " line " ,
  
    // Düzenleyicinin, yalnızca düzenleyici odaklandığında geçerli satırı vurgulayıp oluşturmayacağını kontrol eder.
    "editor.renderLineHighlightOnlyWhenFocus" : false ,
  
    // Editörün boşluk karakterlerini nasıl oluşturacağını kontrol eder.
    // - Yok
    // - sınır: Sözcükler arasındaki tek boşluklar dışında boşluk karakterlerini oluştur.
    // - seçim: Boşluk karakterlerini yalnızca seçili metin üzerinde işle.
    // - sondaki: Yalnızca sondaki boşluk karakterlerini oluştur.
    // - Tümü
    "editor.renderWhitespace" : " seçim " ,
  
    // Seçimlerin köşeleri yuvarlatılmış olup olmayacağını kontrol eder.
    "editor.roundedSelection" : doğru ,
  
    // Belirli sayıda monospace karakterden sonra dikey cetveller oluşturun. Birden çok cetvel için birden çok değer kullanın. Dizi boşsa cetvel çizilmez.
    "editör.rulers" : [],
  
    // Yatay kaydırma çubuğunun görünürlüğünü kontrol eder.
    // - otomatik: Yatay kaydırma çubuğu yalnızca gerektiğinde görünür olacaktır.
    // - görünür: Yatay kaydırma çubuğu her zaman görünür olacaktır.
    // - gizli: Yatay kaydırma çubuğu her zaman gizlenecektir.
    "editor.scrollbar.horizontal" : " auto " ,
  
    // Yatay kaydırma çubuğunun yüksekliği.
    "editor.scrollbar.horizontalScrollbarSize" : 12 ,
  
    // Tıklamaların sayfaya göre kaydırılıp kaydırılmayacağını veya tıklama konumuna atlanıp atlanmayacağını kontrol eder.
    "editor.scrollbar.scrollByPage" : yanlış ,
  
    // Dikey kaydırma çubuğunun görünürlüğünü kontrol eder.
    // - otomatik: Dikey kaydırma çubuğu yalnızca gerektiğinde görünür olacaktır.
    // - görünür: Dikey kaydırma çubuğu her zaman görünür olacaktır.
    // - gizli: Dikey kaydırma çubuğu her zaman gizlenecektir.
    "editor.scrollbar.vertical" : " auto " ,
  
    // Dikey kaydırma çubuğunun genişliği.
    "editor.scrollbar.verticalScrollbarSize" : 14 ,
  
    // Düzenleyicinin yatay olarak kaydıracağı fazladan karakter sayısını kontrol eder.
    "editor.scrollBeyondLastColumn" : 5 ,
  
    // Editörün son satırın ötesine geçip geçmeyeceğini kontrol eder.
    "editor.scrollBeyondLastLine" : true ,
  
    // Linux birincil panosunun desteklenip desteklenmediğini kontrol eder.
    "editor.selectionClipboard" : true ,
  
    // Aynı anda hem dikey hem de yatay olarak kaydırırken yalnızca baskın eksen boyunca ilerleyin. İzleme dörtgeninde dikey olarak kaydırırken yatay kaymayı önler.
    "editor.scrollPredominantAxis" : doğru ,
  
    // Editörün seçime benzer eşleşmeleri vurgulayıp vurgulamayacağını kontrol eder.
    "editor.selectionHighlight" : doğru ,
  
    // SemanticHighlighting'in onu destekleyen diller için gösterilip gösterilmeyeceğini kontrol eder.
    // - true: Tüm renk temaları için anlamsal vurgulama etkinleştirildi.
    // - false: Tüm renk temaları için anlamsal vurgulama devre dışı bırakıldı.
    // - configurationByTheme: Anlamsal vurgulama, geçerli renk temasının 'anlamsal Vurgulama' ayarı tarafından yapılandırılır.
    "editor.semanticHighlighting.enabled" : " configurationByTheme " ,
  
    // Seçili olan renk temasından düzenleyici semantik belirteç rengini ve stillerini geçersiz kılar.
    "editor.semanticTokenColorCustomizations" : {},
  
    // üstü çizili kullanımdan kaldırılmış değişkenleri kontrol eder.
    "editor.showDeprecated" : true ,
  
    // Oluktaki katlama kontrollerinin ne zaman gösterileceğini kontrol eder.
    // - her zaman: Her zaman katlama kontrollerini göster.
    // - fareyle üzerine gelme: Katlama kontrollerini yalnızca fare oluğun üzerindeyken göster.
    "editor.showFoldingControls" : " fareyle üzerine gelindiğinde " ,
  
    // Kullanılmayan kodun solmasını kontrol eder.
    "editor.showUnused" : doğru ,
  
    // Baştaki ve sondaki boşlukların her zaman seçilip seçilmeyeceği.
    "editor.smartSelect.selectLeadingAndTrailingWhitespace" : true ,
  
    // Editörün bir animasyon kullanarak kaydırıp kaydırmayacağını kontrol eder.
    "editor.smoothScrolling" : yanlış ,
  
    // Snippet'lerin diğer önerilerle birlikte gösterilip gösterilmeyeceğini ve nasıl sıralandıklarını kontrol eder.
    // - üst: Snippet önerilerini diğer önerilerin üstünde göster.
    // - alt: Diğer önerilerin altında snippet önerilerini göster.
    // - satır içi: Snippet önerilerini diğer önerilerle birlikte göster.
    // - yok: Snippet önerilerini gösterme.
    "editor.snippet Recommendations" : " satır içi " ,
  
    // İçeriklerine çift tıkladığınızda veya "Escape"e bastığınızda bile göz düzenleyicileri açık tutun.
    "editor.stablePeek" : yanlış ,
  
    // Girinti için boşluk kullanırken sekme karakterlerinin seçim davranışını taklit edin. Seçim, sekme duraklarına yapışacaktır.
    "editor.stickyTabStops" : yanlış ,
  
    // Filtreleme ve sıralama önerilerinin küçük yazım hatalarını dikkate alıp almayacağını kontrol eder.
    "editor.suggest.filterGraceful" : doğru ,
  
    // Tamamlamalar kabul edilirken kelimelerin üzerine yazılip yazılmayacağını kontrol eder. Bunun, bu özelliği etkinleştiren uzantılara bağlı olduğunu unutmayın.
    // - Ekle: İmlecin sağındaki metnin üzerine yazmadan öneri ekleyin.
    // - değiştir: Öneri ekle ve imlecin sağındaki metnin üzerine yaz.
    "editor.suggest.insertMode" : " insert " ,
  
    // Sıralamanın imlece yakın görünen sözcükleri tercih edip etmediğini kontrol eder.
    "editor.suggest.localityBonus" : yanlış ,
  
    // Öneri sonucunun düzenleyicide önizlenip görüntülenmeyeceğini kontrol eder.
    "editor.suggest.preview" : yanlış ,
  
    // Hatırlanan öneri seçimlerinin birden çok çalışma alanı ve pencere arasında paylaşılıp paylaşılmadığını kontrol eder (`editor.suggestSelection` gerekir).
    "editor.suggest.share RecommendSelections" : yanlış ,
  
    // Etkinleştirildiğinde IntelliSense 'sınıf' önerilerini gösterir.
    "editor.suggest.showClasses" : true ,
  
    // Etkinleştirildiğinde IntelliSense 'renk' önerilerini gösterir.
    "editor.suggest.showColors" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense 'sabit' öneriler gösterir.
    "editor.suggest.showConstants" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense, "yapıcı" önerilerini gösterir.
    "editor.suggest.showConstructors" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense "özel renk" önerilerini gösterir.
    "editor.suggest.showCustomcolors" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense, "kullanımdan kaldırılmış" önerileri gösterir.
    "editor.suggest.showDeprecated" : true ,
  
    // Etkinleştirildiğinde IntelliSense 'enumMember' önerilerini gösterir.
    "editor.suggest.showEnumMembers" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense 'enum' önerilerini gösterir.
    "editor.suggest.showEnums" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense, "olay" önerilerini gösterir.
    "editor.suggest.showEvents" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense, "alan" önerilerini gösterir.
    "editor.suggest.showFields" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense 'dosya' önerilerini gösterir.
    "editor.suggest.showFiles" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense, "klasör" önerilerini gösterir.
    "editor.suggest.showFolders" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense 'işlev' önerilerini gösterir.
    "editor.suggest.showFunctions" : doğru ,
  
    // Önerilerde simgelerin gösterilip gösterilmeyeceğini kontrol eder.
    "editor.suggest.showIcons" : doğru ,
  
    // Öneri ayrıntılarının etiketle satır içi mi yoksa yalnızca ayrıntılar pencere öğesinde mi gösterileceğini kontrol eder.
    "editor.suggest.showInlineDetails" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense, "arayüz" önerilerini gösterir.
    "editor.suggest.showInterfaces" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense, "sorunlar" önerilerini gösterir.
    "editor.suggest.showIssues" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense, "anahtar kelime" önerilerini gösterir.
    "editor.suggest.showKeywords" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense 'yöntem' önerilerini gösterir.
    "editor.suggest.showMethods" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense, "modül" önerilerini gösterir.
    "editor.suggest.showModules" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense 'operatör' önerilerini gösterir.
    "editor.suggest.showOperators" : true ,
  
    // Etkinleştirildiğinde IntelliSense, "özellik" önerilerini gösterir.
    "editor.suggest.showProperties" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense 'referans' önerileri gösterir.
    "editor.suggest.showReferences" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense, "snippet" önerilerini gösterir.
    "editor.suggest.showSnippets" : doğru ,
  
    // Öneri widget'ının altındaki durum çubuğunun görünürlüğünü kontrol eder.
    "editor.suggest.showStatusBar" : yanlış ,
  
    // Etkinleştirildiğinde IntelliSense `struct` önerilerini gösterir.
    "editor.suggest.showStructs" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense, `typeParameter` önerilerini gösterir.
    "editor.suggest.showTypeParameters" : true ,
  
    // Etkinleştirildiğinde IntelliSense, "birim" önerilerini gösterir.
    "editor.suggest.showUnits" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense 'kullanıcı' önerilerini gösterir.
    "editor.suggest.showUsers" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense, "değer" önerilerini gösterir.
    "editor.suggest.showValues" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense 'değişken' önerileri gösterir.
    "editor.suggest.showVariables" : doğru ,
  
    // Etkinleştirildiğinde IntelliSense, "metin" önerilerini gösterir.
    "editor.suggest.showWords" : doğru ,
  
    // Etkin bir snippet'in hızlı önerileri önleyip engellemediğini kontrol eder.
    "editor.suggest.snippetsPreventQuick Recommendions" : true ,
  
    // Önerme widget'ı için yazı tipi boyutu. "0" olarak ayarlandığında, "editor.fontSize" değeri kullanılır.
    "editor.suggestFontSize" : 0 ,
  
    // Önerme aracı için satır yüksekliği. '0' olarak ayarlandığında, 'editor.lineHeight' değeri kullanılır. Minimum değer 8'dir.
    "editor.suggestLineHeight" : 0 ,
  
    // Tetikleyici karakterler yazarken önerilerin otomatik olarak görünüp görünmeyeceğini kontrol eder.
    "editor.suggestOnTriggerCharacters" : true ,
  
    // Öneri listesi gösterilirken önerilerin nasıl önceden seçileceğini kontrol eder.
    // - ilk: Her zaman ilk öneriyi seçin.
    // - son zamanlardaUsed: Daha fazla yazmak birini seçmedikçe en son önerileri seçin, örneğin `console.| -> console.log` çünkü `log` yakın zamanda tamamlandı.
    // - son zamanlardaUsedByPrefix: Önerileri, bu önerileri tamamlayan önceki öneklere göre seçin, örneğin "co -> konsol" ve "con -> const".
    "editor.suggestSelection" : " son zamanlardaUsed " ,
  
    // Sekme tamamlamayı etkinleştirir.
    // - açık: Sekme tamamlandı, sekmeye basıldığında en iyi eşleşen öneri eklenir.
    // - kapalı: Sekme tamamlamalarını devre dışı bırakır.
    // - onlySnippets: Ön ekleri eşleştiğinde tam snippet'leri sekme. 'hızlı Öneriler' etkinleştirilmediğinde en iyi sonucu verir.
    "editor.tabCompletion" : " kapalı " ,
  
    // Bir sekmenin eşit olduğu boşluk sayısı. Bu ayar, "editor.detectIndentation" açıkken dosya içeriğine göre geçersiz kılınır.
    "editor.tabSize" : 4 ,
  
    // Seçili olan renk temasından düzenleyici sözdizimi renklerini ve yazı tipi stilini geçersiz kılar.
    "editor.tokenColorCustomizations" : {},
  
    // Sondaki otomatik eklenen boşlukları kaldırın.
    "editor.trimAutoWhitespace" : true ,
  
    // Katlanmış bir çizgiden sonra boş içeriğe tıklamanın çizgiyi açıp açmayacağını kontrol eder.
    "editor.unfoldOnClickAfterEndOfLine" : false ,
  
    // Vurgulanmayan izin verilen karakterleri tanımlar.
    "editor.unicodeHighlight.allowedCharacters" : {},
  
    // Geçerli kullanıcı yerel ayarında yaygın olanlar dışında, temel ASCII karakterleriyle karıştırılabilecek karakterlerin vurgulanıp vurgulanmayacağını kontrol eder.
    "editor.unicodeHighlight.ambiguousCharacters" : true ,
  
    // Yorumlardaki karakterlerin de Unicode vurgulamasına tabi olup olmayacağını kontrol eder.
    "editor.unicodeHighlight.includeComments" : " inUntrustedWorkspace " ,
  
    // Yalnızca boşluk bırakan veya hiç genişliği olmayan karakterlerin vurgulanıp vurgulanmayacağını kontrol eder.
    "editor.unicodeHighlight.invisibleCharacters" : true ,
  
    // Tüm temel olmayan ASCII karakterlerin vurgulanıp vurgulanmayacağını kontrol eder. Yalnızca U+0020 ve U+007E, sekme, satır besleme ve satır başı arasındaki karakterler temel ASCII olarak kabul edilir.
    "editor.unicodeHighlight.nonBasicASCII" : " inUntrustedWorkspace " ,
  
    // Sorunlara neden olabilecek olağandışı satır sonlandırıcıları kaldırın.
    // - otomatik: Olağandışı satır sonlandırıcılar otomatik olarak kaldırılır.
    // - kapalı: Olağandışı satır sonlandırıcılar yoksayılır.
    // - komut istemi: Olağandışı satır sonlandırıcılar kaldırılmayı ister.
    "editor.unusualLineTerminators" : " istemi " ,
  
    // Boşluk ekleme ve silme, sekme duraklarını takip eder.
    "editor.useTabStops" : doğru ,
  
    // Tamamlamaların belgedeki sözcüklere göre hesaplanıp hesaplanmayacağını kontrol eder.
    "editor.wordBasedÖneriler" : doğru ,
  
    // Hangi belgelerden sözcük tabanlı tamamlamaların hesaplandığını kontrol eder.
    // - currentDocument: Yalnızca etkin belgeden sözcükler öner.
    // - MatchDocuments: Aynı dildeki tüm açık belgelerden sözcükler öner.
    // - allDocuments: Tüm açık belgelerden kelimeler önerin.
    "editor.wordBased RecommendionsMode" : " matchingDocuments " ,
  
    // Kelime ile ilgili gezinme veya işlemler yapılırken kelime ayırıcı olarak kullanılacak karakterler.
    "editor.wordSeparators" : " `~!@#$%^&*()-=+[{]} \\ |;:' \" ,.<>/? " ,
  
    // Satırların nasıl sarılacağını kontrol eder.
    // - kapalı: Satırlar asla kaydırılmaz.
    // - açık: Çizgiler, görünüm alanı genişliğinde sarılır.
    // - wordWrapColumn: Satırlar `editor.wordWrapColumn` olarak sarılacaktır.
    // - sınırlı: Satırlar, minimum görünüm alanı ve `editor.wordWrapColumn` ile sarılır.
    "editor.wordWrap" : " kapalı " ,
  
    // "editör.wordWrap", "wordWrapColumn" veya "sınırlı" olduğunda düzenleyicinin sarma sütununu kontrol eder.
    "editor.wordWrapColumn" : 80 ,
  
    // Sarılmış satırların girintisini kontrol eder.
    // - yok: Girinti yok. Sarılmış satırlar sütun 1'de başlar.
    // - aynı: Sarılmış satırlar, üst satırla aynı girintiyi alır.
    // - girinti: Sarılmış satırlar, üst öğeye doğru +1 girinti alır.
    // - deepIndent: Sarılmış satırlar, üst öğeye doğru +2 girinti alır.
    "editor.wrappingIndent" : " aynı " ,
  
    // Sarma noktalarını hesaplayan algoritmayı kontrol eder.
    // - basit: Tüm karakterlerin aynı genişlikte olduğunu varsayar. Bu, tek aralıklı yazı tipleri ve gliflerin eşit genişlikte olduğu belirli komut dosyaları (Latin karakterleri gibi) için doğru şekilde çalışan hızlı bir algoritmadır.
    // - gelişmiş: Kaydırma noktaları hesaplamasını tarayıcıya devreder. Bu, büyük dosyalar için donmalara neden olabilecek yavaş bir algoritmadır, ancak her durumda doğru şekilde çalışır.
    "editor.wrappingStrategy" : " basit " ,
  
    // SCM
  
    // Kaynak Kontrolü görünümünde satır içi eylemlerin her zaman görünür olup olmadığını kontrol eder.
    "scm.alwaysShowActions" : yanlış ,
  
    // Depoların her zaman SCM görünümünde görünüp görünmeyeceğini kontrol eder.
    "scm.alwaysShowRepositories" : false ,
  
    // SCM görünümünün dosyaları açarken otomatik olarak gösterip seçmeyeceğini kontrol eder.
    "scm.autoReveal" : doğru ,
  
    // Aktivite Çubuğundaki Kaynak Kontrolü simgesindeki sayım rozetini kontrol eder.
    // - tümü: Tüm Kaynak Kontrol Sağlayıcısı sayısı rozetlerinin toplamını göster.
    // - odaklanmış: Odaklanmış Kaynak Kontrol Sağlayıcısının sayı rozetini göster.
    // - kapalı: Kaynak Kontrolü sayım rozetini devre dışı bırakın.
    "scm.countBadge" : " tümü " ,
  
    // Varsayılan Kaynak Kontrolü veri havuzu görünüm modunu kontrol eder.
    // - ağaç: Depo değişikliklerini bir ağaç olarak göster.
    // - liste: Depo değişikliklerini liste olarak göster.
    "scm.defaultViewMode" : " liste " ,
  
    // Editördeki farklı dekorasyonları kontrol eder.
    // - tümü: Mevcut tüm konumlardaki fark dekorasyonlarını göster.
    // - oluk: Fark dekorasyonlarını sadece editör oluğunda göster.
    // - genel bakış: Fark dekorasyonlarını yalnızca genel bakış cetvelinde göster.
    // - mini harita: Farklı dekorasyonları yalnızca mini haritada göster.
    // - yok: Fark süslemelerini gösterme.
    "scm.diffDekorasyonlar" : " tümü " ,
  
    // Source Control farklı oluk süslemelerinin davranışını kontrol eder.
    // - fark: Tıklandığında satır içi fark bakış görünümünü göster.
    // - yok: Hiçbir şey yapmayın.
    "scm.diffDekorasyonlarGutterAction" : " diff " ,
  
    // Kaynak Denetimi fark dekoratörünün olukta görünürlüğünü kontrol eder.
    // - her zaman: Oluktaki diff dekoratörünü her zaman göster.
    // - fareyle üzerine gelme: Oluktaki fark dekoratörünü yalnızca fareyle üzerine gelindiğinde göster.
    "scm.diffDecorationsGutterVisibility" : " her zaman " ,
  
    // Oluktaki (eklenmiş ve değiştirilmiş) farklı dekorasyonların genişliğini (px) kontrol eder.
    "scm.diffDekorasyonlarOluk Genişliği" : 3 ,
  
    // Kaynak Kontrolü farklı cilt payı süslemelerinde baştaki ve sondaki boşlukların yoksayılıp yok sayılacağını kontrol eder.
    // - true: Baştaki ve sondaki boşlukları yoksay.
    // - false: Baştaki ve sondaki boşlukları göz ardı etmeyin.
    // - devral: `diffEditor.ignoreTrimWhitespace` öğesinden devral.
    "scm.diffDecorationsIgnoreTrimWhitespace" : " false " ,
  
    // Giriş mesajının yazı tipini kontrol eder. Workbench kullanıcı arabirimi yazı tipi ailesi için "varsayılan"ı, "editor.fontFamily"nin değeri için "editor"u veya özel bir yazı tipi ailesini kullanın.
    "scm.inputFontFamily" : " varsayılan " ,
  
    // Girdi mesajının yazı tipi boyutunu piksel cinsinden kontrol eder.
    "scm.inputFontSize" : 13 ,
  
    // Kaynak Kontrol Sağlayıcı başlıklarındaki sayı rozetlerini kontrol eder. Bu başlıklar yalnızca birden fazla sağlayıcı olduğunda görünür.
    // - gizli: Kaynak Kontrol Sağlayıcı sayım rozetlerini gizle.
    // - otomatik: Sıfır olmadığında yalnızca Kaynak Kontrol Sağlayıcısı için sayı rozetini göster.
    // - görünür: Kaynak Kontrol Sağlayıcısı sayı rozetlerini göster.
    "scm.providerCountBadge" : " gizli " ,
  
    // Source Control Repositories bölümünde kaç tane havuzun görünür olduğunu kontrol eder. Görünümü manuel olarak yeniden boyutlandırabilmek için "0" olarak ayarlayın.
    "scm.repositories.visible" : 10 ,
  
    // SCM görünümünde bir eylem düğmesinin gösterilip gösterilmeyeceğini kontrol eder.
    "scm.showActionButton" : doğru ,
  
    // Güvenlik
  
    // Kısıtlı mod başlığının ne zaman gösterileceğini kontrol eder.
    // - her zaman: Güvenilmeyen bir çalışma alanı her açıldığında başlığı göster.
    // - Dismissed: Kapatılana kadar güvenilmeyen bir çalışma alanı açıldığında başlığı göster.
    // - asla: Güvenilmeyen bir çalışma alanı açıkken başlığı gösterme.
    "security.workspace.trust.banner" : " Kapanılana kadar " ,
  
    // VS Kodunda boş pencereye varsayılan olarak güvenilip güvenilmediğini kontrol eder. `security.workspace.trust.untrustedFiles` ile kullanıldığında, boş bir pencerede sormadan VS Kodunun tam işlevselliğini etkinleştirebilirsiniz.
    "security.workspace.trust.emptyWindow" : doğru ,
  
    // Workspace Trust'ın VS Kodunda etkinleştirilip etkinleştirilmediğini kontrol eder.
    "security.workspace.trust.enabled" : true ,
  
    // Bir çalışma alanına güvenmek için başlangıç ​​isteminin ne zaman gösterileceğini kontrol eder.
    // - her zaman: Güvenilmeyen bir çalışma alanı her açıldığında güven iste.
    // - bir kez: Güvenilmeyen bir çalışma alanı ilk kez açıldığında güven iste.
    // - asla: Güvenilmeyen bir çalışma alanı açıldığında güven isteme.
    "security.workspace.trust.startupPrompt" : " bir kez " ,
  
    // Güvenilir bir çalışma alanında güvenilmeyen dosyaların açılmasının nasıl ele alınacağını kontrol eder. Bu ayar, dosyaları "security.workspace.trust.emptyWindow" aracılığıyla güvenilen boş bir pencerede açmak için de geçerlidir.
    // - komut istemi: Her çalışma alanı için güvenilmeyen dosyaların nasıl işleneceğini sorun. Güvenilmeyen dosyalar güvenilir bir çalışma alanına tanıtıldığında, bir daha sorulmayacaktır.
    // - open: Güvenilmeyen dosyaların, sorulmadan güvenilir bir çalışma alanına tanıtılmasına her zaman izin verin.
    // - newWindow: Güvenilmeyen dosyaları her zaman sormadan kısıtlı modda ayrı bir pencerede açın.
    "security.workspace.trust.untrustedFiles" : " istemi " ,
  
    // Tezgah
  
    // Çalışma tezgahında bir aktivite çubuğu simgesine tıklama davranışını kontrol eder.
    // - geçiş: Tıklanan öğe zaten görünür durumdaysa kenar çubuğunu gizleyin.
    // - odak: Tıklanan öğe zaten görünür durumdaysa kenar çubuğuna odaklan.
    "workbench.activityBar.iconClickBehavior" : " toggle " ,
  
    // Çalışma tezgahındaki aktivite çubuğunun görünürlüğünü kontrol eder.
    "workbench.activityBar.visible" : doğru ,
  
    // Seçili olan renk temasındaki renkleri geçersiz kılar.
    "workbench.colorCustomizations" : {},
  
    // Tezgahta kullanılan renk temasını belirtir.
    "workbench.colorTheme" : " Varsayılan Dark+ " ,
  
    // Komut paleti için geçmişte tutulacak en son kullanılan komutların sayısını kontrol eder. Komut geçmişini devre dışı bırakmak için 0'a ayarlayın.
    "workbench.commandPalette.history" : 50 ,
  
    // Komut paletine en son yazılan girdinin bir sonraki açışınızda geri yüklenip yüklenmeyeceğini kontrol eder.
    "workbench.commandPalette.preserveInput" : yanlış ,
  
    // Bir editör grubunda ilk olarak listelenen tiplerden birine uyan bir editör açılırsa ve birden fazla grup açıksa grup otomatik olarak kilitlenir. Kilitli gruplar, yalnızca kullanıcı hareketiyle (örneğin, sürükle ve bırak) açıkça seçildiğinde düzenleyicileri açmak için kullanılacaktır, ancak varsayılan olarak kullanılmayacaktır. Sonuç olarak, kilitli bir gruptaki etkin düzenleyicinin yanlışlıkla farklı bir düzenleyiciyle değiştirilmesi daha az olasıdır.
    "workbench.editor.autoLockGroups" : {
      "workbench.input.interactive" : yanlış ,
      "etkileşimli" : yanlış ,
      "workbench.editorinputs.searchEditorInput" : yanlış ,
      "imagePreview.previewEditor" : yanlış ,
      "vscode.markdown.preview.editor" : yanlış ,
      "jsProfileVisualizer.cpuprofile.table" : yanlış ,
      "terminalEditor" : doğru ,
      "varsayılan" : yanlış ,
      "jupyter-notebook" : yanlış ,
      "mainThreadWebview-markdown.preview" : yanlış
    },
  
    // Birden fazla grup açıkken ortalanmış düzenin otomatik olarak maksimum genişliğe yeniden boyutlandırılması gerekip gerekmediğini kontrol eder. Yalnızca bir grup açıldığında, orijinal ortalanmış genişliğe yeniden boyutlandırılacaktır.
    "workbench.editor.centeredLayoutAutoResize" : true ,
  
    // Gruptaki son sekme kapatıldığında boş editör gruplarının davranışını kontrol eder. Etkinleştirildiğinde, boş gruplar otomatik olarak kapanacaktır. Devre dışı bırakıldığında, boş gruplar ızgaranın bir parçası olarak kalacaktır.
    "workbench.editor.closeEmptyGroups" : true ,
  
    // Oturum sırasında açılan bir dosyayı gösteren düzenleyicilerin, başka bir işlem tarafından silindiğinde veya yeniden adlandırıldığında otomatik olarak kapanıp kapanmayacağını kontrol eder. Bunu devre dışı bırakmak, düzenleyicinin böyle bir olayda açık kalmasını sağlar. Uygulama içinden silmenin her zaman düzenleyiciyi kapatacağını ve kaydedilmemiş değişiklikleri olan düzenleyicilerin verilerinizi korumak için asla kapanmayacağını unutmayın.
    "workbench.editor.closeOnFileDelete" : yanlış ,
  
    // Düzenleyici dosya süslemelerinin rozet kullanıp kullanmayacağını kontrol eder.
    "workbench.editor.decorations.badges" : true ,
  
    // Düzenleyici dosya süslemelerinin renkleri kullanıp kullanmayacağını kontrol eder.
    "workbench.editor.decorations.colors" : doğru ,
  
    // Açılan düzenleyicilerin önizleme olarak gösterilip gösterilmeyeceğini kontrol eder. Önizleme düzenleyicileri açık kalmaz ve açık tutulacak şekilde (örn. çift tıklama veya düzenleme yoluyla) açıkça ayarlanana ve italik yazı tipi stiliyle görünene kadar yeniden kullanılır.
    "workbench.editor.enablePreview" : true ,
  
    // Onlardan bir kod gezintisi başlatıldığında düzenleyicilerin önizlemede kalıp kalmayacağını kontrol eder. Önizleme düzenleyicileri açık kalmaz ve açık tutulacak şekilde ayarlanana kadar (örneğin çift tıklama veya düzenleme yoluyla) yeniden kullanılır. "workbench.editor.enablePreview" devre dışı bırakıldığında bu değer yok sayılır.
    "workbench.editor.enablePreviewFromCodeNavigation" : false ,
  
    // Hızlı Aç'tan açılan düzenleyicilerin önizleme olarak gösterilip gösterilmeyeceğini kontrol eder. Önizleme düzenleyicileri açık kalmaz ve açık tutulacak şekilde ayarlanana kadar (örneğin çift tıklama veya düzenleme yoluyla) yeniden kullanılır. "workbench.editor.enablePreview" devre dışı bırakıldığında bu değer yok sayılır.
    "workbench.editor.enablePreviewFromQuickOpen" : false ,
  
    // Sekmelerin en son kullanılan sırayla mı yoksa soldan sağa mı kapatılacağını kontrol eder.
    "workbench.editor.focusRecentEditorAfterClose" : true ,
  
    // Kaydedilmemiş değişiklikleri olan düzenleyiciler için sekmelerde üst kenarlık çizilip çizilmediğini kontrol eder. `workbench.editor.showTabs` devre dışı bırakıldığında bu değer yok sayılır.
    "workbench.editor.highlightModifiedTabs" : false ,
  
    // Bir düzenleyici için etiketin biçimini kontrol eder.
    // - varsayılan: Dosyanın adını göster. Sekmeler etkinleştirildiğinde ve bir grupta iki dosya aynı ada sahip olduğunda, her dosya yolunun ayırt edici bölümleri eklenir. Sekmeler devre dışı bırakıldığında, düzenleyici etkinse çalışma alanı klasörüne göre yol gösterilir.
    // - kısa: Dosyanın adını ve ardından dizin adını gösterin.
    // - orta: Dosyanın adını ve ardından çalışma alanı klasörüne göre yolunu gösterin.
    // - uzun: Dosyanın adını ve ardından mutlak yolunu gösterin.
    "workbench.editor.labelFormat" : " varsayılan " ,
  
    // Dil seçici tarafından açıkça ayarlanmadıkça, bir metin düzenleyicideki dilin otomatik olarak algılanıp algılanmayacağını kontrol eder. Bu aynı zamanda dile göre de kapsamlandırılabilir, böylece hangi dillerin kapatılmasını istemediğinizi belirtebilirsiniz. Bu, genellikle dil algılamayı kandırarak, bunun Markdown değil gömülü dil olduğunu düşündüren başka diller içeren Markdown gibi diller için kullanışlıdır.
    "workbench.editor.languageDetection" : true ,
  
    // Açılan editör sayısının sınırlı olup olmayacağını kontrol eder. Etkinleştirildiğinde, daha az kullanılan düzenleyiciler, yeni açılan düzenleyicilere yer açmak için kapanacaktır.
    "workbench.editor.limit.enabled" : yanlış ,
  
    // Açılan maksimum düzenleyici sınırının düzenleyici grubu başına mı yoksa tüm düzenleyici gruplarına mı uygulanacağını kontrol eder.
    "workbench.editor.limit.perEditorGroup" : false ,
  
    // Açılan maksimum editör sayısını kontrol eder. Düzenleyici grubu başına veya tüm gruplar genelinde bu sınırı kontrol etmek için 'workbench.editor.limit.perEditorGroup' ayarını kullanın.
    "workbench.editor.limit.value" : 10 ,
  
    // Varsa, dört ve beş fare düğmelerini kullanarak açık dosyalar arasında gezinin.
    "workbench.editor.mouseBackForwardToNavigate" : true ,
  
    // Editörlerin açılacağı yeri kontrol eder. Şu anda etkin olanın solundaki veya sağındaki düzenleyicileri açmak için "sol" veya "sağ" öğesini seçin. Düzenleyicileri şu anda etkin olandan bağımsız olarak açmak için "ilk" veya "son" öğesini seçin.
    "workbench.editor.openPositioning" : " sağ " ,
  
    // Yan yana açılan düzenleyicilerin varsayılan yönünü kontrol eder (örneğin, Explorer'dan). Varsayılan olarak, editörler o anda aktif olanın sağ tarafında açılır. "Aşağı" olarak değiştirilirse, düzenleyiciler o anda etkin olanın altında açılır.
    "workbench.editor.openSideBySideDirection" : " sağ " ,
  
    // Sabitlenmiş düzenleyici sekmelerinin boyutlandırmasını kontrol eder. Sabitlenmiş sekmeler, tüm açılan sekmelerin başına göre sıralanır ve genellikle sabitlenene kadar kapanmaz. `workbench.editor.showTabs` devre dışı bırakıldığında bu değer yok sayılır.
    // - normal: Sabitlenmiş bir sekme, sabitlenmemiş sekmelerin görünümünü devralır.
    // - kompakt: Sabitlenmiş bir sekme, yalnızca simge veya düzenleyici adının ilk harfi ile kompakt bir biçimde gösterilecektir.
    // - küçült: Sabitlenmiş bir sekme, düzenleyici adının bölümlerini gösteren kompakt bir sabit boyuta küçülür.
    "workbench.editor.pinnedTabSizing" : " normal " ,
  
    // Düzenleyiciler kapatıldıktan sonra yeniden açıldığında son düzenleyici görünüm durumunu (örneğin kaydırma konumu) geri yükler. Düzenleyici görünüm durumu, düzenleyici grubu başına depolanır ve bir grup kapandığında atılır. Bir düzenleyici grubu için daha önce bir görünüm durumunun bulunmaması durumunda tüm düzenleyici gruplarında bilinen son görünüm durumunu kullanmak için 'workbench.editor.sharedViewState' ayarını kullanın.
    "workbench.editor.restoreViewState" : true ,
  
    // Açılırsa, görünür grupların herhangi birinde bir düzenleyicinin gösterilip gösterilmeyeceğini kontrol eder. Devre dışı bırakılırsa, bir düzenleyici o anda etkin olan düzenleyici grubunda açmayı tercih eder. Etkinleştirilirse, o anda etkin olan düzenleyici grubunda tekrar açılmak yerine önceden açılmış bir düzenleyici görüntülenecektir. Bu ayarın yok sayıldığı bazı durumlar olduğunu unutmayın, örneğin bir düzenleyiciyi belirli bir grupta veya o anda etkin olan grubun yanında açmaya zorlarken.
    "workbench.editor.revealIfOpen" : yanlış ,
  
    // Sekmeler üzerinde gezinmenin onları açıp açmayacağını kontrol eder. Varsayılan olarak sekmeler yalnızca kaydırıldığında görünür, ancak açılmaz. Bu davranışı o süre boyunca değiştirmek için kaydırma yaparken Shift tuşunu basılı tutabilirsiniz. `workbench.editor.showTabs` devre dışı bırakıldığında bu değer yok sayılır.
    "workbench.editor.scrollToSwitchTabs" : false ,
  
    // Tüm düzenleyici grupları arasında en son düzenleyici görünüm durumunu (örneğin kaydırma konumu) korur ve düzenleyici grubu için belirli bir düzenleyici görünüm durumu bulunamazsa bunu geri yükler.
    "workbench.editor.sharedViewState" : yanlış ,
  
    // Açılan editörlerin bir simge ile gösterilip gösterilmeyeceğini kontrol eder. Bu, bir dosya simgesi temasının da etkinleştirilmesini gerektirir.
    "workbench.editor.showIcons" : doğru ,
  
    // Açılan editörlerin sekmelerde gösterilip gösterilmeyeceğini kontrol eder.
    "workbench.editor.showTabs" : doğru ,
  
    // Bir düzenleyicinin bir düzenleyici grubunda dikey veya yatay olarak bölündüğü zaman için düzeni kontrol eder.
    // - dikey: Editörler yukarıdan aşağıya doğru konumlandırılır.
    // - yatay: Editörler soldan sağa doğru konumlandırılır.
    "workbench.editor.splitInGroupLayout" : " yatay " ,
  
    // Bir düzenleyiciyi veya dosyayı düzenleyici alanının kenarlarına bırakarak düzenleyici gruplarının sürükle ve bırak işlemlerinden ayrılıp ayrılamayacağını kontrol eder.
    "workbench.editor.splitOnDragAndDrop" : true ,
  
    // Editör gruplarını bölerken boyutlandırmasını kontrol eder.
    // - dağıt: Tüm editör gruplarını eşit parçalara böler.
    // - split: Aktif editör grubunu eşit parçalara böler.
    "workbench.editor.splitSizing" : " dağıt " ,
  
    // Editörün sekme kapatma düğmelerinin konumunu kontrol eder veya 'kapalı' olarak ayarlandığında bunları devre dışı bırakır. `workbench.editor.showTabs` devre dışı bırakıldığında bu değer yok sayılır.
    "workbench.editor.tabCloseButton" : " sağ " ,
  
    // Editör sekmelerinin boyutlandırılmasını kontrol eder. `workbench.editor.showTabs` devre dışı bırakıldığında bu değer yok sayılır.
    // - sığdır: Sekmeleri her zaman tam düzenleyici etiketini gösterecek kadar büyük tutun.
    // - küçült: Kullanılabilir alan tüm sekmeleri bir kerede göstermek için yeterli olmadığında sekmelerin küçülmesine izin verin.
    "workbench.editor.tabSizing" : " uygun " ,
  
    // Düzenleyici başlık alanındaki sekmeler ve içerik haritaları için kullanılan kaydırma çubuklarının yüksekliğini kontrol eder.
    // - varsayılan: Varsayılan boyut.
    // - büyük: Boyutu büyütür, böylece fare ile daha kolay kavranabilir.
    "workbench.editor.titleScrollbarSizing" : " default " ,
  
    // Başlıksız ipucunun düzenleyicide satır içi metin mi yoksa kayan bir düğme mi yoksa gizli mi olacağını kontrol eder.
    "workbench.editor.untitled.hint" : " metin " ,
  
    // Adsız bir düzenleyici için etiketin biçimini kontrol eder.
    // - içerik: Adsız dosyanın adı, ilişkili bir dosya yolu olmadığı sürece ilk satırının içeriğinden türetilir. Satırın boş olması veya kelime karakteri içermemesi durumunda ada geri dönecektir.
    // - ad: Adsız dosyanın adı, dosyanın içeriğinden türetilmez.
    "workbench.editor.untitled.labelFormat" : " içerik " ,
  
    // Kullanılabilir alan aşıldığında sekmelerin birden çok satıra mı sarılacağını veya bunun yerine bir kaydırma çubuğunun görünüp görünmeyeceğini kontrol eder. `workbench.editor.showTabs` devre dışı bırakıldığında bu değer yok sayılır.
    "workbench.editor.wrapTabs" : yanlış ,
  
    // Düzenleyicilere göre glob kalıplarını yapılandırın (örn. `"*.hex": "hexEditor.hexEdit"`). Bunlar, varsayılan davranışa göre önceliğe sahiptir.
    "workbench.editorAssociations" : {},
  
    // Açıcıyı harici URI'ler (http, https) için kullanmak üzere yapılandırın.
    "workbench.externalUriOpeners" : {},
  
    // Workbench'te yazı tipi yumuşatma yöntemini kontrol eder.
    // - varsayılan: Alt piksel yazı tipi yumuşatma. Çoğu retina olmayan ekranda bu, en net metni verecektir.
    // - antialiased: Yazı tipini alt pikselin aksine piksel düzeyinde düzeltin. Yazı tipinin genel olarak daha açık görünmesini sağlayabilir.
    // - yok: Yazı tipi yumuşatmayı devre dışı bırakır. Metin tırtıklı keskin kenarlarla gösterilecektir.
    // - auto: Ekranların DPI'sına göre otomatik olarak "varsayılan" veya "antialiased"i uygular.
    "workbench.fontAliasing" : " varsayılan " ,
  
    // Tezgah öğeleri için fareyle üzerine gelmenin gösterilmesinden sonraki milisaniye cinsinden gecikmeyi kontrol eder (ör. bazı uzantılarla sağlanan ağaç görünümü öğeleri). Zaten görünür olan öğeler, bu ayar değişikliğini yansıtmadan önce bir yenileme gerektirebilir.
    "workbench.hover.delay" : 500 ,
  
    // Tezgahta kullanılan dosya simgesi temasını veya dosya simgelerini göstermemek için 'boş' belirtir.
    // - null: Dosya simgesi yok
    // - minimuma karşı
    // - vs-seti
    "workbench.iconTheme" : " vs-seti " ,
  
    // Listelerde ve ağaçlarda klavye gezintisinin yalnızca yazarak otomatik olarak tetiklenip tetiklenmediğini kontrol eder. "yanlış" olarak ayarlanırsa, klavye gezintisi yalnızca bir klavye kısayolu atayabileceğiniz "list.toggleKeyboardNavigation" komutu yürütülürken tetiklenir.
    "workbench.list.automaticKeyboardNavigation" : true ,
  
    // `Alt` tuşuna basıldığında kaydırma hızı çarpanı.
    "workbench.list.fastScrollSensitivity" : 5 ,
  
    // Listelerin ve ağaçların tezgahta yatay kaydırmayı destekleyip desteklemediğini kontrol eder. Uyarı: Bu ayarı açmanın bir performans etkisi vardır.
    "workbench.list.horizontalScrolling" : yanlış ,
  
    // Tezgahtaki listeler ve ağaçlar için klavye gezinme stilini kontrol eder. Basit olabilir, vurgulayabilir ve filtreleyebilir.
    // - basit: Basit klavye gezintisi, klavye girişiyle eşleşen öğelere odaklanır. Eşleştirme yalnızca öneklerde yapılır.
    // - vurgula: Klavye gezintisini vurgula, klavye girişiyle eşleşen öğeleri vurgular. Daha fazla yukarı ve aşağı gezinme, yalnızca vurgulanan öğeler arasında geçiş yapacaktır.
    // - filtre: Filtre klavyesi gezintisi, klavye girişiyle eşleşmeyen tüm öğeleri filtreleyecek ve gizleyecektir.
    "workbench.list.keyboardNavigation" : " vurgu " ,
  
    // Fare tekerleği kaydırma olaylarının "deltaX" ve "deltaY" üzerinde kullanılacak bir çarpan.
    "workbench.list.mouseWheelScrollSensitivity" : 1 ,
  
    // Fare ile çoklu seçime ağaçlara ve listelere bir öğe eklemek için kullanılacak değiştirici (örneğin, gezgin, açık düzenleyiciler ve scm görünümünde). 'Yana Aç' fare hareketleri - destekleniyorsa - çoklu seçim değiştiricisiyle çakışmayacak şekilde uyarlanır.
    // - ctrlCmd: Windows ve Linux'ta "Kontrol" ve macOS'ta "Komut" ile eşlenir.
    // - alt: Windows ve Linux'ta "Alt" ve macOS'ta "Option" ile eşlenir.
    "workbench.list.multiSelectModifier" : " ctrlCmd " ,
  
    // Fare kullanılarak ağaçlardaki ve listelerdeki öğelerin nasıl açılacağını kontrol eder (destekleniyorsa). Geçerli değilse, bazı ağaçların ve listelerin bu ayarı yok saymayı seçebileceğini unutmayın.
    "workbench.list.openMode" : " singleClick " ,
  
    // Listelerin ve ağaçların düzgün kaydırılıp kaydırılmadığını kontrol eder.
    "workbench.list.smoothScrolling" : yanlış ,
  
    // Panelin varsayılan konumunu kontrol eder (terminal, hata ayıklama konsolu, çıktı, problemler). Tezgahın altında, sağında veya solunda gösterilebilir.
    "workbench.panel.defaultLocation" : " alt " ,
  
    // Panelin ekranı kaplamış olarak açılıp açılmayacağını kontrol eder. Ya her zaman büyütülmüş olarak açabilir, hiçbir zaman büyütülmemiş olarak açılabilir ya da kapatılmadan önceki son durumuna açık olabilir.
    // - her zaman: Açarken paneli her zaman büyüt.
    // - asla: Paneli açarken asla ekranı kaplamayın. Panel büyütülmemiş olarak açılacaktır.
    // - koru: Paneli, kapatılmadan önceki durumuna açın.
    "workbench.panel.opensMaximized" : " koru " ,
  
    // `window.autoDetectColorScheme` etkinleştirildiğinde karanlık işletim sistemi görünümü için tercih edilen renk temasını belirtir.
    "workbench.preferredDarkColorTheme" : " Varsayılan Dark+ " ,
  
    // `window.autoDetectHighContrast` etkinleştirildiğinde yüksek karşıtlık modunda kullanılan tercih edilen renk temasını belirtir.
    "workbench.preferredHighContrastColorTheme" : " Varsayılan Yüksek Karşıtlık " ,
  
    // `window.autoDetectColorScheme` etkinleştirildiğinde hafif işletim sistemi görünümü için tercih edilen renk temasını belirtir.
    "workbench.preferredLightColorTheme" : " Varsayılan Light+ " ,
  
    // Kullanılan ürün simgesi temasını belirtir.
    // - Varsayılan: Varsayılan
    "workbench.productIconTheme" : " Varsayılan " ,
  
    // Odağı kaybettiğinde Hızlı Aç'ın otomatik olarak kapanıp kapanmayacağını kontrol eder.
    "workbench.quickOpen.closeOnFocusLost" : true ,
  
    // Hızlı Aç'a son yazılan girişin bir sonraki açışta geri yüklenip yüklenmeyeceğini kontrol eder.
    "workbench.quickOpen.preserveInput" : yanlış ,
  
    // Görünümler/düzenleyiciler arasındaki sürükleme alanının milisaniye cinsinden vurgulu geri bildirim gecikmesini kontrol eder.
    "workbench.sash.hoverDelay" : 300 ,
  
    // Görünümler/düzenleyiciler arasındaki sürükleme alanının piksel cinsinden geri bildirim alanı boyutunu kontrol eder. Fareyi kullanarak görünümleri yeniden boyutlandırmanın zor olduğunu düşünüyorsanız, daha büyük bir değere ayarlayın.
    "workbench.sash.size" : 4 ,
  
    // Varsayılan olarak hangi ayar düzenleyicinin kullanılacağını belirler.
    // - ui: Ayarlar UI düzenleyicisini kullanın.
    // - json: JSON dosya düzenleyicisini kullanın.
    "workbench.settings.editor" : " ui " ,
  
    // Ayarlar için doğal dil arama modunun etkinleştirilip etkinleştirilmeyeceğini kontrol eder. Doğal dilde arama, bir Microsoft çevrimiçi hizmeti tarafından sağlanır.
    "workbench.settings.enableNaturalLanguageSearch" : true ,
  
    // Tuş bağlama ayarlarını açmanın, tüm varsayılan tuş atamalarını gösteren bir düzenleyiciyi de açıp açmayacağını kontrol eder.
    "workbench.settings.openDefaultKeybindings" : false ,
  
    // Açılış ayarlarının tüm varsayılan ayarları gösteren bir düzenleyiciyi de açıp açmayacağını kontrol eder.
    "workbench.settings.openDefaultSettings" : yanlış ,
  
    // Arama sırasında ayarlar düzenleyicisi İçindekiler'in davranışını kontrol eder.
    // - gizle: Arama yaparken İçindekiler'i gizler.
    // - filtre: İçindekiler'i yalnızca eşleşen ayarlara sahip kategorilere göre filtreleyin. Bir kategoriye tıklamak, sonuçları o kategoriye göre filtreleyecektir.
    "workbench.settings.settingsSearchTocBehavior" : " filtre " ,
  
    // Ayarları JSON olarak düzenlerken bölünmüş JSON düzenleyicisinin kullanılıp kullanılmayacağını kontrol eder.
    "workbench.settings.useSplitJSON" : yanlış ,
  
    // Kenar çubuğunun ve etkinlik çubuğunun konumunu kontrol eder. Tezgahın solunda veya sağında görünebilirler.
    "workbench.sideBar.location" : " sol " ,
  
    // Önceki oturumdan hiçbiri geri yüklenmediyse, başlangıçta hangi düzenleyicinin gösterileceğini kontrol eder.
    // - yok: Bir düzenleyici olmadan başlayın.
    // - karşılama Sayfası: VS Kodu ve uzantıları kullanmaya başlamanıza yardımcı olacak içerikle Hoş Geldiniz sayfasını açın.
    // - benioku: Bir klasörü açarken BENİOKU'yu açın, aksi takdirde 'welcomePage'e geri dönün. Not: Bu yalnızca genel bir yapılandırma olarak gözlenir, bir çalışma alanı veya klasör yapılandırmasında ayarlanırsa yoksayılır.
    // - newUntitledFile: Yeni bir adsız dosya açar (yalnızca boş bir pencere açarken geçerlidir).
    // - WelcomePageInEmptyWorkbench: Boş bir çalışma tezgahı açarken Hoş Geldiniz sayfasını açın.
    "workbench.startupEditor" : " hoşgeldinizSayfası " ,
  
    // Tezgahın altındaki durum çubuğunun görünürlüğünü kontrol eder.
    "workbench.statusBar.visible" : doğru ,
  
    // Etkinleştirildiğinde, hiçbir düzenleyici açık olmadığında filigran ipuçlarını gösterecektir.
    "workbench.tips.enabled" : doğru ,
  
    // Klasör adlarına tıklandığında ağaç klasörlerinin nasıl genişletileceğini kontrol eder. Geçerli değilse, bazı ağaçların ve listelerin bu ayarı yok saymayı seçebileceğini unutmayın.
    "workbench.tree.expandMode" : " singleClick " ,
  
    // Ağaç girintisini piksel cinsinden kontrol eder.
    "workbench.tree.indent" : 8 ,
  
    // Ağacın girinti kılavuzları oluşturup oluşturmayacağını kontrol eder.
    "workbench.tree.renderIndentGuides" : " onHover " ,
  
    // Etkinleştirildiğinde, güvenilir çalışma alanlarındaki bağlantıları açarken güvenilen etki alanı istemleri görünecektir.
    "workbench.trustedDomains.promptInTrustedWorkspace" : false ,
  
    // Görünüm başlığı eylemlerinin görünürlüğünü kontrol eder. Görünüm başlığı eylemleri her zaman görünür olabilir veya yalnızca o görünüme odaklanıldığında veya üzerine gelindiğinde görünür olabilir.
    "workbench.view.alwaysShowHeaderActions" : yanlış ,
  
    // Etkinleştirildiğinde, karşılama sayfasındaki hareketi azaltın.
    "workbench.welcomePage.preferReducedMotion" : yanlış ,
  
    // Etkinleştirildiğinde, uzantı yüklendikten sonra bir uzantının izlenecek yolu açılır.
    "workbench.welcomePage.walkthroughs.openOnInstall" : true ,
  
    // Pencere
  
    // Ayarlanırsa, işletim sistemi görünümüne göre otomatik olarak tercih edilen renk temasına geçin. İşletim sistemi görünümü karanlıksa, hafif "workbench.preferredLightColorTheme" için "workbench.preferredDarkColorTheme"de belirtilen tema kullanılır.
    "window.autoDetectColorScheme" : false ,
  
    // Etkinleştirilirse, işletim sistemi yüksek kontrastlı bir tema kullanıyorsa otomatik olarak yüksek kontrastlı temaya geçecektir. Kullanılacak yüksek karşıtlık teması, "workbench.preferredHighContrastColorTheme" tarafından belirlenir.
    "window.autoDetectHighContrast" : true ,
  
    // Etkinleştirilirse, etkin olmayan bir pencereye tıklamak hem pencereyi etkinleştirir hem de tıklanabilirse farenin altındaki öğeyi tetikler. Devre dışı bırakılırsa, etkin olmayan bir pencerede herhangi bir yere tıklamak onu yalnızca etkinleştirir ve öğeye ikinci bir tıklama gerekir.
    "window.clickThroughInactive" : true ,
  
    // Son düzenleyiciyi kapatmanın pencereyi de kapatıp kapatmayacağını kontrol eder. Bu ayar yalnızca klasörleri göstermeyen pencereler için geçerlidir.
    "window.closeWhenEmpty" : yanlış ,
  
    // Alt tuşuna basarak menü çubuğunun odaklanıp odaklanmayacağını kontrol eder. Bu ayarın, Alt tuşuyla menü çubuğunun değiştirilmesi üzerinde hiçbir etkisi yoktur.
    "window.customMenuBarAltFocus" : doğru ,
  
    // Diyalog pencerelerinin görünümünü ayarlayın.
    "window.dialogStyle" : " yerli " ,
  
    // Etkinleştirilirse, başlık çubuğundaki uygulama simgesine çift tıklamak pencereyi kapatır ve pencere simge tarafından sürüklenemez. Bu ayar yalnızca "window.titleBarStyle" "özel" olarak ayarlandığında etkilidir.
    "window.doubleClickIconToClose" : false ,
  
    // macOS'ta yerel tam ekranın kullanılıp kullanılmayacağını kontrol eder. Tam ekrana geçerken macOS'un yeni bir alan oluşturmasını önlemek için bu seçeneği devre dışı bırakın.
    "window.nativeFullScreen" : doğru ,
  
    // macOS Sierra pencere sekmelerini etkinleştirir. Değişikliklerin uygulanması için tam bir yeniden başlatma gerektirdiğini ve yerel sekmelerin yapılandırılırsa özel bir başlık çubuğu stilini devre dışı bırakacağını unutmayın.
    "window.nativeTabs" : yanlış ,
  
    // Alt tuş kısayollarıyla ana menülerin açılıp açılamayacağını kontrol eder. Anımsatıcıları devre dışı bırakmak, bu Alt tuş kısayollarını bunun yerine düzenleyici komutlarına bağlamanıza olanak tanır.
    "window.enableMenuBarMnemonics" : true ,
  
    // Menü çubuğunun görünürlüğünü kontrol edin. 'Geçiş' ayarı, menü çubuğunun gizlendiği ve Alt tuşuna bir kez basılmasının bunu göstereceği anlamına gelir. 'Kompakt' ayarı menüyü kenar çubuğuna taşır.
    // - klasik: Menü, pencerenin üst kısmında görüntülenir ve yalnızca tam ekran modunda gizlenir.
    // - görünür: Menü, tam ekran modunda bile her zaman pencerenin üst kısmında görünür.
    // - geçiş: Menü gizlidir ancak Alt tuşu ile pencerenin üst kısmında görüntülenebilir.
    // - gizli: Menü her zaman gizlidir.
    // - kompakt: Menü, kenar çubuğunda kompakt bir düğme olarak görüntülenir. "window.titleBarStyle" "yerel" olduğunda bu değer yok sayılır.
    "window.menuBarVisibility" : " klasik " ,
  
    // En az bir pencere zaten açıkken yeni bir pencere açmanın boyutlarını kontrol eder. Bu ayarın açılan ilk pencere üzerinde bir etkisi olmadığını unutmayın. İlk pencere her zaman boyutu ve konumu kapatmadan önce bıraktığınız gibi geri yükleyecektir.
    // - varsayılan: Ekranın ortasında yeni pencereler aç.
    // - devral: Son etkin olanla aynı boyutta yeni pencereler aç.
    // - offset: Bir ofset pozisyonu ile son aktif olanla aynı boyuta sahip yeni pencereler açın.
    // - büyütülmüş: Büyütülmüş yeni pencereler aç.
    // - tam ekran: Yeni pencereleri tam ekran modunda aç.
    "window.newWindowDimensions" : " varsayılan " ,
  
    // Dosyaların yeni bir pencerede açılıp açılmayacağını kontrol eder.
    // Bu ayarın göz ardı edildiği durumlar olabileceğine dikkat edin (örneğin `--new-window` veya `--reuse-window` komut satırı seçeneğini kullanırken).
    // - açık: Dosyalar yeni bir pencerede açılır.
    // - kapalı: Dosyalar, dosya klasörünün açık olduğu veya son etkin pencerenin bulunduğu pencerede açılır.
    // - varsayılan: Dosyalar, uygulama içinden seçilmediği sürece (örn. Dosya menüsü aracılığıyla) yeni bir pencerede açılır.
    "window.openFilesInNewWindow" : " kapalı " ,
  
    // Klasörlerin yeni bir pencerede mi açılacağını yoksa son etkin pencereyi mi değiştireceğini kontrol eder.
    // Bu ayarın göz ardı edildiği durumlar olabileceğine dikkat edin (örneğin `--new-window` veya `--reuse-window` komut satırı seçeneğini kullanırken).
    // - açık: Klasörler yeni bir pencerede açılır.
    // - kapalı: Klasörler, son etkin pencerenin yerini alacak.
    // - varsayılan: Uygulama içinden bir klasör seçilmediği sürece (örn. Dosya menüsü aracılığıyla) klasörler yeni bir pencerede açılır.
    "window.openFoldersInNewWindow" : " varsayılan " ,
  
    // Bağımsız değişkenler olmadan ikinci bir örnek başlatılırken yeni bir boş pencerenin açılıp açılmayacağını veya son çalışan örneğin odaklanıp odaklanmayacağını kontrol eder.
    // Bu ayarın göz ardı edildiği durumlar olabileceğine dikkat edin (örneğin `--new-window` veya `--reuse-window` komut satırı seçeneğini kullanırken).
    // - açık: Yeni bir boş pencere açar.
    // - kapalı: Son aktif çalışan örneğe odaklanın.
    "window.openWithoutArgumentsInNewWindow" : " üzerinde " ,
  
    // Tam ekran modundan çıkıldıysa, bir pencerenin tam ekran moduna geri yüklenip yüklenmeyeceğini kontrol eder.
    "window.restoreFullscreen" : yanlış ,
  
    // İlk kez başlattıktan sonra pencerelerin nasıl yeniden açılacağını kontrol eder. Uygulama zaten çalışırken bu ayarın hiçbir etkisi yoktur.
    // - koru: Her zaman tüm pencereleri yeniden aç. Bir klasör veya çalışma alanı açılırsa (örn. komut satırından), daha önce açılmadıysa yeni bir pencere olarak açılır. Dosyalar açılırsa, geri yüklenen pencerelerden birinde açılırlar.
    // - tümü: Bir klasör, çalışma alanı veya dosya açılmadıkça (örn. komut satırından) tüm pencereleri yeniden açın.
    // - klasörler: Bir klasör, çalışma alanı veya dosya açılmadıkça (örn. komut satırından) klasörleri veya çalışma alanları açık olan tüm pencereleri yeniden açın.
    // - bir: Bir klasör, çalışma alanı veya dosya açılmadıkça (örn. komut satırından) son etkin pencereyi yeniden açın.
    // - yok: Bir pencereyi asla yeniden açma. Bir klasör veya çalışma alanı açılmadıkça (örn. komut satırından), boş bir pencere görünecektir.
    "window.restoreWindows" : " tümü " ,
  
    // Aktif düzenleyiciye göre pencere başlığını kontrol eder. Değişkenler bağlama göre değiştirilir:
    // - `${activeEditorShort } `: dosya adı (örn. myFile.txt).
    // - `${activeEditorMedium}`: çalışma alanı klasörüne göre dosyanın yolu (örn. myFolder/myFileFolder/myFile.txt).
    // - `${activeEditorLong}`: dosyanın tam yolu (örn. /Users/Development/myFolder/myFileFolder/myFile.txt).
    // - `${activeFolderShort}`: dosyanın içinde bulunduğu klasörün adı (ör. myFileFolder).
    // - `${activeFolderMedium}`: çalışma alanı klasörüne göre dosyanın içinde bulunduğu klasörün yolu (örn. myFolder/myFileFolder).
    // - `${activeFolderLong}`: dosyanın içinde bulunduğu klasörün tam yolu (örn. /Users/Development/myFolder/myFileFolder).
    // - `${klasörAdı}`: dosyanın içinde bulunduğu çalışma alanı klasörünün adı (ör. myFolder).
    // - `${folderPath}`: dosyanın içinde bulunduğu çalışma alanı klasörünün dosya yolu (örn. /Users/Development/myFolder).
    // - `${rootName}`: açılan çalışma alanının veya klasörün adı (örn. myFolder veya myWorkspace).
    // - `${rootPath}`: açılan çalışma alanının veya klasörün dosya yolu (örn. /Users/Development/myWorkspace).
    // - `${appName}`: ör. VS Kodu.
    // - `${remoteName}`: ör. SSH
    // - `${dirty}`: etkin düzenleyicinin kaydedilmemiş değişiklikleri olduğu zaman için bir gösterge.
    // - `${ayırıcı}`: yalnızca değerler veya statik metin içeren değişkenlerle çevrelendiğinde gösterilen koşullu bir ayırıcı (" - ").
    "window.title" : " ${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName} " ,
  
    // Pencere başlık çubuğunun görünümünü ayarlayın. Linux ve Windows'ta bu ayar, uygulama ve içerik menüsü görünümlerini de etkiler. Değişikliklerin uygulanabilmesi için tam bir yeniden başlatma gerekir.
    "window.titleBarStyle" : " özel " ,
  
    // `window.title` tarafından kullanılan ayırıcı.
    "window.titleSeparator" : " - " ,
  
    // Pencerenin yakınlaştırma seviyesini ayarlayın. Orijinal boyutu 0'dır ve yukarıdaki (örn. 1) veya altındaki (örn. -1) her artış, %20 daha büyük veya daha küçük yakınlaştırmayı temsil eder. Yakınlaştırma düzeyini daha ince bir ayrıntı düzeyiyle ayarlamak için ondalık sayılar da girebilirsiniz.
    "window.zoomLevel" : 0 ,
  
    // Dosyalar
  
    // Dillerle dosya ilişkilendirmelerini yapılandırın (örn. `"*.extension": "html"`). Bunlar, kurulu dillerin varsayılan ilişkilendirmelerine göre önceliğe sahiptir.
    "files.associations" : {},
  
    // Etkinleştirildiğinde, editör dosyaları açarken karakter seti kodlamasını tahmin etmeye çalışır. Bu ayar, dile göre de yapılandırılabilir. Bu ayara metin araması tarafından uyulmadığını unutmayın. Yalnızca 'files.encoding' dikkate alınır.
    "files.autoGuessEncoding" : yanlış ,
  
    // Kaydedilmemiş değişiklikleri olan düzenleyicilerin otomatik olarak kaydedilmesini kontrol eder.
    // - kapalı: Değişiklikleri olan bir düzenleyici hiçbir zaman otomatik olarak kaydedilmez.
    // - afterDelay: Yapılandırılan `files.autoSaveDelay`den sonra değişiklikleri olan bir düzenleyici otomatik olarak kaydedilir.
    // - onFocusChange: Düzenleyici odağı kaybettiğinde değişiklikleri olan bir düzenleyici otomatik olarak kaydedilir.
    // - onWindowChange: Pencere odağı kaybettiğinde değişiklikleri olan bir düzenleyici otomatik olarak kaydedilir.
    "files.autoSave" : " kapalı " ,
  
    // Kaydedilmemiş değişiklikleri olan bir düzenleyicinin otomatik olarak kaydedilmesinden sonraki milisaniye cinsinden gecikmeyi kontrol eder. Yalnızca "files.autoSave", "afterDelay" olarak ayarlandığında geçerlidir.
    "files.autoSaveDelay" : 1000 ,
  
    // Yeni dosyalara atanan varsayılan dil modu. "${activeEditorLanguage}" olarak yapılandırılırsa, varsa o anda etkin olan metin düzenleyicinin dil modunu kullanır.
    "files.defaultLanguage" : " " ,
  
    // Silerken dosyaları/klasörleri işletim sistemi çöp kutusuna (Windows'ta geri dönüşüm kutusu) taşır. Bunu devre dışı bırakmak, dosyaları/klasörleri kalıcı olarak siler.
    "files.enableTrash" : doğru ,
  
    // Dosyaları okurken ve yazarken kullanılacak varsayılan karakter seti kodlaması. Bu ayar, dile göre de yapılandırılabilir.
    "files.encoding" : " utf8 " ,
  
    // Varsayılan satır sonu karakteri.
    // - \n: LF
    // - \r\n: CRLF
    // - otomatik: İşletim sistemine özgü satır sonu karakterini kullanır.
    "files.eol" : " otomatik " ,
  
    // Dosya ve klasörleri hariç tutmak için glob kalıplarını yapılandırın. Örneğin, dosya Gezgini, bu ayara göre hangi dosya ve klasörlerin gösterilip gizleneceğine karar verir. Aramaya özel hariç tutulanları tanımlamak için "arama.hariç tutma" ayarına bakın.
    "files.exclude" : {
      "**/.git" : doğru ,
      "**/.svn" : doğru ,
      "**/.hg" : doğru ,
      "**/CVS" : doğru ,
      "**/.DS_Store" : doğru ,
      "**/Thumbs.db" : doğru
    },
  
    // Kaydedilmemiş dosyaların oturumlar arasında hatırlanıp hatırlanmadığını kontrol ederek düzenleyiciden çıkarken kaydetme isteminin atlanmasına izin verir.
    // - kapalı: Sıcak çıkışı devre dışı bırakır. Kaydedilmemiş değişiklikleri olan düzenleyicilerin bulunduğu bir pencereyi kapatmaya çalıştığınızda bir istem görüntülenecektir.
    // - onExit: Windows/Linux'ta son pencere kapatıldığında veya `workbench.action.quit` komutu tetiklendiğinde (komut paleti, tuş bağlama, menü) sıcak çıkış tetiklenir. Açılan klasörleri olmayan tüm pencereler bir sonraki başlatmada geri yüklenecektir. Kaydedilmemiş dosyalar içeren önceden açılmış pencerelerin listesine `Dosya > Son Kullanılanları Aç > Diğer...` yoluyla erişilebilir.
    // - onExitAndWindowClose: Windows/Linux'ta son pencere kapatıldığında veya `workbench.action.quit` komutu tetiklendiğinde (komut paleti, tuş bağlama, menü) ve ayrıca klasör içeren herhangi bir pencere için sıcak çıkış tetiklenir son pencere olup olmadığına bakılmaksızın açılır. Açılan klasörleri olmayan tüm pencereler bir sonraki başlatmada geri yüklenecektir. Kaydedilmemiş dosyalar içeren önceden açılmış pencerelerin listesine `Dosya > Son Kullanılanları Aç > Diğer...` yoluyla erişilebilir.
    "files.hotExit" : " onExit " ,
  
    // Etkinleştirildiğinde, dosyayı kaydederken sonuna yeni bir satır ekleyin.
    "files.insertFinalNewline" : false ,
  
    // Büyük dosyaları açmaya çalışırken, yeniden başlattıktan sonra VS Kodunun kullanabileceği belleği kontrol eder. Komut satırında `--max-memory=NEWSIZE` belirtmekle aynı etki.
    "files.maxMemoryForLargeFilesMB" : 4096 ,
  
    // Oluşturma, yeniden adlandırma ve silme için dosya katılımcılarının iptal edildiği milisaniye cinsinden zaman aşımı. Katılımcıları devre dışı bırakmak için "0"ı kullanın.
    "files.participants.timeout" : 60000 ,
  
    // Bir dosya yeniden açıldığında geri alınan yığını geri yükleyin.
    "files.restoreUndoStack" : doğru ,
  
    // Bu arada başka bir program tarafından değiştirilen bir dosya diske kaydedildiğinde kaydetme çakışması meydana gelebilir. Veri kaybını önlemek için kullanıcıdan düzenleyicideki değişiklikleri diskteki sürümle karşılaştırması istenir. Bu ayar yalnızca, sık sık kaydetme çakışması hatalarıyla karşılaşırsanız değiştirilmelidir ve dikkatli kullanılmadığında veri kaybına neden olabilir.
    // - askUser: Kaydetmeyi reddedecek ve kaydetme çakışmasını manuel olarak çözmeyi isteyecek.
    // - overwriteFileOnDisk: Düzenleyicideki değişiklikleri diskteki dosyanın üzerine yazarak kaydetme çakışmasını çözecektir.
    "files.saveConflictResolution" : " askUser " ,
  
    // Basit dosya iletişim kutusunu etkinleştirir. Basit dosya iletişim kutusu, etkinleştirildiğinde sistem dosyası iletişim kutusunun yerini alır.
    "files.simpleDialog.enable" : yanlış ,
  
    // Etkinleştirildiğinde, dosyayı kaydederken dosyanın sonundaki son yeni satırdan sonraki tüm yeni satırları kesecektir.
    "files.trimFinalNewlines" : false ,
  
    // Etkinleştirildiğinde, bir dosyayı kaydederken sondaki boşlukları keser.
    "files.trimTrailingWhitespace" : false ,
  
    // Dosya izleme dışında bırakılacak yolları veya glob kalıplarını yapılandırın.
    "files.watcherExclude" : {
      "**/.git/objects/**" : doğru ,
      "**/.git/subtree-cache/**" : doğru ,
      "**/node_modules/*/**" : doğru ,
      "**/.hg/store/**" : doğru
    },
  
    // Çalışma alanı içindeki değişiklikleri izlemek için ekstra yollar yapılandırın.
    "files.watcherInclude" : [],
  
    // Ekran Görüntüsü Modu
  
    // Ekran görüntüsü modu klavyesinin yazı tipi boyutunu (piksel olarak) kontrol eder.
    "screencastMode.fontSize" : 56 ,
  
    // Ekran görüntüsü modunda klavye kaplamasının ne kadar süreyle (milisaniye olarak) gösterileceğini kontrol eder.
    "screencastMode.keyboardOverlayTimeout" : 800 ,
  
    // Yalnızca kısayollar gösterilirken klavye kaplamasında nelerin görüntüleneceğini kontrol eder.
    // - tuşlar: Tuşlar.
    // - komut: Komut başlığı.
    // - commandWithGroup: Grubunun ön ekine sahip komut başlığı.
    // - commandAndKeys: Komut başlığı ve anahtarlar.
    // - commandWithGroupAndKeys: Grubun önüne komut eklenmiş olarak komut başlığı ve anahtarları.
    "screencastMode.keyboardShortcutsFormat" : " commandAndKeys " ,
  
    // Ekran görüntüsü modunda fare göstergesinin rengini onaltılı olarak (#_RGB, #RGBA, #RRGGBB veya #RRGGBBAA) kontrol eder.
    "screencastMode.mouseIndicatorColor" : " #FF0000 " ,
  
    // Ekran görüntüsü modunda fare göstergesinin boyutunu (piksel olarak) kontrol eder.
    "screencastMode.mouseIndicatorSize" : 20 ,
  
    // Ekran görüntüsü modunda yalnızca klavye kısayollarını göster.
    "screencastMode.onlyKeyboardShortcuts" : false ,
  
    // Ekran görüntüsü modu kaplamasının alttan dikey ofsetini tezgah yüksekliğinin yüzdesi olarak kontrol eder.
    "screencastMode.verticalOffset" : 20 ,
  
    // Zen Modu
  
    // Zen Modunun açılmasının düzeni de ortalayıp merkezlemediğini kontrol eder.
    "zenMode.centerLayout" : doğru ,
  
    // Zen Modunun açılmasının aynı zamanda tezgahı tam ekran moduna geçirip geçirmediğini kontrol eder.
    "zenMode.fullScreen" : doğru ,
  
    // Zen Modunun açılmasının, çalışma tezgahının solundaki veya sağındaki etkinlik çubuğunu da gizleyip gizlemediğini kontrol eder.
    "zenMode.hideActivityBar" : doğru ,
  
    // Zen Modunun açılmasının düzenleyici satır numaralarını da gizleyip gizlemediğini kontrol eder.
    "zenMode.hideLineNumbers" : doğru ,
  
    // Zen Modunun açılmasının tezgahın altındaki durum çubuğunu da gizleyip gizlemediğini kontrol eder.
    "zenMode.hideStatusBar" : doğru ,
  
    // Zen Modunun açılmasının çalışma tezgahı sekmelerini de gizleyip gizlemediğini kontrol eder.
    "zenMode.hideTabs" : doğru ,
  
    // Zen modundan çıkıldıysa, bir pencerenin zen moduna geri yüklenip yüklenmeyeceğini kontrol eder.
    "zenMode.restore" : doğru ,
  
    // Zen modundayken bildirimlerin gösterilip gösterilmeyeceğini kontrol eder. Doğruysa, yalnızca hata bildirimleri açılır.
    "zenMode.silentNotifications" : doğru ,
  
    // Dosya Gezgini
  
    // Gezginin dosyaları açarken otomatik olarak gösterip seçmemesini kontrol eder.
    // - true: Dosyalar gösterilecek ve seçilecektir.
    // - false: Dosyalar gösterilmeyecek ve seçilmeyecektir.
    // - focusNoScroll: Dosyalar görünüme kaydırılmaz, ancak yine de odaklanılır.
    "explorer.autoReveal" : doğru ,
  
    // Gezginin klasörleri kompakt bir biçimde oluşturup oluşturmayacağını kontrol eder. Böyle bir biçimde, tekli alt klasörler, birleştirilmiş bir ağaç öğesinde sıkıştırılacaktır. Örneğin Java paket yapıları için kullanışlıdır.
    "explorer.compactFolders" : doğru ,
  
    // Gezginin çöp kutusu aracılığıyla bir dosyayı silerken onay isteyip istemeyeceğini kontrol eder.
    "explorer.confirmDelete" : doğru ,
  
    // Dosyaları ve klasörleri sürükle ve bırak yoluyla taşımak için gezgin tarafından onay isteyip istemeyeceğini kontrol eder.
    "explorer.confirmDragAndDrop" : doğru ,
  
    // Göreli dosya yollarını kopyalarken kullanılan yol ayırma karakteri.
    // - /: Yol ayırma karakteri olarak eğik çizgi kullanın.
    // - \: Yol ayırma karakteri olarak ters eğik çizgi kullanın.
    // - otomatik: İşletim sistemine özgü yol ayırma karakterini kullanır.
    "explorer.copyRelativePathSeparator" : " auto " ,
  
    // Dosya süslemelerinin rozet kullanıp kullanmayacağını kontrol eder.
    "explorer.decorations.badges" : doğru ,
  
    // Dosya süslemelerinin renkleri kullanıp kullanmayacağını kontrol eder.
    "explorer.decorations.colors" : doğru ,
  
    // Gezginin dosya ve klasörleri sürükle ve bırak yoluyla taşımaya izin verip vermeyeceğini kontrol eder. Bu ayar yalnızca gezgin içinden sürükleyip bırakma işlemini etkiler.
    "explorer.enableDragAndDrop" : doğru ,
  
    // Başlatma sırasında Explorer'ın yalnızca bir klasör içeren çok köklü çalışma alanlarını genişletmesi gerekip gerekmediğini kontrol eder
    "explorer.expandSingleFolderWorkspaces" : true ,
  
    // Yapıştırırken yinelenen bir gezgin öğesine yeni bir ad verirken hangi adlandırma stratejisinin kullanılacağını kontrol eder.
    // - basit: Çoğaltılan adın sonuna "kopyala" kelimesini ve ardından muhtemelen bir sayı ekler
    // - akıllı: Yinelenen adın sonuna bir sayı ekler. Bir sayı zaten adın bir parçasıysa, bu sayıyı artırmaya çalışır
    "explorer.incrementalAdlandırma" : " basit " ,
  
    // Düzenleyicileri Aç bölmesindeki düzenleyicilerin sıralama düzenini kontrol eder.
    // - editorOrder: Editörler, editör sekmeleri gösterildiği gibi aynı sırada sıralanır.
    // - alfabetik: Düzenleyiciler, her düzenleyici grubu içinde alfabetik sıraya göre sıralanır.
    "explorer.openEditors.sortOrder" : " editorOrder " ,
  
    // Düzenleyicileri Aç bölmesinde gösterilen düzenleyici sayısı. Bunu 0'a ayarlamak Editörleri Aç bölmesini gizler.
    "explorer.openEditors.visible" : 9 ,
  
    // Gezginde dosya ve klasörlerin özellik tabanlı sıralamasını kontrol eder.
    // - varsayılan: Dosyalar ve klasörler adlarına göre sıralanır. Klasörler dosyalardan önce görüntülenir.
    // - karışık: Dosyalar ve klasörler adlarına göre sıralanır. Dosyalar klasörlerle iç içedir.
    // - filesFirst: Dosyalar ve klasörler adlarına göre sıralanır. Dosyalar, klasörlerden önce görüntülenir.
    // - tür: Dosyalar ve klasörler uzantı türüne göre gruplandırılır ve ardından adlarına göre sıralanır. Klasörler dosyalardan önce görüntülenir.
    // - değiştirildi: Dosyalar ve klasörler, azalan düzende son değiştirilme tarihine göre sıralanır. Klasörler dosyalardan önce görüntülenir.
    "explorer.sortOrder" : " varsayılan " ,
  
    // Explorer'da dosya ve klasör adlarının sözlükbilimsel sıralamasını kontrol eder.
    // - varsayılan: Büyük harf ve küçük harf adları birlikte karıştırılır.
    // - üst: Büyük harf adları, küçük harf adlarından önce birlikte gruplanır.
    // - alt: Küçük harf adları, büyük harf adlarından önce gruplandırılır.
    // - unicode: İsimler Unicode sırasına göre sıralanır.
    "explorer.sortOrderLexicographicOptions" : " varsayılan " ,
  
    // Aramak
  
    // Arama görünümündeki satırlardaki eylem çubuğunun konumunu kontrol eder.
    // - otomatik: Arama görünümü dar olduğunda eylem çubuğunu sağa ve arama görünümü geniş olduğunda içeriğin hemen sonrasına konumlandırın.
    // - sağ: Eylem çubuğunu her zaman sağa konumlandırın.
    "search.actionsPosition" : " sağ " ,
  
    // Arama sonuçlarının daraltılıp daraltılmayacağını kontrol eder.
    // - otomatik: 10'dan az sonucu olan dosyalar genişletilir. Diğerleri çökmüş.
    // - her zamanDaralt
    // - her zamanGenişlet
    "search.collapseResults" : " AlwaysExpand " ,
  
    // Tam metin aramalarında ve hızlı açmada dosya ve klasörleri hariç tutmak için glob kalıplarını yapılandırın. Tüm glob kalıplarını "files.exclude" ayarından devralır.
    "arama.hariç tutma" : {
      "**/node_modules" : doğru ,
      "**/bower_components" : doğru ,
      "**/*.kod arama" : doğru
    },
  
    // Arama sırasında sembolik bağlantıların izlenip izlenmeyeceğini kontrol eder.
    "search.followSymlinks" : doğru ,
  
    // Arama görünümünün macOS'ta paylaşılan bulma panosunu okuması veya değiştirmesi gerekip gerekmediğini kontrol eder.
    "search.globalFindClipboard" : false ,
  
    // Yeni "Arama: Dosyalarda Bul" ve "Klasörde Bul" işlemlerinin nerede yapıldığını kontrol eder: kenar çubuğunun arama görünümünde veya bir arama düzenleyicisinde
    // - görünüm: Panelde veya kenar çubuğunda arama görünümünde arama yapın.
    // - reuseEditor: Varsa mevcut bir arama düzenleyicide, aksi takdirde yeni bir arama düzenleyicide arama yapın.
    // - newEditor: Yeni bir arama düzenleyicide arama yapın.
    "search.mode" : " görünüm " ,
  
    // Filtreleme sırasında hızlı açılışta editör geçmişinin sıralama düzenini kontrol eder.
    // - varsayılan: Geçmiş girişleri, kullanılan filtre değerine göre alaka düzeyine göre sıralanır. Önce daha alakalı girişler görünür.
    // - yenilik: Geçmiş girişleri yeniliğe göre sıralanır. Daha yakın zamanda açılan girişler önce görünür.
    "search.quickOpen.history.filterSortOrder" : " varsayılan " ,
  
    // Hızlı Aç için dosya sonuçlarına en son açılan dosyalardan elde edilen sonuçların dahil edilip edilmeyeceği.
    "search.quickOpen.includeHistory" : doğru ,
  
    // Hızlı Aç için dosya sonuçlarına genel bir sembol aramasından elde edilen sonuçların dahil edilip edilmeyeceği.
    "search.quickOpen.includeSymbols" : yanlış ,
  
    // Yeni Arama Düzenleyicileri oluştururken kullanılacak varsayılan çevreleyen bağlam satırı sayısı. "search.searchEditor.reusePriorSearchConfiguration" kullanılıyorsa, önceki Arama Düzenleyicisi yapılandırmasını kullanmak için bu, "boş" (boş) olarak ayarlanabilir.
    "search.searchEditor.defaultNumberOfContextLines" : 1 ,
  
    // Bir arama düzenleyicide bir sonuca çift tıklamanın etkisini yapılandırın.
    // - selectWord: Çift tıklama, imlecin altındaki sözcüğü seçer.
    // - goToLocation: Çift tıklama sonucu aktif editör grubunda açar.
    // - openLocationToSide: Çift tıklama, editör grubundaki sonucu yana açar ve henüz mevcut değilse bir tane oluşturur.
    "search.searchEditor.doubleClickBehaviour" : " goToLocation " ,
  
    // Etkinleştirildiğinde, yeni Arama Düzenleyicileri, daha önce açılmış Arama Düzenleyicisinin içerme, hariç tutma ve bayraklarını yeniden kullanır.
    "search.searchEditor.reusePriorSearchConfiguration" : false ,
  
    // Yazarken tüm dosyaları arayın.
    "search.searchOnType" : doğru ,
  
    // `search.searchOnType` etkinleştirildiğinde, yazılan karakter ile aramanın başlaması arasındaki zaman aşımını milisaniye cinsinden kontrol eder. `search.searchOnType` devre dışı bırakıldığında hiçbir etkisi yoktur.
    "search.searchOnTypeDebouncePeriod" : 300 ,
  
    // Arama görünümüne odaklanırken, arama sorgusunu düzenleyicinin seçilen metnine güncelleyin. Bu, ya tıklandığında ya da `workbench.views.search.focus' komutu tetiklendiğinde olur.
    "search.seedOnFocus" : yanlış ,
  
    // Etkin düzenleyicinin seçimi olmadığında, imlece en yakın kelimeden tohumlama aramasını etkinleştirin.
    "search.seedWithNearestWord" : yanlış ,
  
    // Arama sonuçları için satır numaralarının gösterilip gösterilmeyeceğini kontrol eder.
    "search.showLineNumbers" : yanlış ,
  
    // Kalıbın tamamı küçük harf ise büyük/küçük harfe duyarlı olmadan arayın, aksi takdirde büyük/küçük harfe duyarlı olarak arayın.
    "search.smartCase" : yanlış ,
  
    // Arama sonuçlarının sırasını kontrol eder.
    // - varsayılan: Sonuçlar, klasör ve dosya adlarına göre alfabetik sıraya göre sıralanır.
    // - dosya Adları: Sonuçlar, klasör sırasını dikkate almadan dosya adlarına göre alfabetik sıraya göre sıralanır.
    // - tür: Sonuçlar, dosya uzantılarına göre alfabetik sıraya göre sıralanır.
    // - değiştirildi: Sonuçlar dosyanın son değiştirilme tarihine göre azalan düzende sıralanır.
    // - sayAzalan: Sonuçlar azalan düzende dosya başına sayıya göre sıralanır.
    // - sayım Artan: Sonuçlar artan düzende dosya başına sayıya göre sıralanır.
    "search.sortOrder" : " varsayılan " ,
  
    // Dosya ararken global `.gitignore` ve `.ignore` dosyalarının kullanılıp kullanılmayacağını kontrol eder. "search.useIgnoreFiles"ın etkinleştirilmesini gerektirir.
    "search.useGlobalIgnoreFiles" : yanlış ,
  
    // Dosya ararken `.gitignore` ve `.ignore` dosyalarının kullanılıp kullanılmayacağını kontrol eder.
    "search.useIgnoreFiles" : doğru ,
  
    // Bir eşleşme seçilirken veya değiştirilirken Önizlemeyi Değiştir'in açılıp açılmayacağını kontrol eder.
    "search.useReplacePreview" : doğru ,
  
    //HTTP
  
    // Kullanılacak proxy ayarı. Ayarlanmazsa, "http_proxy" ve "https_proxy" ortam değişkenlerinden devralınır.
    "http.proxy" : " " ,
  
    // Her ağ isteği için "Proxy-Authorization" başlığı olarak gönderilecek değer.
    "http.proxyAuthorization" : boş ,
  
    // Proxy sunucu sertifikasının sağlanan CA'lar listesine göre doğrulanıp doğrulanmayacağını kontrol eder.
    "http.proxyStrictSSL" : doğru ,
  
    // Uzantılar için proxy desteğini kullanın.
    // - kapalı: Uzantılar için proxy desteğini devre dışı bırakın.
    // - açık: Uzantılar için proxy desteğini etkinleştirin.
    // - geri dönüş: Uzantılar için proxy desteğini etkinleştirin, proxy bulunamadığında istek seçeneklerine geri dönün.
    // - geçersiz kıl: Uzantılar için proxy desteğini etkinleştir, istek seçeneklerini geçersiz kıl.
    "http.proxySupport" : " geçersiz kıl " ,
  
    // CA sertifikalarının işletim sisteminden yüklenip yüklenmeyeceğini kontrol eder. (Windows ve macOS'ta, bu kapatıldıktan sonra pencerenin yeniden yüklenmesi gerekir.)
    "http.systemCertificates" : doğru ,
  
    // Tuş takımı
  
    // "kod" (önerilen) veya "anahtarKodu" kullanmak üzere tuşlara basılması için dağıtım mantığını kontrol eder.
    "keyboard.dispatch" : " kod " ,
  
    // Varsa klavyedeki macOS dokunmatik çubuk düğmelerini etkinleştirir.
    "keyboard.touchbar.enabled" : true ,
  
    // Dokunmatik çubukta görünmemesi gereken girişler için bir dizi tanımlayıcı (örneğin, `workbench.action.navigateBack`).
    "keyboard.touchbar.ignored" : [],
  
    // Güncelleme
  
    // Windows'ta arka planda yeni VS Kodu sürümlerini indirmeyi ve yüklemeyi etkinleştirin.
    "update.enableWindowsBackgroundUpdates" : true ,
  
    // Otomatik güncellemeleri alıp almayacağınızı yapılandırın. Değişiklikten sonra yeniden başlatma gerektirir. Güncelleştirmeler bir Microsoft çevrimiçi hizmetinden alınır.
    // - yok: Güncellemeleri devre dışı bırakın.
    // - manuel: Otomatik arka plan güncelleme kontrollerini devre dışı bırakın. Güncellemeleri manuel olarak kontrol ederseniz güncellemeler kullanılabilir olacaktır.
    // - start: Yalnızca başlangıçta güncellemeleri kontrol edin. Otomatik arka plan güncelleme kontrollerini devre dışı bırakın.
    // - varsayılan: Otomatik güncelleme kontrollerini etkinleştir. Kod, güncellemeleri otomatik olarak ve periyodik olarak kontrol edecektir.
    "update.mode" : " varsayılan " ,
  
    // Güncellemeden sonra Sürüm Notlarını göster. Sürüm Notları, bir Microsoft çevrimiçi hizmetinden alınır.
    "update.showReleaseNotes" : doğru ,
  
    // Hata ayıklama
  
    // Yorumlar panelinin ne zaman açılacağını kontrol eder.
    "comments.openPanel" : " openOnSessionStartWithComments " ,
  
    // Herhangi bir dosyada kesme noktalarının ayarlanmasına izin ver.
    "debug.allowBreakpointsEverywhere" : false ,
  
    // Etkin hata ayıklama oturumları varsa pencere kapandığında onaylanıp onaylanmayacağını kontrol eder.
    // - asla: Asla onaylama.
    // - her zaman: Hata ayıklama oturumları olup olmadığını her zaman onaylayın.
    "debug.confirmOnExit" : " asla " ,
  
    // Hata Ayıklama Konsolunda Enter'da önerilerin kabul edilip edilmeyeceğini kontrol eder. Enter, Hata Ayıklama Konsolunda yazılanları değerlendirmek için de kullanılır.
    "debug.console.accept RecommendionOnEnter" : " kapalı " ,
  
    // Hata ayıklama oturumu sona erdiğinde hata ayıklama konsolunun otomatik olarak kapatılıp kapatılmayacağını kontrol eder.
    "debug.console.closeOnEnd" : yanlış ,
  
    // Hata ayıklama konsolunun aynı satırları daraltıp daraltmayacağını ve bir rozetle birlikte birkaç oluşum gösterip göstermediğini kontrol eder.
    "debug.console.collapseIdenticalLines" : true ,
  
    // Hata ayıklama konsolundaki yazı tipi ailesini kontrol eder.
    "debug.console.fontFamily" : " varsayılan " ,
  
    // Hata ayıklama konsolunda yazı tipi boyutunu piksel cinsinden kontrol eder.
    "debug.console.fontSize" : 14 ,
  
    // Hata ayıklama konsolunun önceden yazılmış girişi önermesi gerekip gerekmediğini kontrol eder.
    "debug.console.historyÖneriler" : doğru ,
  
    // Hata ayıklama konsolunda piksel cinsinden satır yüksekliğini kontrol eder. Yazı tipi boyutundan satır yüksekliğini hesaplamak için 0 kullanın.
    "debug.console.lineHeight" : 0 ,
  
    // Hata ayıklama konsolunda satırların kaydırılıp kaydırılmayacağını kontrol eder.
    "debug.console.wordWrap" : doğru ,
  
    // Hata ayıklayıcı bozulduğunda çalışma ekranı penceresinin odaklanıp odaklanmayacağını kontrol eder.
    "debug.focusWindowOnBreak" : doğru ,
  
    // Hata ayıklarken düzenleyicide değişken değerlerini satır içi göster.
    // - true: Hata ayıklama sırasında düzenleyicide değişken değerlerini her zaman satır içinde göster.
    // - false: Hata ayıklama sırasında asla düzenleyicide değişken değerleri satır içinde gösterme.
    // - otomatik: Dil satır içi değer konumlarını desteklediğinde hata ayıklama sırasında düzenleyicide değişken değerleri satır içinde göster.
    "debug.inlineValues" : " otomatik " ,
  
    // Dahili hata ayıklama konsolunun ne zaman açılacağını kontrol eder.
    "debug.internalConsoleOptions" : " openOnFirstSessionStart " ,
  
    // PreLaunchTask çalıştırıldıktan sonra hatalarla karşılaşıldığında ne yapılacağını kontrol eder.
    // - debugAnyway: Görev hatalarını yoksay ve hata ayıklamaya başla.
    // - showErrors: Sorunlar görünümünü gösterin ve hata ayıklamaya başlamayın.
    // - komut istemi: Kullanıcıya sor.
    // - iptal: Hata ayıklamayı iptal et.
    "debug.onTaskErrors" : " istemi " ,
  
    // Hata ayıklama görünümünün ne zaman açılacağını kontrol eder.
    "debug.openDebug" : " openOnDebugBreak " ,
  
    // Hata ayıklama oturumunun sonunda gezgin görünümünü otomatik olarak aç.
    "debug.openExplorerOnEnd" : yanlış ,
  
    // Hata ayıklama oturumu başlatmadan önce hangi düzenleyicilerin kaydedileceğini kontrol eder.
    // - allEditorsInActiveGroup: Bir hata ayıklama oturumu başlatmadan önce aktif gruptaki tüm düzenleyicileri kaydedin.
    // - nonUntitledEditorsInActiveGroup: Bir hata ayıklama oturumu başlatmadan önce, adsız olanlar dışında etkin gruptaki tüm düzenleyicileri kaydedin.
    // - yok: Hata ayıklama oturumu başlatmadan önce hiçbir düzenleyiciyi kaydetmeyin.
    "debug.saveBeforeStart" : " allEditorsInActiveGroup " ,
  
    // Genel bakış cetvelinde kesme noktalarının gösterilip gösterilmeyeceğini kontrol eder.
    "debug.showBreakpointsInOverviewRuler" : yanlış ,
  
    // Hata ayıklama sırasında düzenleyicide satır içi kesme noktaları aday süslemelerinin gösterilip gösterilmeyeceğini kontrol eder.
    "debug.showInlineBreakpointCandidates" : doğru ,
  
    // Hata ayıklama durum çubuğunun ne zaman görüneceğini kontrol eder.
    // - asla: Durum çubuğunda hata ayıklamayı asla gösterme
    // - her zaman: Hata ayıklamayı her zaman durum çubuğunda göster
    // - onFirstSessionStart: Hata ayıklamayı yalnızca hata ayıklama ilk kez başlatıldıktan sonra durum çubuğunda göster
    "debug.showInStatusBar" : " onFirstSessionStart " ,
  
    // Hata ayıklama alt oturumlarının hata ayıklama araç çubuğunda gösterilip gösterilmeyeceğini kontrol eder. Bu ayar yanlış olduğunda, bir alt oturumdaki durdurma komutu, üst oturumu da durduracaktır.
    "debug.showSubSessionsInToolBar" : yanlış ,
  
    // Entegre veya harici bir terminalde yeni bir hata ayıklama oturumu başlatmadan önce terminali temizleyin.
    "debug.terminal.clearBeforeReusing" : false ,
  
    // Hata ayıklama araç çubuğunun konumunu kontrol eder. Tüm görünümlerde "kayan", hata ayıklama görünümünde "yerleştirilmiş" veya "gizli".
    "debug.toolBarLocation" : " kayan " ,
  
    // Global hata ayıklama başlatma yapılandırması. Çalışma alanları arasında paylaşılan 'launch.json'a alternatif olarak kullanılmalıdır.
    "lansman" : {
      "yapılandırmalar" : [],
      "bileşikler" : []
    },
  
    // HTML
  
    // HTML etiketlerinin otomatik kapanmasını etkinleştirin/devre dışı bırakın.
    "html.autoClosingTags" : true ,
  
    // Tamamlama kabul edildiğinde öznitelikler için varsayılan değeri kontrol eder.
    // - doublequotes: Öznitelik değeri "" olarak ayarlandı.
    // - singlequotes: Öznitelik değeri '' olarak ayarlandı.
    // - boş: Özellik değeri ayarlanmadı.
    "html.completion.attributeDefaultValue" : " doublequotes " ,
  
    // Özel veri biçimini izleyen JSON dosyalarına işaret eden göreli dosya yollarının listesi.
    // VS Code, JSON dosyalarında belirttiğiniz özel HTML etiketleri, öznitelikleri ve öznitelik değerleri için HTML desteğini geliştirmek için başlangıçta özel veriler yükler.
    // Dosya yolları çalışma alanına göredir ve yalnızca çalışma alanı klasör ayarları dikkate alınır.
    "html.customData" : [],
  
    // İçeriğin yeniden biçimlendirilmemesi gereken, virgülle ayrılmış etiketlerin listesi. "null", varsayılan olarak "pre" etiketine dönüşür.
    "html.format.contentUnformatted" : " pre,code,textarea " ,
  
    // Varsayılan HTML biçimlendiriciyi etkinleştir/devre dışı bırak.
    "html.format.enable" : doğru ,
  
    // Yeni satırla bitir.
    "html.format.endWithNewline" : yanlış ,
  
    // Önlerinde fazladan bir yeni satır olması gereken, virgülle ayrılmış etiketlerin listesi. "null" varsayılan olarak "head, body, /html"' şeklindedir.
    "html.format.extraLiners" : " head, body, /html " ,
  
    // Biçimlendir ve `` içine girin.
    "html.format.indentHandlebars" : false ,
  
    // `<head>` ve `<body>` bölümlerine girinti yapın.
    "html.format.indentInnerHtml" : yanlış ,
  
    // Bir yığında korunacak maksimum satır sonu sayısı. Sınırsız için 'null' kullanın.
    "html.format.maxPreserveNewLines" : boş ,
  
    // Öğelerin korunmasından önce var olan satırın kesilip kesilmeyeceğini kontrol eder. Etiketlerin içinde veya metin için değil, yalnızca öğelerden önce çalışır.
    "html.format.preserveNewLines" : doğru ,
  
    // Django, erb, gidon ve php şablonlama dil etiketlerini onurlandırın.
    "html.format.templating" : yanlış ,
  
    // Yeniden biçimlendirilmemesi gereken virgülle ayrılmış etiketlerin listesi.
    "html.format.unformatted" : " wbr " ,
  
    // Metin içeriğini bu dize arasında bir arada tut.
    "html.format.unformattedContentDelimiter" : " " ,
  
    // Nitelikleri kaydır.
    // - auto: Nitelikleri yalnızca satır uzunluğu aşıldığında kaydır.
    // - force: İlk hariç her özelliği sar.
    // - zorla hizalanmış: İlki hariç her özelliği sarın ve hizalı tutun.
    // - zorla-genişlet-çoklu satır: Her bir özelliği sarın.
    // - hizalı-çoklu: Satır uzunluğu aşıldığında kaydır, nitelikleri dikey olarak hizala.
    // - koru: Niteliklerin kaydırılmasını koru.
    // - hizalı koru: Niteliklerin sarılmasını koru, ancak hizala.
    "html.format.wrapAttributes" : " otomatik " ,
  
    // Sarılmış öznitelikleri N karakterden sonra girintileyin. Varsayılan girinti boyutunu kullanmak için "null"u kullanın. "html.format.wrapAttributes" "hizalanmış" olarak ayarlanmışsa yoksayılır.
    "html.format.wrapAttributesIndentSize" : boş ,
  
    // Satır başına maksimum karakter sayısı (0 = devre dışı).
    "html.format.wrapLineLength" : 120 ,
  
    // Fareyle üzerine gelindiğinde etiket ve nitelik belgelerini göster.
    "html.hover.documentation" : doğru ,
  
    // Fareyle üzerine gelindiğinde MDN referanslarını göster.
    "html.hover.references" : doğru ,
  
    // Yerleşik HTML dil desteğinin HTML5 etiketleri, özellikleri ve değerleri önerip önermediğini kontrol eder.
    "html.suggest.html5" : doğru ,
  
    // VS Kodu ile HTML dil sunucusu arasındaki iletişimi izler.
    "html.trace.server" : " kapalı " ,
  
    // Yerleşik HTML dil desteğinin gömülü komut dosyalarını doğrulayıp doğrulamadığını kontrol eder.
    "html.validate.scripts" : doğru ,
  
    // Yerleşik HTML dili desteğinin gömülü stilleri doğrulayıp doğrulamadığını kontrol eder.
    "html.validate.styles" : doğru ,
  
    // JSON
  
    // Varsayılan JSON biçimlendiriciyi etkinleştir/devre dışı bırak
    "json.format.enable" : doğru ,
  
    // Hesaplanan maksimum anahat sembolü ve katlama bölgesi sayısı (performans nedenleriyle sınırlıdır).
    "json.maxItemsComputed" : 5000 ,
  
    // Etkinleştirildiğinde, JSON şemaları http ve https konumlarından alınabilir.
    "json.schemaDownload.enable" : doğru ,
  
    // Geçerli projedeki şemaları JSON dosyalarıyla ilişkilendirin.
    "json.schemas" : [],
  
    // VS Kodu ile JSON dil sunucusu arasındaki iletişimi izler.
    "json.trace.server" : " kapalı " ,
  
    // İşaretleme
  
    // Markdown dosyalarındaki bağlantıların nerede açılacağını kontrol eder.
    // - currentGroup: Etkin düzenleyici grubundaki bağlantıları açın.
    // - yanında: Etkin düzenleyicinin yanındaki bağlantıları açın.
    " markdown.links.openLocation" : " currentGroup " ,
  
    // Markdown önizlemesinde satır sonlarının nasıl oluşturulacağını ayarlar. Bunu 'true' olarak ayarlamak, paragrafların içindeki yeni satırlar için bir <br> oluşturur.
    "markdown.preview.breaks" : yanlış ,
  
    // Editöre geçmek için Markdown önizlemesine çift tıklayın.
    "markdown.preview.doubleClickToSwitchToEditor" : true ,
  
    // Markdown önizlemesinde kullanılan yazı tipi ailesini kontrol eder.
    "markdown.preview.fontFamily" : " -apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif " ,
  
    // Markdown önizlemesinde kullanılan piksel cinsinden yazı tipi boyutunu kontrol eder.
    "markdown.preview.fontSize" : 14 ,
  
    // Markdown önizlemesinde kullanılan satır yüksekliğini kontrol eder. Bu sayı yazı tipi boyutuna göredir.
    "markdown.preview.lineHeight" : 1.6 ,
  
    // Markdown önizlemesinde URL benzeri metnin bağlantılara dönüştürülmesini etkinleştirin veya devre dışı bırakın.
    "markdown.preview.linkify" : doğru ,
  
    // Markdown önizlemesinde geçerli düzenleyici seçimini işaretleyin.
    "markdown.preview.markEditorSelection" : doğru ,
  
    // Markdown önizlemesindeki diğer Markdown dosyalarına bağlantıların nasıl açılacağını kontrol eder.
    // - inPreview: Bağlantıları Markdown önizlemesinde açmayı deneyin.
    // - inEditor: Bağlantıları düzenleyicide açmayı deneyin.
    " markdown.preview.openMarkdownLinks" : " inPreview " ,
  
    // Markdown önizlemesi kaydırıldığında, düzenleyicinin görünümünü güncelleyin.
    "markdown.preview.scrollEditorWithPreview" : true ,
  
    // Bir Markdown düzenleyicisi kaydırıldığında, önizleme görünümünü güncelleyin.
    "markdown.preview.scrollPreviewWithEditor" : true ,
  
    // Markdown önizlemesinde dilden bağımsız değiştirme ve tırnak güzelleştirmeyi etkinleştirin veya devre dışı bırakın.
    "markdown.preview.typographer" : yanlış ,
  
    // Markdown önizlemesinden kullanılacak CSS stil sayfalarına giden URL'lerin veya yerel yolların listesi. Göreli yollar, Explorer'da açık olan klasöre göre yorumlanır. Açık klasör yoksa, bunlar Markdown dosyasının konumuna göre yorumlanır. Tüm '\' '\\' olarak yazılmalıdır.
    "markdown.styles" : [],
  
    // Markdown uzantısı için hata ayıklama günlüğünü etkinleştirin.
    "markdown.trace" : " kapalı " ,
  
    // PHP
  
    // Yerleşik PHP dil önerilerinin etkinleştirilip etkinleştirilmediğini kontrol eder. Destek, PHP globallerini ve değişkenlerini önerir.
    "php.suggest.basic" : doğru ,
  
    // Yerleşik PHP doğrulamasını etkinleştir/devre dışı bırak.
    "php.validate.enable" : doğru ,
  
    // PHP yürütülebilir dosyasını gösterir.
    "php.validate.executablePath" : boş ,
  
    // Linter'in kayıtta mı yoksa tipte mi çalıştırıldığı.
    "php.validate.run" : " onSave " ,
  
    // TypeScript
  
    // JSX etiketlerinin otomatik kapanmasını etkinleştirin/devre dışı bırakın.
    "javascript.autoClosingTags" : doğru ,
  
    // Varsayılan JavaScript biçimlendiriciyi etkinleştir/devre dışı bırak.
    "javascript.format.enable" : doğru ,
  
    // Bir virgül sınırlayıcıdan sonra boşluk işlemeyi tanımlar.
    "javascript.format.insertSpaceAfterCommaDelimiter" : true ,
  
    // Yapıcı anahtar sözcüğünden sonra boşluk işlemeyi tanımlar.
    "javascript.format.insertSpaceAfterConstructor" : false ,
  
    // Anonim işlevler için işlev anahtar sözcüğünden sonra boşluk işlemeyi tanımlar.
    "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions" : true ,
  
    // Bir kontrol akışı deyiminde anahtar sözcüklerden sonra boşluk işlemeyi tanımlar.
    "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements" : true ,
  
    // Boş parantezleri açtıktan sonra ve kapatmadan önce boşluk işlemeyi tanımlar.
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces" : true ,
  
    // JSX ifade parantezlerini açtıktan sonra ve kapatmadan önce boşluk işlemeyi tanımlar.
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces" : false ,
  
    // Boş olmayan parantezleri açtıktan sonra ve kapatmadan önce boşluk işlemeyi tanımlar.
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces" : true ,
  
    // Boş olmayan parantezleri açtıktan sonra ve kapatmadan önce boşluk kullanımını tanımlar.
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets" : false ,
  
    // Boş olmayan parantezleri açtıktan sonra ve kapatmadan önce boşluk işlemeyi tanımlar.
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis" : false ,
  
    // Şablon dizi ayraçlarını açtıktan sonra ve kapatmadan önce boşluk işlemeyi tanımlar.
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces" : false ,
  
    // Bir for ifadesinde noktalı virgülden sonra boşluk işlemeyi tanımlar.
    "javascript.format.insertSpaceAfterSemicolonInForStatements" : true ,
  
    // Bir ikili işleçten sonra boşluk işlemeyi tanımlar.
    "javascript.format.insertSpaceBeforeAndAfterBinaryOperators" : true ,
  
    // İşlev argümanı parantezlerinden önce boşluk işlemeyi tanımlar.
    "javascript.format.insertSpaceBeforeFunctionParenthesis" : false ,
  
    // Kontrol blokları için yeni bir satıra bir açık ayraç konup konulmayacağını tanımlar.
    "javascript.format.placeOpenBraceOnNewLineForControlBlocks" : false ,
  
    // Fonksiyonlar için yeni bir satıra açık ayraç konup konulmayacağını tanımlar.
    "javascript.format.placeOpenBraceOnNewLineForFunctions" : false ,
  
    // İsteğe bağlı noktalı virgüllerin işlenmesini tanımlar. Çalışma alanında TypeScript 3.7 veya daha yenisinin kullanılmasını gerektirir.
    // - yoksay: Noktalı virgül eklemeyin veya kaldırmayın.
    // - insert: İfade uçlarına noktalı virgül ekleyin.
    // - kaldır: Gereksiz noktalı virgülleri kaldırın.
    "javascript.format.semiviron" : " yoksay " ,
  
    // Enum bildirimlerinde üye değerleri için yerleşik ipuçlarını etkinleştirin/devre dışı bırakın:
    "javascript.inlayHints.enumMemberValues.enabled" : false ,
  
    // İşlev imzalarındaki örtük dönüş türleri için yerleşik ipuçlarını etkinleştirin/devre dışı bırakın:
    "javascript.inlayHints.functionLikeReturnTypes.enabled" : false ,
  
    // Parametre adları için yerleşik ipuçlarını etkinleştirin/devre dışı bırakın:
    "javascript.inlayHints.parameterNames.enabled" : " yok " ,
  
    // Metni parametre adıyla aynı olan argümanlarda parametre adı ipuçlarını gizle.
    "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName" : true ,
  
    // Örtük parametre türleri için yerleşik ipuçlarını etkinleştirin/devre dışı bırakın:
    "javascript.inlayHints.parameterTypes.enabled" : false ,
  
    // Özellik bildirimlerinde örtük türler için yerleştirme ipuçlarını etkinleştirin/devre dışı bırakın:
    "javascript.inlayHints.propertyDeclarationTypes.enabled" : false ,
  
    // Örtük değişken türleri için yerleştirme ipuçlarını etkinleştirin/devre dışı bırakın:
    "javascript.inlayHints.variableTypes.enabled" : false ,
  
    // Otomatik içe aktarmalar için tercih edilen yol stili.
    // - en kısa: Göreli içe aktarmadan daha az yol kesimine sahip bir tane varsa, göreli olmayan bir içe aktarmayı tercih eder.
    // - göreceli: İçe aktarılan dosya konumuna göreli bir yol tercih eder.
    // - göreceli olmayan: "jsconfig.json" / "tsconfig.json" dosyanızda yapılandırılan "baseUrl" veya "yollar"a dayalı göreli olmayan bir içe aktarmayı tercih eder.
    // - projeye bağlı: Yalnızca göreli içe aktarma yolu paketten veya proje dizininden ayrılacaksa, göreli olmayan bir içe aktarmayı tercih eder. Çalışma alanında TypeScript 4.2+ kullanılmasını gerektirir.
    "javascript.preferences.importModuleSpecifier" : " en kısa " ,
  
    // Otomatik içe aktarmalar için tercih edilen yol sonu. Çalışma alanında TypeScript 4.5+ kullanılmasını gerektirir.
    // - otomatik: Bir varsayılan seçmek için proje ayarlarını kullanın.
    // - minimal: "./component/index.js" dosyasını "./component" olarak kısaltın.
    // - dizin: `./component/index.js` dosyasını `./component/index` olarak kısaltın.
    // - js: Yol sonlarını kısaltmayın; `.js` uzantısını dahil edin.
    "javascript.preferences.importModuleSpecifierEnding" : " auto " ,
  
    // JSX öznitelik tamamlamaları için tercih edilen stil.
    // - auto: Prop tipine göre öznitelik adlarından sonra `={}` veya `=""` ekleyin.
    // - kaşlı ayraçlar: Nitelik adlarından sonra `={}` ekleyin.
    // - yok: Yalnızca nitelik adlarını girin.
    "javascript.preferences.jsxAttributeCompletionStyle" : " auto " ,
  
    // Hızlı düzeltmeler için kullanılması tercih edilen alıntı stili: "tek" tırnaklar, "çift" tırnaklar veya mevcut içe aktarmalardan "otomatik" alıntı türü.
    "javascript.preferences.quoteStyle" : " auto " ,
  
    // 'typescript.preferences.renameShorthandProperties' ayarı, 'typescript.preferences.useAliasesForRenames' lehine kullanımdan kaldırıldı
    // Yeniden adlandırmalar sırasında nesne stenografi özellikleri için takma adların tanıtılmasını etkinleştirin/devre dışı bırakın. Çalışma alanında TypeScript 3.4 veya daha yenisinin kullanılmasını gerektirir.
    "javascript.preferences.renameShorthandProperties" : true ,
  
    // Yeniden adlandırmalar sırasında nesne stenografi özellikleri için takma adların tanıtılmasını etkinleştirin/devre dışı bırakın. Çalışma alanında TypeScript 3.4 veya daha yenisinin kullanılmasını gerektirir.
    "javascript.preferences.useAliasesForRenames" : true ,
  
    // JavaScript dosyalarında CodeLens referanslarını etkinleştirin/devre dışı bırakın.
    "javascript.referencesCodeLens.enabled" : yanlış ,
  
    // JavaScript dosyalarındaki tüm işlevlerde CodeLens referanslarını etkinleştirin/devre dışı bırakın.
    "javascript.referencesCodeLens.showOnAllFunctions" : false ,
  
    // Otomatik içe aktarma önerilerini etkinleştirin/devre dışı bırakın.
    "javascript.suggest.autoImports" : doğru ,
  
    // Sınıf üyeleri için snippet tamamlamalarını etkinleştirin/devre dışı bırakın.
    "javascript.suggest.classMemberSnippets.enabled" : true ,
  
    // Fonksiyonları parametre imzalarıyla tamamlayın.
    "javascript.suggest.completeFunctionCalls" : yanlış ,
  
    // JSDoc yorumlarını tamamlamak için öneriyi etkinleştirin/devre dışı bırakın.
    "javascript.suggest.completeJSDocs" : doğru ,
  
    // Otomatik tamamlama önerileri etkinleştirildi/devre dışı bırakıldı.
    "javascript.suggest.enabled" : doğru ,
  
    // İsteğe bağlı bir zincir çağrısı ekleyen potansiyel olarak tanımlanmamış değerlerde tamamlamaların gösterilmesini etkinleştirin/devre dışı bırakın. TS 3.7+ ve sıkı boş denetimlerin etkinleştirilmesini gerektirir.
    "javascript.suggest.includeAutomaticOptionalChainCompletions" : true ,
  
    // Kısmen yazılan içe aktarma ifadelerinde otomatik içe aktarma stili tamamlamaları etkinleştirin/devre dışı bırakın. Çalışma alanında TypeScript 4.3+ kullanılmasını gerektirir.
    "javascript.suggest.includeCompletionsForImportStatements" : true ,
  
    // JSDoc şablonları için "@return" ek açıklamaları oluşturmayı etkinleştirin/devre dışı bırakın. Çalışma alanında TypeScript 4.2+ kullanılmasını gerektirir.
    "javascript.suggest.jsdoc.generateReturns" : true ,
  
    // JavaScript önerilerinde dosyadan benzersiz adlar dahil etmeyi etkinleştirin/devre dışı bırakın. Ad önerilerinin, "@ts-check" veya "checkJs" kullanılarak anlamsal olarak kontrol edilen JavaScript kodunda her zaman devre dışı bırakıldığını unutmayın.
    "javascript.suggest.names" : doğru ,
  
    // import ifadelerinde ve gerekli çağrılarda yollar için önerileri etkinleştirin/devre dışı bırakın.
    "javascript.suggest.paths" : doğru ,
  
    // Düzenleyicide JavaScript dosyaları için öneri tanılamayı etkinleştirin/devre dışı bırakın.
    "javascript.suggestionActions.enabled" : doğru ,
  
    // VS Kodunda bir dosyayı yeniden adlandırdığınızda veya taşıdığınızda içe aktarma yollarının otomatik güncellenmesini etkinleştirin/devre dışı bırakın.
    // - komut istemi: Her yeniden adlandırmada istem.
    // - her zaman: Yolları her zaman otomatik olarak güncelle.
    // - asla: Asla yolları yeniden adlandırmayın ve sormayın.
    "javascript.updateImportsOnFileMove.enabled" : " komut istemi " ,
  
    // JavaScript doğrulamasını etkinleştir/devre dışı bırak.
    "javascript.validate.enable" : doğru ,
  
    // JavaScript dosyalarının anlamsal kontrolünü etkinleştirin/devre dışı bırakın. Mevcut "jsconfig.json" veya "tsconfig.json" dosyaları bu ayarı geçersiz kılar.
    "js/ts.implicitProjectConfig.checkJs" : false ,
  
    // Bir projenin parçası olmayan JavaScript ve TypeScript dosyalarındaki katı işlev türlerini etkinleştirin/devre dışı bırakın. Mevcut "jsconfig.json" veya "tsconfig.json" dosyaları bu ayarı geçersiz kılar.
    "js/ts.implicitProjectConfig.strictFunctionTypes" : true ,
  
    // Bir projenin parçası olmayan JavaScript ve TypeScript dosyalarında katı boş denetimleri etkinleştirin/devre dışı bırakın. Mevcut "jsconfig.json" veya "tsconfig.json" dosyaları bu ayarı geçersiz kılar.
    "js/ts.implicitProjectConfig.strictNullChecks" : false ,
  
    // JSX etiketlerinin otomatik kapanmasını etkinleştirin/devre dışı bırakın.
    "typescript.autoClosingTags" : true ,
  
    // Otomatik Tür Alımı için npm'nin kurulu olup olmadığını kontrol edin.
    "typescript.check.npmIsInstalled" : doğru ,
  
    // Otomatik tip alımını devre dışı bırakır. Otomatik tür edinme, harici kitaplıklar için IntelliSense'i geliştirmek için npm'den "@types" paketlerini getirir.
    "typescript.disableAutomaticTypeAcquisition" : false ,
  
    // Kullanıcılardan Intellisense için çalışma alanında yapılandırılmış TypeScript sürümünü kullanmalarının istenmesini sağlar.
    "typescript.enablePromptUseWorkspaceTsdk" : yanlış ,
  
    // Varsayılan TypeScript biçimlendiriciyi etkinleştirin/devre dışı bırakın.
    "typescript.format.enable" : doğru ,
  
    // Bir virgül sınırlayıcıdan sonra boşluk işlemeyi tanımlar.
    "typescript.format.insertSpaceAfterCommaDelimiter" : true ,
  
    // Yapıcı anahtar sözcüğünden sonra boşluk işlemeyi tanımlar.
    "typescript.format.insertSpaceAfterConstructor" : yanlış ,
  
    // Anonim işlevler için işlev anahtar sözcüğünden sonra boşluk işlemeyi tanımlar.
    "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions" : true ,
  
    // Bir kontrol akışı deyiminde anahtar sözcüklerden sonra boşluk işlemeyi tanımlar.
    "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements" : true ,
  
    // Boş parantezleri açtıktan sonra ve kapatmadan önce boşluk işlemeyi tanımlar.
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces" : true ,
  
    // JSX ifade parantezlerini açtıktan sonra ve kapatmadan önce boşluk işlemeyi tanımlar.
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces" : false ,
  
    // Boş olmayan parantezleri açtıktan sonra ve kapatmadan önce boşluk işlemeyi tanımlar.
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces" : true ,
  
    // Boş olmayan parantezleri açtıktan sonra ve kapatmadan önce boşluk kullanımını tanımlar.
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets" : false ,
  
    // Boş olmayan parantezleri açtıktan sonra ve kapatmadan önce boşluk işlemeyi tanımlar.
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis" : false ,
  
    // Şablon dizi ayraçlarını açtıktan sonra ve kapatmadan önce boşluk işlemeyi tanımlar.
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces" : false ,
  
    // Bir for ifadesinde noktalı virgülden sonra boşluk işlemeyi tanımlar.
    "typescript.format.insertSpaceAfterSemicolonInForStatements" : true ,
  
    // TypeScript'te tür onaylarından sonra boşluk işlemeyi tanımlar.
    "typescript.format.insertSpaceAfterTypeAssertion" : false ,
  
    // Bir ikili işleçten sonra boşluk işlemeyi tanımlar.
    "typescript.format.insertSpaceBeforeAndAfterBinaryOperators" : true ,
  
    // İşlev argümanı parantezlerinden önce boşluk işlemeyi tanımlar.
    "typescript.format.insertSpaceBeforeFunctionParenthesis" : false ,
  
    // Kontrol blokları için yeni bir satıra bir açık ayraç konup konulmayacağını tanımlar.
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks" : false ,
  
    // Fonksiyonlar için yeni bir satıra açık ayraç konup konulmayacağını tanımlar.
    "typescript.format.placeOpenBraceOnNewLineForFunctions" : false ,
  
    // İsteğe bağlı noktalı virgüllerin işlenmesini tanımlar. Çalışma alanında TypeScript 3.7 veya daha yenisinin kullanılmasını gerektirir.
    // - yoksay: Noktalı virgül eklemeyin veya kaldırmayın.
    // - insert: İfade uçlarına noktalı virgül ekleyin.
    // - kaldır: Gereksiz noktalı virgülleri kaldırın.
    "typescript.format.semiviron" : " yok say " ,
  
    // CodeLens uygulamalarını etkinleştir/devre dışı bırak. Bu CodeLens, bir arabirimin uygulayıcılarını gösterir.
    "typescript.implementationsCodeLens.enabled" : false ,
  
    // Enum bildirimlerinde üye değerleri için yerleşik ipuçlarını etkinleştirin/devre dışı bırakın:
    "typescript.inlayHints.enumMemberValues.enabled" : false ,
  
    // İşlev imzalarındaki örtük dönüş türleri için yerleşik ipuçlarını etkinleştirin/devre dışı bırakın:
    "typescript.inlayHints.functionLikeReturnTypes.enabled" : false ,
  
    // Parametre adları için yerleşik ipuçlarını etkinleştirin/devre dışı bırakın:
    "typescript.inlayHints.parameterNames.enabled" : " yok " ,
  
    // Metni parametre adıyla aynı olan argümanlarda parametre adı ipuçlarını gizle.
    "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName" : true ,
  
    // Örtük parametre türleri için yerleşik ipuçlarını etkinleştirin/devre dışı bırakın:
    "typescript.inlayHints.parameterTypes.enabled" : false ,
  
    // Özellik bildirimlerinde örtük türler için yerleştirme ipuçlarını etkinleştirin/devre dışı bırakın:
    "typescript.inlayHints.propertyDeclarationTypes.enabled" : false ,
  
    // Örtük değişken türleri için yerleştirme ipuçlarını etkinleştirin/devre dışı bırakın:
    "typescript.inlayHints.variableTypes.enabled" : false ,
  
    // JavaScript ve TypeScript hatalarını bildirmek için kullanılan yerel ayarı ayarlar. VS Kodunun yerel ayarını kullanmak için varsayılanlar.
    "typescript.locale" : " " ,
  
    // Otomatik Tür Alımı için kullanılan npm yürütülebilir dosyasının yolunu belirtir.
    "typescript.npm" : " " ,
  
    // Otomatik içe aktarmalar için tercih edilen yol stili.
    // - en kısa: Göreli içe aktarmadan daha az yol kesimine sahip bir tane varsa, göreli olmayan bir içe aktarmayı tercih eder.
    // - göreceli: İçe aktarılan dosya konumuna göreli bir yol tercih eder.
    // - göreceli olmayan: "jsconfig.json" / "tsconfig.json" dosyanızda yapılandırılan "baseUrl" veya "yollar"a dayalı göreli olmayan bir içe aktarmayı tercih eder.
    // - projeye bağlı: Yalnızca göreli içe aktarma yolu paketten veya proje dizininden ayrılacaksa, göreli olmayan bir içe aktarmayı tercih eder. Çalışma alanında TypeScript 4.2+ kullanılmasını gerektirir.
    "typescript.preferences.importModuleSpecifier" : " en kısa " ,
  
    // Otomatik içe aktarmalar için tercih edilen yol sonu.
    // - otomatik: Bir varsayılan seçmek için proje ayarlarını kullanın.
    // - minimal: "./component/index.js" dosyasını "./component" olarak kısaltın.
    // - dizin: `./component/index.js` dosyasını `./component/index` olarak kısaltın.
    // - js: Yol sonlarını kısaltmayın; `.js` uzantısını dahil edin.
    "typescript.preferences.importModuleSpecifierEnding" : " auto " ,
  
    // Kullanılabilir otomatik içe aktarmalar için "package.json" bağımlılıklarını aramayı etkinleştirin/devre dışı bırakın.
    // - otomatik: Tahmini performans etkisine göre bağımlılıkları arayın.
    // - açık: Daima bağımlılıkları ara.
    // - kapalı: Asla bağımlılıkları arama.
    "typescript.preferences.includePackageJsonAutoImports" : " auto " ,
  
    // JSX öznitelik tamamlamaları için tercih edilen stil.
    // - auto: Prop tipine göre öznitelik adlarından sonra `={}` veya `=""` ekleyin.
    // - kaşlı ayraçlar: Nitelik adlarından sonra `={}` ekleyin.
    // - yok: Yalnızca nitelik adlarını girin.
    "typescript.preferences.jsxAttributeCompletionStyle" : " otomatik " ,
  
    // Hızlı düzeltmeler için kullanılması tercih edilen alıntı stili: "tek" tırnaklar, "çift" tırnaklar veya mevcut içe aktarmalardan "otomatik" alıntı türü.
    "typescript.preferences.quoteStyle" : " otomatik " ,
  
    // Yeniden adlandırmalar sırasında nesne stenografi özellikleri için takma adların tanıtılmasını etkinleştirin/devre dışı bırakın. Çalışma alanında TypeScript 3.4 veya daha yenisinin kullanılmasını gerektirir.
    "typescript.preferences.useAliasesForRenames" : true ,
  
    // TypeScript dosyalarında CodeLens referanslarını etkinleştirin/devre dışı bırakın.
    "typescript.referencesCodeLens.enabled" : yanlış ,
  
    // TypeScript dosyalarındaki tüm işlevlerde CodeLens referanslarını etkinleştirin/devre dışı bırakın.
    "typescript.referencesCodeLens.showOnAllFunctions" : false ,
  
    // Stil kontrollerini uyarı olarak bildir.
    "typescript.reportStyleChecksAsWarnings" : doğru ,
  
    // Otomatik içe aktarma önerilerini etkinleştirin/devre dışı bırakın.
    "typescript.suggest.autoImports" : doğru ,
  
    // Sınıf üyeleri için snippet tamamlamalarını etkinleştirin/devre dışı bırakın.
    "typescript.suggest.classMemberSnippets.enabled" : true ,
  
    // Fonksiyonları parametre imzalarıyla tamamlayın.
    "typescript.suggest.completeFunctionCalls" : yanlış ,
  
    // JSDoc yorumlarını tamamlamak için öneriyi etkinleştirin/devre dışı bırakın.
    "typescript.suggest.completeJSDocs" : doğru ,
  
    // Otomatik tamamlama önerileri etkinleştirildi/devre dışı bırakıldı.
    "typescript.suggest.enabled" : doğru ,
  
    // İsteğe bağlı bir zincir çağrısı ekleyen potansiyel olarak tanımlanmamış değerlerde tamamlamaların gösterilmesini etkinleştirin/devre dışı bırakın. TS 3.7+ ve sıkı boş denetimlerin etkinleştirilmesini gerektirir.
    "typescript.suggest.includeAutomaticOptionalChainCompletions" : true ,
  
    // Kısmen yazılan içe aktarma ifadelerinde otomatik içe aktarma stili tamamlamaları etkinleştirin/devre dışı bırakın. Çalışma alanında TypeScript 4.3+ kullanılmasını gerektirir.
    "typescript.suggest.includeCompletionsForImportStatements" : true ,
  
    // TS Sunucusundan snippet tamamlamalarını etkinleştirin/devre dışı bırakın. Çalışma alanında TypeScript 4.3+ kullanılmasını gerektirir.
    "typescript.suggest.includeCompletionsWithSnippetText" : true ,
  
    // JSDoc şablonları için "@return" ek açıklamaları oluşturmayı etkinleştirin/devre dışı bırakın. Çalışma alanında TypeScript 4.2+ kullanılmasını gerektirir.
    "typescript.suggest.jsdoc.generateReturns" : doğru ,
  
    // import ifadelerinde ve gerekli çağrılarda yollar için önerileri etkinleştirin/devre dışı bırakın.
    "typescript.suggest.paths" : doğru ,
  
    // Editörde TypeScript dosyaları için öneri tanılamayı etkinleştirin/devre dışı bırakın.
    "typescript.suggestionActions.enabled" : doğru ,
  
    // tsc görevlerinin otomatik algılanmasını kontrol eder.
    // - açık: Hem derleme hem de izleme görevleri oluşturun.
    // - kapalı: Bu özelliği devre dışı bırakın.
    // - build: Yalnızca tek çalıştırmalı derleme görevleri oluşturun.
    // - izle: Yalnızca derleme ve izleme görevleri oluşturun.
    "typescript.tsc.autoDetect" : " üzerinde " ,
  
    // IntelliSense için kullanılacak bir TypeScript yüklemesi altındaki tsserver ve 'lib*.d.ts' dosyalarının klasör yolunu belirtir, örneğin: `./node_modules/typescript/lib`.
    // - Bir kullanıcı ayarı olarak belirtildiğinde, `typescript.tsdk` dosyasındaki TypeScript sürümü otomatik olarak yerleşik TypeScript sürümünün yerini alır.
    // - Bir çalışma alanı ayarı olarak belirtildiğinde, 'typescript.tsdk', 'TypeScript: TypeScript sürümünü seçin' komutuyla IntelliSense için TypeScript'in bu çalışma alanı sürümünü kullanmaya geçiş yapmanızı sağlar.
    "typescript.tsdk" : " " ,
  
    // TS sunucu performansının bir dizine izlenmesini sağlar. Bu izleme dosyaları, TS Sunucusu performans sorunlarını tanılamak için kullanılabilir. Günlük, projenizden dosya yolları, kaynak kodu ve diğer potansiyel olarak hassas bilgileri içerebilir.
    "typescript.tsserver.enableTracing" : yanlış ,
  
    // TS sunucusunun bir dosyaya kaydedilmesini sağlar. Bu günlük, TS Sunucusu sorunlarını teşhis etmek için kullanılabilir. Günlük, projenizden dosya yolları, kaynak kodu ve diğer potansiyel olarak hassas bilgileri içerebilir.
    "typescript.tsserver.log" : " kapalı " ,
  
    // TypeScript sunucu işlemine ayrılacak maksimum bellek miktarı (MB cinsinden).
    "typescript.tsserver.maxTsServerMemory" : 3072 ,
  
    // TypeScript Dil Hizmeti eklentilerini keşfetmek için ek yollar.
    "typescript.tsserver.pluginPaths" : [],
  
    // TS sunucusuna gönderilen mesajların izlenmesini sağlar. Bu izleme, TS Sunucusu sorunlarını teşhis etmek için kullanılabilir. İzleme, projenizden dosya yolları, kaynak kodu ve diğer potansiyel olarak hassas bilgileri içerebilir.
    "typescript.tsserver.trace" : " kapalı " ,
  
    // TypeScript'in bilgi işlem kodu katlama gibi sözdizimi ile ilgili işlemleri daha hızlı yürütmek için özel bir sunucu başlatıp başlatmadığını kontrol eder.
    // - her zaman: Tüm IntelliSense işlemlerini yürütmek için daha hafif bir sözdizimi sunucusu kullanın. Bu sözdizimi sunucusu, yalnızca açılan dosyalar için IntelliSense sağlayabilir.
    // - asla: Özel bir sözdizimi sunucusu kullanmayın. Tüm IntelliSense işlemlerini yürütmek için tek bir sunucu kullanın.
    // - auto: Hem tam bir sunucu hem de sözdizimi işlemlerine ayrılmış daha hafif bir sunucu oluşturur. Sözdizimi sunucusu, sözdizimi işlemlerini hızlandırmak ve projeler yüklenirken IntelliSense sağlamak için kullanılır.
    "typescript.tsserver.useSyntaxServer" : " otomatik " ,
  
    // Dosyaları ve dizinleri takip etmek için hangi izleme stratejilerinin kullanılması gerektiğini yapılandırın. Çalışma alanında TypeScript 3.8+ kullanılmasını gerektirir.
    "typescript.tsserver.watchOptions" : {},
  
    // VS Kodunda bir dosyayı yeniden adlandırdığınızda veya taşıdığınızda içe aktarma yollarının otomatik güncellenmesini etkinleştirin/devre dışı bırakın.
    // - komut istemi: Her yeniden adlandırmada istem.
    // - her zaman: Yolları her zaman otomatik olarak güncelle.
    // - asla: Asla yolları yeniden adlandırmayın ve sormayın.
    "typescript.updateImportsOnFileMove.enabled" : " istemi " ,
  
    // TypeScript doğrulamasını etkinleştir/devre dışı bırak.
    "typescript.validate.enable" : doğru ,
  
    // Çalışma alanındaki git sembolü ile hangi dosyaların aranacağını kontrol eder.
    // - allOpenProjects: Semboller için tüm açık JavaScript veya TypeScript projelerini arayın. Çalışma alanında TypeScript 3.9 veya daha yenisinin kullanılmasını gerektirir.
    // - currentProject: Yalnızca geçerli JavaScript veya TypeScript projesinde sembolleri arayın.
    "typescript.workspaceSymbols.scope" : " allOpenProjects " ,
  
    // Test yapmak
  
    // Hata Peek görünümünün ne zaman otomatik olarak açılacağını yapılandırır.
    // - FailureAnywhere: Arıza nerede olursa olsun otomatik olarak açılır.
    // - failInVisibleDocument: Görünür bir belgede bir test başarısız olduğunda otomatik olarak açılır.
    // - asla: Asla otomatik olarak açılmaz.
    "testing.automaticallyOpenPeekView" : " FailureInVisibleDocument " ,
  
    // Otomatik çalıştırma modu sırasında Peek görünümünün otomatik olarak açılıp açılmayacağını kontrol eder.
    "testing.automaticallyOpenPeekViewDuringAutoRun" : false ,
  
    // Bir test eski olarak işaretlendikten ve yeni bir çalıştırma başlatıldıktan sonra milisaniye cinsinden ne kadar bekleneceği.
    "testing.autoRun.delay" : 1000 ,
  
    // Hangi testlerin otomatik olarak çalıştırılacağını kontrol eder.
    // - tümü: Otomatik çalıştırma değiştirildiğinde, keşfedilen tüm testleri otomatik olarak çalıştırır. Değiştirildiklerinde bireysel testleri yeniden çalıştırır.
    // - yeniden çalıştır: Değiştirildiklerinde bireysel testleri yeniden çalıştırır. Halihazırda yürütülmemiş herhangi bir testi otomatik olarak çalıştırmaz.
    "testing.autoRun.mode" : " tümü " ,
  
    // Oluktaki bir test dekorasyonuna sol tıklandığında yapılacak eylemi kontrol eder.
    // - çalıştır: Testi çalıştır.
    // - hata ayıklama: Testte hata ayıklayın.
    // - contextMenu: Daha fazla seçenek için içerik menüsünü açın.
    "testing.defaultGutterClickAction" : " çalıştır " ,
  
    // Çalışan testin Test Gezgini görünümünde takip edilip edilmeyeceğini kontrol eder.
    "testing.followRunningTest" : doğru ,
  
    // Test dekorasyonlarının editör oluğunda gösterilip gösterilmeyeceğini kontrol eder.
    "testing.gutterEnabled" : doğru ,
  
    // CSS
  
    // CSS özelliklerini tamamlarken satırın sonuna noktalı virgül koyun.
    "css.completion.completePropertyWithSemicolon" : true ,
  
    // Varsayılan olarak, VS Kodu, bir CSS özelliği seçildikten sonra özellik değerinin tamamlanmasını tetikler. Bu davranışı devre dışı bırakmak için bu ayarı kullanın.
    "css.completion.triggerPropertyValueCompletion" : true ,
  
    // Özel veri biçimini izleyen JSON dosyalarına işaret eden göreli dosya yollarının listesi.
    // VS Code, JSON dosyalarında belirttiğiniz yönergelerde, sözde sınıflarda ve sözde öğelerde özel CSS özellikleri için CSS desteğini geliştirmek için başlangıçta özel veriler yükler.
    // Dosya yolları çalışma alanına göredir ve yalnızca çalışma alanı klasör ayarları dikkate alınır.
    "css.customData" : [],
  
    // CSS gezinmelerinde etiket ve nitelik belgelerini göster.
    "css.hover.documentation" : doğru ,
  
    // CSS gezinmelerinde MDN referanslarını göster.
    "css.hover.references" : doğru ,
  
    // Geçersiz sayıda parametre.
    "css.lint.argumentsInColorFunction" : " hata " ,
  
    // "dolgu" veya "kenarlık" kullanırken "genişlik" veya "yükseklik" kullanmayın.
    "css.lint.boxModel" : " yoksay " ,
  
    // Satıcıya özel bir önek kullanırken, satıcıya özel diğer tüm özellikleri de eklediğinizden emin olun.
    "css.lint. CompatibleVendorPrefixes" : " yoksay " ,
  
    // Yinelenen stil tanımları kullanmayın.
    "css.lint.duplicateProperties" : " yoksay " ,
  
    // Boş kural kümeleri kullanmayın.
    "css.lint.emptyRules" : " uyarı " ,
  
    // 'float' kullanmaktan kaçının. Şamandıralar, düzenin bir yönü değiştiğinde kırılması kolay olan kırılgan CSS'ye yol açar.
    "css.lint.float" : " yoksay " ,
  
    // `@font-face` kuralı, `src` ve `font-family` özelliklerini tanımlamalıdır.
    "css.lint.fontFaceProperties" : " uyarı " ,
  
    // Onaltılı renkler üç veya altı onaltılı sayıdan oluşmalıdır.
    "css.lint.hexColorLength" : " hata " ,
  
    // Seçiciler kimlik içermemelidir çünkü bu kurallar HTML ile çok sıkı bir şekilde bağlanmıştır.
    "css.lint.idSelector" : " yoksay " ,
  
    // IE hack'leri yalnızca IE7 ve daha eski sürümleri desteklerken gereklidir.
    "css.lint.ieHack" : " yoksay " ,
  
    // `!important` kullanmaktan kaçının. Tüm CSS'nin özgünlüğünün kontrolden çıktığını ve yeniden düzenlenmesi gerektiğinin bir göstergesidir.
    "css.lint.important" : " yoksay " ,
  
    // Import deyimleri paralel olarak yüklenmez.
    "css.lint.importStatement" : " yoksay " ,
  
    // Görüntü nedeniyle özellik yok sayılır. Örneğin, "display: inline", "width", "height", "margin-top", "margin-bottom" ve "float" özelliklerinin hiçbir etkisi yoktur.
    "css.lint.propertyIgnoredDueToDisplay" : " uyarı " ,
  
    // Evrensel seçicinin (`*`) yavaş olduğu biliniyor.
    "css.lint.universalSelector" : " yoksay " ,
  
    // Bilinmeyen kuralda.
    "css.lint.unknownAtRules" : " uyarı " ,
  
    // Bilinmeyen özellik.
    "css.lint.unknownProperties" : " uyarı " ,
  
    // Satıcıya özel bilinmeyen özellik.
    "css.lint.unknownVendorSpecificProperties" : " yoksay " ,
  
    // 'unknownProperties' kuralına göre doğrulanmayan özelliklerin listesi.
    "css.lint.validProperties" : [],
  
    // Satıcıya özel bir önek kullanırken, standart özelliği de dahil edin.
    "css.lint.vendorPrefix" : " uyarı " ,
  
    // Sıfır için birim gerekmez.
    "css.lint.zeroUnits" : " yoksay " ,
  
    // VS Kodu ile CSS dil sunucusu arasındaki iletişimi izler.
    "css.trace.server" : " kapalı " ,
  
    // Tüm doğrulamaları etkinleştirir veya devre dışı bırakır.
    "css.validate" : doğru ,
  
    // AZ
  
    // CSS özelliklerini tamamlarken satırın sonuna noktalı virgül koyun.
    "less.completion.completePropertyWithSemicolon" : true ,
  
    // Varsayılan olarak, VS Kodu, bir CSS özelliği seçildikten sonra özellik değerinin tamamlanmasını tetikler. Bu davranışı devre dışı bırakmak için bu ayarı kullanın.
    "less.completion.triggerPropertyValueCompletion" : true ,
  
    // Etiket ve nitelik belgelerini LESS üzerine gelindiğinde göster.
    "less.hover.documentation" : doğru ,
  
    // MDN'ye yapılan referansları LESS üzerine gelindiğinde göster.
    "less.hover.references" : doğru ,
  
    // Geçersiz sayıda parametre.
    "less.lint.argumentsInColorFunction" : " hata " ,
  
    // "dolgu" veya "kenarlık" kullanırken "genişlik" veya "yükseklik" kullanmayın.
    "less.lint.boxModel" : " yoksay " ,
  
    // Satıcıya özel bir önek kullanırken, satıcıya özel diğer tüm özellikleri de eklediğinizden emin olun.
    "less.lint. CompatibleVendorPrefixes" : " yoksay " ,
  
    // Yinelenen stil tanımları kullanmayın.
    "less.lint.duplicateProperties" : " yoksay " ,
  
    // Boş kural kümeleri kullanmayın.
    "less.lint.emptyRules" : " uyarı " ,
  
    // 'float' kullanmaktan kaçının. Şamandıralar, düzenin bir yönü değiştiğinde kırılması kolay olan kırılgan CSS'ye yol açar.
    "less.lint.float" : " yoksay " ,
  
    // `@font-face` kuralı, `src` ve `font-family` özelliklerini tanımlamalıdır.
    "less.lint.fontFaceProperties" : " uyarı " ,
  
    // Onaltılı renkler üç veya altı onaltılı sayıdan oluşmalıdır.
    "less.lint.hexColorLength" : " hata " ,
  
    // Seçiciler kimlik içermemelidir çünkü bu kurallar HTML ile çok sıkı bir şekilde bağlanmıştır.
    "less.lint.idSelector" : " yoksay " ,
  
    // IE hack'leri yalnızca IE7 ve daha eski sürümleri desteklerken gereklidir.
    "less.lint.ieHack" : " yoksay " ,
  
    // `!important` kullanmaktan kaçının. Tüm CSS'nin özgünlüğünün kontrolden çıktığını ve yeniden düzenlenmesi gerektiğinin bir göstergesidir.
    "less.lint.important" : " yoksay " ,
  
    // Import deyimleri paralel olarak yüklenmez.
    "less.lint.importStatement" : " yoksay " ,
  
    // Görüntü nedeniyle özellik yok sayılır. Örneğin, "display: inline", "width", "height", "margin-top", "margin-bottom" ve "float" özelliklerinin hiçbir etkisi yoktur.
    "less.lint.propertyIgnoredDueToDisplay" : " uyarı " ,
  
    // Evrensel seçicinin (`*`) yavaş olduğu biliniyor.
    "less.lint.universalSelector" : " yoksay " ,
  
    // Bilinmeyen kuralda.
    "less.lint.unknownAtRules" : " uyarı " ,
  
    // Bilinmeyen özellik.
    "less.lint.unknownProperties" : " uyarı " ,
  
    // Satıcıya özel bilinmeyen özellik.
    "less.lint.unknownVendorSpecificProperties" : " yoksay " ,
  
    // 'unknownProperties' kuralına göre doğrulanmayan özelliklerin listesi.
    "less.lint.validProperties" : [],
  
    // Satıcıya özel bir önek kullanırken, standart özelliği de dahil edin.
    "less.lint.vendorPrefix" : " uyarı " ,
  
    // Sıfır için birim gerekmez.
    "less.lint.zeroUnits" : " yoksay " ,
  
    // Tüm doğrulamaları etkinleştirir veya devre dışı bırakır.
    "less.validate" : doğru ,
  
    // SCSS (Sass)
  
    // CSS özelliklerini tamamlarken satırın sonuna noktalı virgül koyun.
    "scss.completion.completePropertyWithSemicolon" : true ,
  
    // Varsayılan olarak, VS Kodu, bir CSS özelliği seçildikten sonra özellik değerinin tamamlanmasını tetikler. Bu davranışı devre dışı bırakmak için bu ayarı kullanın.
    "scss.completion.triggerPropertyValueCompletion" : true ,
  
    // SCSS üzerine gelindiğinde etiket ve öznitelik belgelerini göster.
    "scss.hover.documentation" : doğru ,
  
    // SCSS üzerine gelindiğinde MDN referanslarını göster.
    "scss.hover.references" : doğru ,
  
    // Geçersiz sayıda parametre.
    "scss.lint.argumentsInColorFunction" : " hata " ,
  
    // "dolgu" veya "kenarlık" kullanırken "genişlik" veya "yükseklik" kullanmayın.
    "scss.lint.boxModel" : " yoksay " ,
  
    // Satıcıya özel bir önek kullanırken, satıcıya özel diğer tüm özellikleri de eklediğinizden emin olun.
    "scss.lint. CompatibleVendorPrefixes" : " yoksay " ,
  
    // Yinelenen stil tanımları kullanmayın.
    "scss.lint.duplicateProperties" : " yoksay " ,
  
    // Boş kural kümeleri kullanmayın.
    "scss.lint.emptyRules" : " uyarı " ,
  
    // 'float' kullanmaktan kaçının. Şamandıralar, düzenin bir yönü değiştiğinde kırılması kolay olan kırılgan CSS'ye yol açar.
    "scss.lint.float" : " yoksay " ,
  
    // `@font-face` kuralı, `src` ve `font-family` özelliklerini tanımlamalıdır.
    "scss.lint.fontFaceProperties" : " uyarı " ,
  
    // Onaltılı renkler üç veya altı onaltılı sayıdan oluşmalıdır.
    "scss.lint.hexColorLength" : " hata " ,
  
    // Seçiciler kimlik içermemelidir çünkü bu kurallar HTML ile çok sıkı bir şekilde bağlanmıştır.
    "scss.lint.idSelector" : " yoksay " ,
  
    // IE hack'leri yalnızca IE7 ve daha eski sürümleri desteklerken gereklidir.
    "scss.lint.ieHack" : " yoksay " ,
  
    // `!important` kullanmaktan kaçının. Tüm CSS'nin özgünlüğünün kontrolden çıktığını ve yeniden düzenlenmesi gerektiğinin bir göstergesidir.
    "scss.lint.important" : " yoksay " ,
  
    // Import deyimleri paralel olarak yüklenmez.
    "scss.lint.importStatement" : " yoksay " ,
  
    // Görüntü nedeniyle özellik yok sayılır. Örneğin, "display: inline", "width", "height", "margin-top", "margin-bottom" ve "float" özelliklerinin hiçbir etkisi yoktur.
    "scss.lint.propertyIgnoredDueToDisplay" : " uyarı " ,
  
    // Evrensel seçicinin (`*`) yavaş olduğu biliniyor.
    "scss.lint.universalSelector" : " yoksay " ,
  
    // Bilinmeyen kuralda.
    "scss.lint.unknownAtRules" : " uyarı " ,
  
    // Bilinmeyen özellik.
    "scss.lint.unknownProperties" : " uyarı " ,
  
    // Satıcıya özel bilinmeyen özellik.
    "scss.lint.unknownVendorSpecificProperties" : " yoksay " ,
  
    // 'unknownProperties' kuralına göre doğrulanmayan özelliklerin listesi.
    "scss.lint.validProperties" : [],
  
    // Satıcıya özel bir önek kullanırken, standart özelliği de dahil edin.
    "scss.lint.vendorPrefix" : " uyarı " ,
  
    // Sıfır için birim gerekmez.
    "scss.lint.zeroUnits" : " yoksay " ,
  
    // Tüm doğrulamaları etkinleştirir veya devre dışı bırakır.
    "scss.validate" : doğru ,
  
    // Uzantılar
  
    // Etkinleştirildiğinde, güncellemeler için uzantıları otomatik olarak kontrol eder. Bir uzantının güncellemesi varsa, Uzantılar görünümünde eski olarak işaretlenir. Güncelleştirmeler bir Microsoft çevrimiçi hizmetinden alınır.
    "extensions.autoCheckUpdates" : true ,
  
    // Uzantıların otomatik güncelleme davranışını kontrol eder. Güncelleştirmeler bir Microsoft çevrimiçi hizmetinden alınır.
    // - true: Tüm uzantılar için güncellemeleri otomatik olarak indirin ve yükleyin.
    // - onlyEnabledExtensions: Yalnızca etkin uzantılar için güncellemeleri otomatik olarak indirin ve yükleyin. Devre dışı bırakılan uzantılar otomatik olarak güncellenmez.
    // - false: Uzantılar otomatik olarak güncellenmez.
    "extensions.autoUpdate" : true ,
  
    // Etkinleştirildiğinde, uzantı ayrıntılarına sahip düzenleyiciler, Uzantılar Görünümünden uzaklaşıldığında otomatik olarak kapatılacaktır.
    "extensions.closeExtensionDetailsOnViewChange" : false ,
  
    // Bir uzantı burada listelendiğinde, bu uzantı bir URI'yi işlediğinde bir onay istemi gösterilmeyecektir.
    "extensions.confirmedUriHandlerExtensionIds" : [],
  
    // Etkinleştirildiğinde, uzantı önerileri için bildirimler gösterilmeyecektir.
    "extensions.ignoreRecommendations" : false ,
  
    // Bir uzantının güvenilmeyen çalışma alanı desteğini geçersiz kıl. "true" kullanan uzantılar her zaman etkinleştirilecektir. "Sınırlı" kullanan uzantılar her zaman etkin olacaktır ve uzantı, güven gerektiren işlevleri gizleyecektir. "yanlış" kullanan uzantılar, yalnızca çalışma alanı güvenilir olduğunda etkinleştirilecektir.
    "extensions.supportUntrustedWorkspaces" : {},
  
    // Bir uzantının sanal çalışma alanları desteğini geçersiz kıl.
    "extensions.supportVirtualWorkspaces" : {
      "pub.name" : yanlış
    },
  
    // Çıktı
  
    // Çıktı görünümünde akıllı kaydırma özelliğini etkinleştirin/devre dışı bırakın. Akıllı kaydırma, çıktı görünümünde tıkladığınızda kaydırmayı otomatik olarak kilitlemenize ve son satıra tıkladığınızda kilidi açmanıza olanak tanır.
    "output.smartScroll.enabled" : doğru ,
  
    // Ayarlar Senkronizasyonu
  
    // Senkronizasyon sırasında yok sayılacak uzantıların listesi. Bir uzantının tanımlayıcısı her zaman `${publisher}.${name}` şeklindedir. Örneğin: "vscode.csharp".
    "settingsSync.ignoredExtensions" : [],
  
    // Senkronizasyon sırasında yoksayılacak ayarları yapılandırın.
    "settingsSync.ignoredSettings" : [],
  
    // Her platform için tuş atamalarını senkronize edin.
    "settingsSync.keybindingsPerPlatform" : doğru ,
  
    // Defterler
  
    // Etkinleştirildiğinde, not defteri kırıntıları kod hücreleri içerir.
    "notebook.breadcrumbs.showCodeCells" : doğru ,
  
    // Odak göstergesinin hücre sınırları boyunca veya sol olukta nerede oluşturulacağını kontrol eder.
    "notebook.cellFocusIndicator" : " oluk " ,
  
    // Hücre araç çubuğunun nerede gösterileceği veya gizlenmesi gerekip gerekmediği.
    "notebook.cellToolbarLocation" : {
      "varsayılan" : " sağ "
    },
  
    // Hücre araç çubuğunun üzerine gelindiğinde mi yoksa tıklandığında mı görüneceği.
    "notebook.cellToolbarVisibility" : " tıklayın " ,
  
    // Not defteri düzenleyicisinin kompakt bir biçimde oluşturulup oluşturulmayacağını kontrol edin. Örneğin, açıldığında sol kenar boşluğu genişliğini azaltacaktır.
    "notebook.compactView" : doğru ,
  
    // Çıktı araç çubuğunda çıktı eyleminin oluşturulup oluşturulmayacağını kontrol edin.
    "notebook.consolidatedOutputButton" : doğru ,
  
    // Çalıştır düğmesinin yanındaki bir açılır menüde ek eylemlerin gösterilip gösterilmeyeceğini kontrol edin.
    "notebook.consolidatedRunButton" : yanlış ,
  
    // Not defteri için geliştirilmiş metin fark düzenleyicisinin kullanılıp kullanılmayacağı.
    "notebook.diff.enablePreview" : doğru ,
  
    // Meta Veri Farklarını Gizle
    "notebook.diff.ignoreMetadata" : yanlış ,
  
    // Çıktı Farklarını Gizle
    "notebook.diff.ignoreOutputs" : yanlış ,
  
    // Çıkış mime türleri için öncelik listesi
    "notebook.displayOrder" : [],
  
    // Not defteri düzenleyicisinin, sürükle ve bırak yoluyla hücrelerin taşınmasına izin verip vermeyeceğini kontrol edin.
    "notebook.dragAndDropEnabled" : true ,
  
    // Not defterlerinde kullanılan kod düzenleyicileri için ayarlar. Bu, çoğu düzenleyiciyi özelleştirmek için kullanılabilir.* ayarları.
    "notebook.editorOptionsÖzelleştirmeler" : {},
  
    // Not defteri düzenleyicisinde genel bir araç çubuğunun oluşturulup oluşturulmayacağını kontrol edin.
    "notebook.globalToolbar" : doğru ,
  
    // Not defteri araç çubuğundaki eylemlerin etiket oluşturup oluşturmayacağını kontrol edin.
    "notebook.globalToolbarShowLabel" : " her zaman " ,
  
    // Hücre ekleme eylemlerinin nerede görüneceğini kontrol edin.
    // -arasındaHücreler: Hücreler arasında fareyle üzerine gelindiğinde görünen bir araç çubuğu.
    // - notebookToolbar: Not defteri düzenleyicisinin en üstündeki araç çubuğu.
    // - ikisi de: Her iki araç çubuğu.
    // - gizli: Ekleme eylemleri hiçbir yerde görünmez.
    "notebook.insertToolbarLocation" : " her ikisi de " ,
  
    // Hücre düzenleyicide satır numaralarının görüntülenmesini kontrol eder.
    "notebook.lineNumbers" : " kapalı " ,
  
    // Not defterlerinde oluşturulan işaretlemenin yazı tipi boyutunu kontrol eder. "0" olarak ayarlandığında, "editor.fontSize" öğesinin %120'si kullanılır.
    "notebook.markup.fontSize" : 0 ,
  
    // Etkinleştirildiğinde, hücre düzenleyicideki geçerli imleç ilk/son satırdayken, imleç sonraki/önceki hücreye gidebilir.
    "notebook.navigation.allowNavigateToSurroundingCells" : true ,
  
    // Etkinleştirildiğinde, not defteri anahattı kod hücrelerini gösterir.
    "notebook.outline.showCodeCells" : yanlış ,
  
    // Bir metin çıktısında kaç satırlık metin oluşturulacağını kontrol edin.
    "notebook.output.textLineLimit" : 30 ,
  
    // Hücre durum çubuğunun gösterilip gösterilmeyeceği.
    // - gizli: Hücre Durum çubuğu her zaman gizlidir.
    // - görünür: Hücre Durum çubuğu her zaman görünür.
    // - görünürAfterExecute: Hücre durum çubuğu, hücre yürütülene kadar gizlenir. Ardından yürütme durumunu göstermek için görünür hale gelir.
    "notebook.showCellStatusBar" : " görünür " ,
  
    // Markdown başlık katlama okunun ne zaman gösterileceğini kontrol eder.
    // - her zaman: Katlama kontrolleri her zaman görünür durumdadır.
    // - fareyle üzerine gelme: Katlama kontrolleri yalnızca fareyle üzerine gelindiğinde görünür.
    "notebook.showFoldingControls" : " fareyle üzerine gelindiğinde " ,
  
    // Her hücre için ayrı geri alma/yineleme yığını kullanılıp kullanılmayacağı.
    "notebook.undoRedoPerCell" : doğru ,
  
    // Terminal
  
    // Ne tür bir terminalin başlatılacağını özelleştirir.
    // - entegre: VS Code'un entegre terminalini kullanın.
    // - harici: Konfigüre edilmiş harici terminali kullanın.
    "terminal.explorerKind" : " entegre " ,
  
    // Dış Terminal
  
    // Linux'ta hangi terminalin çalıştırılacağını özelleştirir.
    "terminal.external.linuxExec" : " xterm " ,
  
    // macOS'ta hangi terminal uygulamasının çalıştırılacağını özelleştirir.
    "terminal.external.osxExec" : " Terminal.app " ,
  
    // Windows'ta hangi terminalin çalıştırılacağını özelleştirir.
    "terminal.external.windowsExec" : " C: \\ Windows \\ System32 \\ cmd.exe " ,
  
    // Entegre Terminal
  
    // Terminalde akor tuş atamalarına izin verilip verilmeyeceği. Bu doğru olduğunda ve tuş vuruşu bir akorla sonuçlandığında, bunun 'terminal.integrated.commandsToSkipShell'i atlayacağını unutmayın, bunu false olarak ayarlamak özellikle ctrl+k'nin kabuğunuza gitmesini istediğinizde (VS Kodu değil) yararlıdır.
    "terminal.integrated.allowChords" : doğru ,
  
    // Menü çubuğu anımsatıcılarının (örn. alt+f) menü çubuğunu tetiklemesine izin verilip verilmeyeceği. Bunun, doğru olduğunda tüm alt tuş vuruşlarının kabuğu atlamasına neden olacağını unutmayın. Bu, macOS'ta hiçbir şey yapmaz.
    "terminal.integrated.allowMnemonics" : yanlış ,
  
    // Etkinleştirilirse, "editor.multiCursorModifier" "alt" (varsayılan değer) olarak ayarlandığında, alt/option + tıklama komut istemi imlecini farenin altına yeniden konumlandırır. Bu, kabuğunuza bağlı olarak güvenilir bir şekilde çalışmayabilir.
    "terminal.integrated.altClickMovesCursor" : true ,
  
    // Görevler ve hata ayıklama gibi otomasyonla ilgili terminal kullanımı için Linux'ta kullanılacak terminal profili. #terminal.integrated.automationShell.linux# ayarlanmışsa, bu ayar şu anda yoksayılacaktır.
    "terminal.integrated.automationProfile.linux" : boş ,
  
    // Görevler ve hata ayıklama gibi otomasyonla ilgili terminal kullanımı için macOS'ta kullanılacak terminal profili. #terminal.integrated.automationShell.osx# ayarlanmışsa bu ayar şu anda yoksayılacaktır.
    "terminal.integrated.automationProfile.osx" : boş ,
  
    // Görevler ve hata ayıklama gibi otomasyonla ilgili terminal kullanımı için kullanılacak terminal profili. #terminal.integrated.automationShell.windows# ayarlanmışsa, bu ayar şu anda yoksayılacaktır.
    "terminal.integrated.automationProfile.windows" : boş ,
  
    // Tetiklendiğinde terminal sekmesinde zilin gösterileceği milisaniye sayısı.
    "terminal.integrated.bellSüresi" : 1000 ,
  
    // Tuş bağlamaları kabuğa gönderilmeyecek, bunun yerine her zaman VS Kodu tarafından işlenecek bir dizi komut kimliği. Bu, normalde kabuk tarafından tüketilecek olan tuş bağlamalarının, bunun yerine uçbirim odaklanmadığında olduğu gibi davranmasına izin verir, örneğin Hızlı Aç'ı başlatmak için `Ctrl+P`.
    "terminal.integrated.commandsToSkipShell" : [],
  
    // Etkin terminal oturumları varsa pencere kapandığında onaylanıp onaylanmayacağını kontrol eder.
    // - asla: Asla onaylama.
    // - her zaman: Her zaman terminal olup olmadığını onaylayın.
    // - hasChildProcesses: Alt süreçleri olan herhangi bir terminal olup olmadığını onaylayın.
    "terminal.integrated.confirmOnExit" : " asla " ,
  
    // Alt süreçlere sahip olduklarında sonlandırma terminallerinin onaylanıp onaylanmayacağını kontrol eder. Editör olarak ayarlandığında, editör alanındaki terminaller, alt süreçlere sahip olduklarında değiştirilmiş olarak işaretlenecektir. Alt süreç algılamanın, işlemlerini kabuğun alt süreçleri olarak çalıştırmayan Git Bash gibi kabuklar için iyi çalışmayabileceğini unutmayın.
    // - asla: Asla onaylama.
    // - editör: Terminalin editörde olup olmadığını onaylayın.
    // - panel: Terminalin panelde olup olmadığını onaylayın.
    // - her zaman: Terminalin düzenleyicide mi yoksa panelde mi olduğunu onaylayın.
    "terminal.integrated.confirmOnKill" : " düzenleyici " ,
  
    // Terminalde seçilen metnin panoya kopyalanıp kopyalanmayacağını kontrol eder.
    "terminal.integrated.copyOnSelection" : yanlış ,
  
    // Terminal imlecinin yanıp sönüp yanıp sönmediğini kontrol eder.
    "terminal.integrated.cursorYanıp sönüyor" : yanlış ,
  
    // Terminal imlecinin stilini kontrol eder.
    "terminal.integrated.cursorStyle" : " blok " ,
  
    // 'terminal.integrated.cursorStyle', 'line' olarak ayarlandığında imlecin genişliğini kontrol eder.
    "terminal.integrated.cursorWidth" : 1 ,
  
    // Genellikle sürekli çizgilerle daha iyi işleme sağlayan yazı tipini kullanmak yerine blok öğesi ve kutu çizim karakterleri için özel glifler çizilip çizilmeyeceği. Bunun DOM oluşturucu ile çalışmadığını unutmayın.
    "terminal.integrated.customGlyphs" : true ,
  
    // Uçbirimin başlatılacağı açık bir başlangıç ​​yolu, bu, kabuk işlemi için geçerli çalışma dizini (cwd) olarak kullanılır. Kök dizini uygun bir cwd değilse, bu özellikle çalışma alanı ayarlarında yararlı olabilir.
    "terminal.integrated.cwd" : " " ,
  
    // Yeni oluşturulan terminallerin nerede görüneceğini kontrol eder.
    // - editör: Editörde terminaller oluşturun
    // - görünüm: Terminal görünümünde terminaller oluşturun
    "terminal.integrated.defaultLocation" : " görünüm " ,
  
    // Linux'ta kullanılan varsayılan profil. "terminal.integrated.shell.linux" veya "terminal.integrated.shellArgs.linux" ayarlanmışsa, bu ayar şu anda yok sayılacaktır.
    "terminal.integrated.defaultProfile.linux" : boş ,
  
    // macOS'ta kullanılan varsayılan profil. "terminal.integrated.shell.osx" veya "terminal.integrated.shellArgs.osx" ayarlanmışsa bu ayar şu anda yoksayılacaktır.
    "terminal.integrated.defaultProfile.osx" : boş ,
  
    // Windows'ta kullanılan varsayılan profil. "terminal.integrated.shell.windows" veya "terminal.integrated.shellArgs.windows" ayarlanmışsa, bu ayar şu anda yok sayılacaktır.
    "terminal.integrated.defaultProfile.windows" : boş ,
  
    // VS Code'un terminali yalnızca kabuktan gelen UTF-8 kodlu verileri desteklediğinden, "$LANG" ortam değişkeninin algılanıp algılanmayacağını ve UTF-8 uyumlu bir seçeneğe ayarlanıp ayarlanmayacağını kontrol eder.
    // - auto: Mevcut değişken yoksa veya `'.UTF-8'' ile bitmiyorsa `$LANG` ortam değişkenini ayarlayın.
    // - kapalı: `$LANG` ortam değişkenini ayarlamayın.
    // - açık: Her zaman `$LANG` ortam değişkenini ayarlayın.
    "terminal.integrated.detectLocale" : " otomatik " ,
  
    // Terminaldeki kalın metnin her zaman "parlak" ANSI renk çeşidini kullanıp kullanmayacağını kontrol eder.
    "terminal.integrated.drawBoldTextInBrightColors" : true ,
  
    // Terminal zilinin etkin olup olmadığını kontrol eder, bu, terminal adının yanında görsel bir zil olarak görünür.
    "terminal.integrated.enableBell" : yanlış ,
  
    // Terminalde dosya bağlantılarının etkinleştirilip etkinleştirilmeyeceğini. Her dosya bağlantısı dosya sistemine göre doğrulandığından, özellikle bir ağ sürücüsü üzerinde çalışırken bağlantılar yavaş olabilir. Bunu değiştirmek yalnızca yeni terminallerde geçerli olacaktır.
    "terminal.integrated.enableFileLinks" : doğru ,
  
    // Pencere yeniden yüklemeleri boyunca çalışma alanı için kalıcı terminal oturumları.
    "terminal.integrated.enablePersistentSessions" : true ,
  
    // Linux üzerinde terminal tarafından kullanılacak VS Code işlemine eklenecek ortam değişkenlerine sahip nesne. Ortam değişkenini silmek için 'null' olarak ayarlayın.
    "terminal.integrated.env.linux" : {},
  
    // macOS üzerinde terminal tarafından kullanılacak VS Code işlemine eklenecek ortam değişkenlerine sahip nesne. Ortam değişkenini silmek için 'null' olarak ayarlayın.
    "terminal.integrated.env.osx" : {},
  
    // Windows'ta terminal tarafından kullanılacak VS Code işlemine eklenecek ortam değişkenlerine sahip nesne. Ortam değişkenini silmek için 'null' olarak ayarlayın.
    "terminal.integrated.env.windows" : {},
  
    // Her terminalde, uzantıların yapılıp yapılmadığını veya terminalin ortamında değişiklik yapmak isteyip istemediğini açıklayan ortam değişiklikleri göstergesinin görüntülenip görüntülenmeyeceğini.
    // - kapalı: Göstergeyi devre dışı bırakın.
    // - açık: Göstergeyi etkinleştirin.
    // - yalnızca uyar: Bir terminalin ortamının bir uzantı tarafından değiştirildiğini gösteren bilgi göstergesini değil, yalnızca bir terminalin ortamı 'eski' olduğunda uyarı göstergesini gösterin.
    "terminal.integrated.environmentChangesIndicator" : " warnonly " ,
  
    // Uzantı çevrelerine katkıda bulunmak istiyorsa ve henüz etkileşime girmemişse, terminallerin otomatik olarak yeniden başlatılıp başlatılmayacağı.
    "terminal.integrated.environmentChangesRelaunch" : true ,
  
    // `Alt` tuşuna basıldığında kaydırma hızı çarpanı.
    "terminal.integrated.fastScrollSensitivity" : 5 ,
  
    // Terminalin yazı tipi ailesini kontrol eder, bu varsayılan olarak `editor.fontFamily`nin değeridir.
    "terminal.integrated.fontFamily" : " " ,
  
    // Terminalin piksel cinsinden yazı tipi boyutunu kontrol eder.
    "terminal.integrated.fontSize" : 14 ,
  
    // Kalın olmayan metin için terminal içinde kullanılacak yazı tipi ağırlığı. "Normal" ve "kalın" anahtar kelimeleri veya 1 ile 1000 arasındaki sayıları kabul eder.
    "terminal.integrated.fontWeight" : " normal " ,
  
    // Kalın metin için terminal içinde kullanılacak yazı tipi ağırlığı. "Normal" ve "kalın" anahtar kelimeleri veya 1 ile 1000 arasındaki sayıları kabul eder.
    "terminal.integrated.fontWeightBold" : " kalın " ,
  
    // Terminalin işlemesini yapmak için GPU'dan yararlanıp yararlanamayacağını kontrol eder.
    // - otomatik: VS Code'un hangi oluşturucunun en iyi deneyimi vereceğini algılamasına izin verin.
    // - açık: Terminal içinde GPU hızlandırmayı etkinleştirin.
    // - kapalı: Terminal içinde GPU hızlandırmayı devre dışı bırakın.
    // - tuval: Terminal içindeki yedek tuval oluşturucuyu kullanın. Bu, webgl yerine 2d bağlamı kullanır ve bazı sistemlerde daha iyi olabilir.
    "terminal.integrated.gpuAcceleration" : " auto " ,
  
    // İşlemleri yoksaymak için özel bir ayar sağlamak üzere yapılandırılabilir
    "terminal.integrated.ignoreProcessNames" : [],
  
    // Yeni kabukların, ortamlarını $PATH ve diğer geliştirme değişkenlerinin başlatılmasını sağlamak için bir oturum açma kabuğuna kaynak olabilecek VS Kodundan devralıp devralmayacağı. Bunun Windows üzerinde bir etkisi yoktur.
    "terminal.integrated.inheritEnv" : doğru ,
  
    // Terminalin harf aralığını kontrol eder, bu, karakterler arasına eklenecek ek piksel miktarını temsil eden bir tamsayı değeridir.
    "terminal.integrated.letterSpacing" : 0 ,
  
    // Uçbirimin satır yüksekliğini kontrol eder, piksel cinsinden gerçek satır yüksekliğini elde etmek için bu sayı uçbirim yazı tipi boyutuyla çarpılır.
    "terminal.integrated.lineHeight" : 1 ,
  
    // macOS üzerinde Option+tıklama kullanılırken seçimin zorlanıp zorlanmayacağını kontrol eder. Bu, normal (satır) seçimi zorlayacak ve sütun seçim modunun kullanılmasına izin vermeyecektir. Bu, örneğin tmux'ta fare modu etkinleştirildiğinde, normal terminal seçimini kullanarak kopyalama ve yapıştırmayı sağlar.
    "terminal.integrated.macOptionClickForcesSelection" : false ,
  
    // Seçenek tuşunun macOS'taki terminalde meta anahtar olarak ele alınıp alınmayacağını kontrol eder.
    "terminal.integrated.macOptionIsMeta" : yanlış ,
  
    // Ayarlandığında, her hücrenin ön plan rengi belirtilen kontrast oranını karşılamaya çalışacak şekilde değişecektir. Örnek değerler:
    //
    // - 1: Varsayılan, hiçbir şey yapmayın.
    // - 4.5: WCAG AA uyumluluğu (minimum).
    // - 7: WCAG AAA uyumluluğu (gelişmiş).
    // - 21: Siyah üzerine beyaz veya beyaz üzerine siyah.
    "terminal.integrated.minimumContrastRatio" : 1 ,
  
    // Fare tekerleği kaydırma olaylarının "deltaY"sinde kullanılacak bir çarpan.
    "terminal.integrated.mouseWheelScrollSensitivity" : 1 ,
  
    // Terminal işleminin kapatılması gerektiğinde (örneğin, pencerede veya uygulama kapatıldığında), bu, önceki terminal oturumu içeriğinin ne zaman geri yükleneceğini ve çalışma alanı bir sonraki açıldığında işlemlerin ne zaman yeniden oluşturulacağını belirler.
    // - onExit: Windows/Linux'ta son pencere kapatıldıktan sonra veya `workbench.action.quit` komutu tetiklendiğinde (komut paleti, tuş bağlama, menü) işlemleri canlandırın.
    // - onExitAndWindowClose: Windows/Linux'ta son pencere kapatıldıktan sonra veya `workbench.action.quit` komutu tetiklendiğinde (komut paleti, tuş bağlama, menü) veya pencere kapatıldığında işlemleri canlandırın.
    // - asla: Asla terminal arabelleklerini geri yüklemeyin veya işlemi yeniden oluşturmayın.
    "terminal.integrated.persistentSessionReviveProcess" : " onExit " ,
  
    // Kalıcı bir terminal oturumuna yeniden bağlanırken geri yüklenecek maksimum satır miktarını kontrol eder. Bunu artırmak, daha fazla bellek pahasına daha fazla geri kaydırma satırını geri yükleyecek ve başlangıçta terminallere bağlanmak için gereken süreyi artıracaktır. Bu ayarın etkili olması için yeniden başlatma gerekir ve "terminal.integrated.scrollback" değerinden küçük veya buna eşit bir değere ayarlanmalıdır.
    "terminal.integrated.persistentSessionScrollback" : 100 ,
  
    // Terminal açılır menüsü aracılığıyla yeni bir terminal oluştururken sunulacak Linux profilleri. Ayarlandığında, bunlar varsayılan algılanan profilleri geçersiz kılar. Bir "yol" ve isteğe bağlı "arg'lardan" oluşurlar.
    "terminal.integrated.profiles.linux" : {},
  
    // Terminal açılır menüsü aracılığıyla yeni bir terminal oluştururken sunulacak macOS profilleri. Ayarlandığında, bunlar varsayılan algılanan profilleri geçersiz kılar. Bir "yol" ve isteğe bağlı "arg'lardan" oluşurlar.
    "terminal.integrated.profiles.osx" : {},
  
    // Terminal açılır menüsü aracılığıyla yeni bir terminal oluştururken sunulacak Windows profilleri. Bunları hariç tutmak için null olarak ayarlayın, varsayılan algılanan yapılandırmayı kullanmak için 'source' özelliğini kullanın. Veya "yol"u ve isteğe bağlı "args"ı ayarlayın.
    "terminal.integrated.profiles.windows" : {},
  
    // Terminalin sağ tıklamaya nasıl tepki vereceğini kontrol eder.
    // - varsayılan: Bağlam menüsünü göster.
    // - copyPaste: Bir seçim olduğunda kopyala, aksi halde yapıştır.
    // - yapıştır: Sağ tıkla yapıştır.
    // - SelectWord: İmlecin altındaki kelimeyi seçin ve içerik menüsünü gösterin.
    "terminal.integrated.rightClickBehavior" : " kopyalaPaste " ,
  
    // Terminalin arabelleğinde tuttuğu maksimum satır miktarını kontrol eder.
    "terminal.integrated.scrollback" : 1000 ,
  
    // İnce ayar için alternatif olarak kullanılabilen 'terminal.integrated.commandsToSkipShell'i geçersiz kılarak, çoğu tuş bağlamayı workbench yerine terminale gönderir.
    "terminal.integrated.sendKeybindingsToShell" : false ,
  
    // Çıkış kodu sıfır olmadığında "Terminal işlemi çıkış koduyla sonlandırıldı" uyarısının gösterilip gösterilmeyeceğini kontrol eder.
    "terminal.integrated.showExitAlert" : doğru ,
  
    // Terminal çıktısındaki bağlantılar için fareyle üzerine gelmelerin gösterilip gösterilmeyeceği.
    "terminal.integrated.showLinkHover" : doğru ,
  
    // Bölünmüş bir terminalin başladığı çalışma dizinini kontrol eder.
    // - workspaceRoot: Yeni bir bölünmüş terminal, çalışma dizini olarak çalışma alanı kökünü kullanır. Çok köklü bir çalışma alanında, hangi kök klasörün kullanılacağına ilişkin bir seçenek sunulur.
    // - ilk: Yeni bir bölünmüş terminal, ana terminalin başladığı çalışma dizinini kullanacaktır.
    // - devralınan: macOS ve Linux'ta yeni bir bölünmüş terminal, ana terminalin çalışma dizinini kullanır. Windows'ta bu, ilk baştakiyle aynı şekilde davranır.
    "terminal.integrated.splitCwd" : " devralınan " ,
  
    // Başlığın sağında görünen terminal açıklamasını kontrol eder. Değişkenler bağlama göre değiştirilir:
    // - `${cwd}`: terminalin mevcut çalışma dizini
    // - `${cwdFolder}`: terminalin çok köklü çalışma alanları için veya değer ilk çalışma dizininden farklı olduğunda tek bir kök çalışma alanında görüntülenen geçerli çalışma dizini. Bu, Windows için görüntülenmeyecektir.
    // - `${workspaceFolder}`: terminalin başlatıldığı çalışma alanı
    // - `${local}`: uzak çalışma alanındaki yerel bir terminali belirtir
    // - `${process}`: terminal işleminin adı
    // - `${ayırıcı}`: yalnızca değerler veya statik metin içeren değişkenlerle çevrelendiğinde gösterilen koşullu bir ayırıcı (" - ").
    // - `${dizi}`: işlem tarafından xterm.js'ye sağlanan ad
    // - `${task}`: bu terminalin bir görevle ilişkili olduğunu gösterir
    "terminal.integrated.tabs.description" : " ${görev}${ayırıcı}${yerel}${ayırıcı}${cwdFolder} " ,
  
    // Terminal sekme durumlarının animasyonu destekleyip desteklemediğini kontrol eder (örn. devam eden görevler).
    "terminal.integrated.tabs.enableAnimation" : true ,
  
    // Terminal sekmelerinin terminalin yanında bir liste olarak görüntülenip görüntülenmeyeceğini kontrol eder. Bu devre dışı bırakıldığında, bunun yerine bir açılır menü görüntülenecektir.
    "terminal.integrated.tabs.enabled" : doğru ,
  
    // Bir sekmenin uçbirimine odaklanmanın çift tıklamayla mı yoksa tek tıklamayla mı olacağını kontrol eder.
    // - singleClick: Bir terminal sekmesini tıklatırken terminale odaklanın
    // - doubleClick: Bir terminal sekmesine çift tıkladığınızda terminale odaklanın
    "terminal.integrated.tabs.focusMode" : " doubleClick " ,
  
    // Terminal sekmeleri görünümünün belirli koşullar altında gizlenip gizlenmeyeceğini kontrol eder.
    // - asla: Terminal sekmeleri görünümünü asla gizleme
    // - singleTerminal: Yalnızca tek bir terminal açıkken terminal sekmeleri görünümünü gizle
    // - singleGroup: Yalnızca tek bir terminal grubu açıldığında terminal sekmeleri görünümünü gizleyin
    "terminal.integrated.tabs.hideCondition" : " singleTerminal " ,
  
    // Gerçek terminal(ler)in solundaki veya sağındaki terminal sekmelerinin konumunu kontrol eder.
    // - sol: Terminalin solundaki terminal sekmeleri görünümünü göster
    // - sağ: Terminalin sağındaki terminal sekmeleri görünümünü göster
    "terminal.integrated.tabs.location" : " sağ " ,
  
    // 'terminal.integrated.title' ve 'terminal.integrated.description' tarafından kullanılan ayırıcı.
    "terminal.integrated.tabs.separator" : " - " ,
  
    // Yeni terminal düğmesinin yanında terminal bölme ve öldürme düğmelerinin görüntülenip görüntülenmeyeceğini kontrol eder.
    // - her zaman: Eylemleri her zaman göster
    // - singleTerminal: Açılan tek terminal olduğunda eylemleri göster
    // - singleTerminalOrNarrow: Açılan tek terminal olduğunda veya sekmeler görünümü dar metinsiz durumundayken eylemleri göster
    // - asla: Eylemleri asla gösterme
    "terminal.integrated.tabs.showActions" : " singleTerminalOrNarrow " ,
  
    // Görünümde etkin uçbirim bilgilerini gösterir, bu özellikle sekmelerdeki başlık görünür olmadığında kullanışlıdır.
    // - her zaman: Her zaman aktif terminali göster
    // - singleTerminal: Açılan tek terminal olduğunda aktif terminali göster
    // - singleTerminalOrNarrow: Açılan tek terminal olduğunda veya sekmeler görünümü dar metinsiz durumundayken etkin terminali göster
    // - asla: Aktif terminali asla gösterme
    "terminal.integrated.tabs.showActiveTerminal" : " singleTerminalOrNarrow " ,
  
    // Terminal başlığını kontrol eder. Değişkenler bağlama göre değiştirilir:
    // - `${cwd}`: terminalin mevcut çalışma dizini
    // - `${cwdFolder}`: terminalin çok köklü çalışma alanları için veya değer ilk çalışma dizininden farklı olduğunda tek bir kök çalışma alanında görüntülenen geçerli çalışma dizini. Bu, Windows için görüntülenmeyecektir.
    // - `${workspaceFolder}`: terminalin başlatıldığı çalışma alanı
    // - `${local}`: uzak çalışma alanındaki yerel bir terminali belirtir
    // - `${process}`: terminal işleminin adı
    // - `${ayırıcı}`: yalnızca değerler veya statik metin içeren değişkenlerle çevrelendiğinde gösterilen koşullu bir ayırıcı (" - ").
    // - `${dizi}`: işlem tarafından xterm.js'ye sağlanan ad
    // - `${task}`: bu terminalin bir görevle ilişkili olduğunu gösterir
    "terminal.integrated.tabs.title" : " ${process} " ,
  
    // Terminaldeki karakterlerin genişliğini değerlendirirken hangi Unicode sürümünün kullanılacağını kontrol eder. Emoji veya diğer geniş karakterlerin doğru miktarda yer kaplamadığını veya çok fazla veya çok az silme işlemi yaptığını görüyorsanız, bu ayarı değiştirmeyi denemek isteyebilirsiniz.
    // - 6: Unicode'un 6. Sürümü, bu, eski sistemlerde daha iyi çalışması gereken daha eski bir sürümdür.
    // - 11: Unicode'un 11. Sürümü, bu sürüm, Unicode'un modern sürümlerini kullanan modern sistemlerde daha iyi destek sağlar.
    "terminal.integrated.unicodeVersion" : " 11 " ,
  
    // Terminal açılır menüsünde WSL dağıtımlarının gösterilip gösterilmeyeceğini kontrol eder
    "terminal.integrated.useWslProfiles" : doğru ,
  
    // Windows terminal işlem iletişimi için ConPTY'nin kullanılıp kullanılmayacağı (Windows 10 yapı numarası 18309+ gerektirir). Bu yanlışsa Winpty kullanılacaktır.
    "terminal.integrated.windowsEnableConpty" : doğru ,
  
    // Kelimeyi seçmek için çift tıklama ile kelime ayırıcı olarak kabul edilecek tüm karakterleri içeren bir dize.
    "terminal.integrated.wordSeparators" : " ()[]{}', \" `─'' " ,
  
    // Görevler
  
    // Tüm görev sağlayıcı uzantıları için "provideTasks"ın etkinleştirilmesini kontrol eder. Görevler: Görevi Çalıştır komutu yavaşsa, görev sağlayıcılar için otomatik algılamayı devre dışı bırakmak yardımcı olabilir. Bireysel uzantılar, otomatik algılamayı devre dışı bırakan ayarlar da sağlayabilir.
    "task.autoDetect" : " on " ,
  
    // Bir görev çalıştırılırken sorun eşleştirici isteminin gösterilip gösterilmeyeceğini yapılandırır. Hiçbir zaman sorulmaması için 'true' olarak ayarlayın veya yalnızca belirli görev türleri için soru sormayı kapatmak için bir görev türleri sözlüğü kullanın.
    "task.problemMatchers.neverPrompt" : yanlış ,
  
    // Görevi Çalıştır gibi hızlı görev seçimlerinde ayrıntısı olan görevler için görev ayrıntısının gösterilip gösterilmeyeceğini kontrol eder.
    "task.quickOpen.detail" : doğru ,
  
    // Görev hızlı açma iletişim kutusunda izlenen son öğelerin sayısını kontrol eder.
    "task.quickOpen.history" : 30 ,
  
    // Görevlerin sağlayıcıya göre gruplandığı daha hızlı iki seviyeli seçici yerine daha yavaş "tümünü göster" davranışını kullanmak için Görevleri Çalıştır komutunun kullanılmasına neden olur.
    "task.quickOpen.showAll" : yanlış ,
  
    // Seçilecek yalnızca bir görev olduğunda görev hızlı seçiminin atlanıp atlanmayacağını kontrol eder.
    "task.quickOpen.skip" : yanlış ,
  
    // Bir görevi çalıştırmadan önce tüm kirli düzenleyicileri kaydedin.
    // - her zaman: Çalıştırmadan önce her zaman tüm düzenleyicileri kaydeder.
    // - asla: Editörleri çalıştırmadan önce asla kaydetmez.
    // - komut istemi: Çalıştırmadan önce editörlerin kaydedilip kaydedilmeyeceğini sorar.
    "task.saveBeforeRun" : " her zaman " ,
  
    // Sağlayıcı yavaş olduğunda uyarı gösterilip gösterilmeyeceğini yapılandırır
    "task.slowProviderWarning" : doğru ,
  
    // Problemler
  
    // Sorunlar görünümünün dosyaları açarken otomatik olarak ortaya çıkarıp çıkarmayacağını kontrol eder.
    "problems.autoReveal" : true ,
  
    // Dosya ve klasörlerdeki Hataları ve Uyarıları göster.
    "problems.decorations.enabled" : doğru ,
  
    // Etkinleştirildiğinde, durum çubuğunda mevcut sorunu gösterir.
    "problems.showCurrentInStatus" : yanlış ,
  
    // Sorunların gezilme sırasını kontrol eder.
    // - önem derecesi: Önem derecesine göre sıralanmış sorunlarda gezinin
    // - konum: Konuma göre sıralanmış problemlerde gezinin
    "problems.sortOrder" : " önem derecesi " ,
  
    // Breadcrumb Navigasyonu
  
    // Gezinme kırıntılarını etkinleştirin/devre dışı bırakın.
    "breadcrumbs.enabled" : doğru ,
  
    // İçerik haritaları görünümünde dosya yollarının gösterilip gösterilmeyeceğini ve nasıl gösterileceğini kontrol eder.
    // - açık: İçerik haritaları görünümünde dosya yolunu göster.
    // - kapalı: İçerik haritaları görünümünde dosya yolunu gösterme.
    // - son: İçerik haritaları görünümünde yalnızca dosya yolunun son öğesini göster.
    "breadcrumbs.filePath" : " üzerinde " ,
  
    // İçerik haritası öğelerini simgelerle oluştur.
    "breadcrumbs.icons" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "dizi" sembollerini gösterir.
    "breadcrumbs.showArrays" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "boolean" sembollerini gösterir.
    "breadcrumbs.showBooleans" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "sınıf" sembollerini gösterir.
    "breadcrumbs.showClasses" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "sabit" semboller gösterir.
    "breadcrumbs.showConstants" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "kurucu" sembollerini gösterir.
    "breadcrumbs.showConstructors" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "enumMember" sembollerini gösterir.
    "breadcrumbs.showEnumMembers" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "enum" sembollerini gösterir.
    "breadcrumbs.showEnums" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "olay" sembollerini gösterir.
    "breadcrumbs.showEvents" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "alan" sembollerini gösterir.
    "breadcrumbs.showFields" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar `dosya` sembollerini gösterir.
    "breadcrumbs.showFiles" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "işlev" sembollerini gösterir.
    "breadcrumbs.showFunctions" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "arayüz" sembollerini gösterir.
    "breadcrumbs.showInterfaces" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "anahtar" sembollerini gösterir.
    "breadcrumbs.showKeys" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "yöntem" sembollerini gösterir.
    "breadcrumbs.showMethods" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "modül" sembollerini gösterir.
    "breadcrumbs.showModules" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "ad alanı" sembollerini gösterir.
    "breadcrumbs.showNamespaces" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "boş" sembollerini gösterir.
    "breadcrumbs.showNull" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "sayı" sembollerini gösterir.
    "breadcrumbs.showNumbers" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "nesne" sembollerini gösterir.
    "breadcrumbs.showObjects" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar 'operatör' sembollerini gösterir.
    "breadcrumbs.showOperators" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "paket" sembollerini gösterir.
    "breadcrumbs.showPackages" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "özellik" sembollerini gösterir.
    "breadcrumbs.showProperties" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar "dize" sembollerini gösterir.
    "breadcrumbs.showStrings" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar `struct` sembollerini gösterir.
    "breadcrumbs.showStructs" : doğru ,
  
    // Etkinleştirildiğinde, kırıntılar `typeParameter` sembollerini gösterir.
    "breadcrumbs.showTypeParameters" : true ,
  
    // Etkinleştirildiğinde, kırıntılar "değişken" sembollerini gösterir.
    "breadcrumbs.showVariables" : doğru ,
  
    // İçerik haritaları görünümünde simgelerin gösterilip gösterilmeyeceğini ve nasıl gösterileceğini kontrol eder.
    // - açık: İçerik haritaları görünümündeki tüm sembolleri göster.
    // - kapalı: İçerik haritaları görünümünde sembolleri gösterme.
    // - son: İçerik haritaları görünümünde yalnızca geçerli sembolü göster.
    "breadcrumbs.symbolPath" : " üzerinde " ,
  
    // İçerik haritaları anahat görünümünde sembollerin nasıl sıralanacağını kontrol eder.
    // - konum: Sembol anahattını dosya konumu sırasına göre göster.
    // - isim: Sembol ana hatlarını alfabetik sırayla göster.
    // - tip: Sembol anahattını sembol tipi sırasına göre göster.
    "breadcrumbs.symbolSortOrder" : " pozisyon " ,
  
    // Telemetri
  
    // Bu ayar yanlışsa, yeni ayarın değerinden bağımsız olarak hiçbir telemetri gönderilmez. "telemetri.telemetryLevel" ayarıyla birleştirildiği için kullanımdan kaldırıldı.
    // Toplanacak kilitlenme raporlarını etkinleştir.
    "telemetri.enableCrashReporter" : doğru ,
  
    // Bu ayar yanlışsa, yeni ayarın değerinden bağımsız olarak hiçbir telemetri gönderilmez. "telemetri.telemetryLevel" ayarı yerine kullanımdan kaldırıldı.
    // Toplanacak tanılama verilerini etkinleştirin.
    "telemetri.enableTelemetry" : doğru ,
  
    // Tüm çekirdek ve birinci taraf uzantı telemetrisini kontrol eder.
    // - tümü: Kullanım verilerini, hataları ve kilitlenme raporlarını gönderir.
    // - hata: Genel hata telemetrisini ve kilitlenme raporlarını gönderir.
    // - kilitlenme: İşletim sistemi düzeyinde kilitlenme raporları gönderir.
    // - kapalı: Tüm ürün telemetrisini devre dışı bırakır.
    "telemetri.telemetryLevel" : " tümü " ,
  
    // Anahat
  
    // Anahat Öğelerini Simgelerle Oluşturun.
    "outline.icons" : doğru ,
  
    // Hatalar ve Uyarılar için rozetleri kullanın.
    "outline.problems.badges" : true ,
  
    // Hatalar ve Uyarılar için renkleri kullanın.
    "outline.problems.colors" : doğru ,
  
    // Anahat Öğelerinde Hataları ve Uyarıları Göster.
    "outline.problems.enabled" : doğru ,
  
    // Etkinleştirildiğinde anahat 'dizi'-sembollerini gösterir.
    "outline.showArrays" : doğru ,
  
    // Etkinleştirildiğinde anahat `boolean` sembollerini gösterir.
    "outline.showBooleans" : doğru ,
  
    // Etkinleştirildiğinde anahat 'sınıf' sembollerini gösterir.
    "outline.showClasses" : doğru ,
  
    // Etkinleştirildiğinde anahat 'sabit' sembollerini gösterir.
    "outline.showConstants" : doğru ,
  
    // Etkinleştirildiğinde, ana hat `kurucu` sembollerini gösterir.
    "outline.showConstructors" : doğru ,
  
    // Etkinleştirildiğinde anahat `enumMember` sembollerini gösterir.
    "outline.showEnumMembers" : doğru ,
  
    // Etkinleştirildiğinde anahat `enum` sembollerini gösterir.
    "outline.showEnums" : doğru ,
  
    // Etkinleştirildiğinde anahat 'olay' sembollerini gösterir.
    "outline.showEvents" : doğru ,
  
    // Etkinleştirildiğinde anahat `alan` sembollerini gösterir.
    "outline.showFields" : doğru ,
  
    // Etkinleştirildiğinde anahat `dosya` sembollerini gösterir.
    "outline.showFiles" : doğru ,
  
    // Etkinleştirildiğinde anahat `işlev` sembollerini gösterir.
    "outline.showFunctions" : doğru ,
  
    // Etkinleştirildiğinde anahat 'arayüz' sembollerini gösterir.
    "outline.showInterfaces" : doğru ,
  
    // Etkinleştirildiğinde anahat `anahtar` sembollerini gösterir.
    "outline.showKeys" : doğru ,
  
    // Etkinleştirildiğinde anahat `yöntem` sembollerini gösterir.
    "outline.showMethods" : doğru ,
  
    // Etkinleştirildiğinde anahat `modül` sembollerini gösterir.
    "outline.showModules" : doğru ,
  
    // Etkinleştirildiğinde anahat `ad alanı` sembollerini gösterir.
    "outline.showNamespaces" : doğru ,
  
    // Etkinleştirildiğinde anahat `null` sembollerini gösterir.
    "outline.showNull" : doğru ,
  
    // Etkinleştirildiğinde anahat 'sayı'-sembollerini gösterir.
    "outline.showNumbers" : doğru ,
  
    // Etkinleştirildiğinde anahat `nesne` sembollerini gösterir.
    "outline.showObjects" : doğru ,
  
    // Etkinleştirildiğinde ana hat 'operatör' sembollerini gösterir.
    "outline.showOperators" : doğru ,
  
    // Etkinleştirildiğinde anahat `paket` sembollerini gösterir.
    "outline.showPackages" : doğru ,
  
    // Etkinleştirildiğinde ana hat 'özellik' sembollerini gösterir.
    "outline.showProperties" : doğru ,
  
    // Etkinleştirildiğinde anahat `string` sembollerini gösterir.
    "outline.showStrings" : doğru ,
  
    // Etkinleştirildiğinde anahat `struct` sembollerini gösterir.
    "outline.showStructs" : doğru ,
  
    // Etkinleştirildiğinde anahat `typeParameter` sembollerini gösterir.
    "outline.showTypeParameters" : doğru ,
  
    // Etkinleştirildiğinde anahat 'değişken' sembollerini gösterir.
    "outline.showVariables" : doğru ,
  
    // Zaman çizelgesi
  
    // Zaman Çizelgesi görünümünden çıkarılması gereken bir Zaman Çizelgesi kaynakları dizisi.
    "timeline.excludeSources" : boş ,
  
    // Varsayılan olarak ve daha fazla öğe yüklenirken Zaman Çizelgesi görünümünde gösterilecek öğe sayısı. 'null' (varsayılan) olarak ayarlamak, Zaman Çizelgesi görünümünün görünür alanına dayalı olarak otomatik olarak bir sayfa boyutu seçecektir.
    "timeline.pageSize" : boş ,
  
    // Varsayılan Yapılandırma Geçersiz Kılmalar
  
    // [css] dili için geçersiz kılınacak ayarları yapılandırın.
    "[css]" : {
      "editor.suggest.insertMode" : " değiştir "
    },
  
    // [dockercompose] dili için geçersiz kılınacak ayarları yapılandırın.
    "[dockercompose]" : {
      "editor.insertSpaces" : doğru ,
      "editor.tabSize" : 2 ,
      "editor.autoIndent" : " gelişmiş "
    },
  
    // [dockerfile] dili için geçersiz kılınacak ayarları yapılandırın.
    "[dockerfile]" : {
      "editor.quickÖneriler" : {
        "dizeler" : doğru
      }
    },
  
    // [git-commit] dili için geçersiz kılınacak ayarları yapılandırın.
    "[git-taahhüt]" : {
      "editor.rulers" : [ 72 ],
      "workbench.editor.restoreViewState" : yanlış
    },
  
    // [git-rebase] dili için geçersiz kılınacak ayarları yapılandırın.
    "[git-rebase]" : {
      "workbench.editor.restoreViewState" : yanlış
    },
  
    // [go] dili için geçersiz kılınacak ayarları yapılandırın.
    "[git]" : {
      "editor.insertSpaces" : yanlış
    },
  
    // [gidonlar] dili için geçersiz kılınacak ayarları yapılandırın.
    "[gidonlar]" : {
      "editor.suggest.insertMode" : " değiştir "
    },
  
    // [html] dili için geçersiz kılınacak ayarları yapılandırın.
    "[html]" : {
      "editor.suggest.insertMode" : " değiştir "
    },
  
    // [javascript] dili için geçersiz kılınacak ayarları yapılandırın.
    "[javascript]" : {
      "editor.maxTokenizationLineLength" : 2500
    },
  
    // [json] dili için geçersiz kılınacak ayarları yapılandırın.
    "[json]" : {
      "editor.quickÖneriler" : {
        "dizeler" : doğru
      },
      "editor.suggest.insertMode" : " değiştir "
    },
  
    // [jsonc] dili için geçersiz kılınacak ayarları yapılandırın.
    "[jsonc]" : {
      "editor.quickÖneriler" : {
        "dizeler" : doğru
      },
      "editor.suggest.insertMode" : " değiştir "
    },
  
    // [less] dil için geçersiz kılınacak ayarları yapılandırın.
    "[daha az]" : {
      "editor.suggest.insertMode" : " değiştir "
    },
  
    // [makefile] dili için geçersiz kılınacak ayarları yapılandırın.
    "[makefile]" : {
      "editor.insertSpaces" : yanlış
    },
  
    // [markdown] dili için geçersiz kılınacak ayarları yapılandırın.
    "[işaretleme]" : {
      "editor.unicodeHighlight.ambiguousCharacters" : false ,
      "editor.wordWrap" : " üzerinde " ,
      "editor.quickÖneriler" : yanlış
    },
  
    // [düz metin] dili için geçersiz kılınacak ayarları yapılandırın.
    "[düz metin]" : {
      "editor.unicodeHighlight.ambiguousCharacters" : yanlış
    },
  
    // [scss] dili için geçersiz kılınacak ayarları yapılandırın.
    "[scss]" : {
      "editor.suggest.insertMode" : " değiştir "
    },
  
    // [arama sonucu] dili için geçersiz kılınacak ayarları yapılandırın.
    "[arama sonucu]" : {
      "editor.lineNumbers" : " kapalı "
    },
  
    // [shellscript] dili için geçersiz kılınacak ayarları yapılandırın.
    "[kabuk yazısı]" : {
      "files.eol" : " \n "
    },
  
    // [yaml] dili için geçersiz kılınacak ayarları yapılandırın.
    "[yaml]" : {
      "editor.insertSpaces" : doğru ,
      "editor.tabSize" : 2 ,
      "editor.autoIndent" : " gelişmiş "
    },
  
    // Uzak
  
    // Etkinleştirildiğinde, çalışan yeni işlemler algılanır ve dinledikleri bağlantı noktaları otomatik olarak iletilir. Bu ayarın devre dışı bırakılması, tüm bağlantı noktalarının iletilmesini engellemez. Devre dışı bırakıldığında bile, uzantılar bağlantı noktalarının yönlendirilmesine neden olabilecek ve bazı URL'lerin açılması bağlantı noktalarının iletilmesine neden olacaktır.
    "remote.autoForwardPorts" : true ,
  
    // "remote.autoForwardPorts" doğru olduğunda bağlantı noktalarının otomatik olarak yönlendirileceği kaynağı ayarlar. Windows ve Mac uzaktan kumandalarında, "işlem" seçeneğinin hiçbir etkisi yoktur ve "çıktı" kullanılacaktır. Etkili olması için yeniden yükleme gerektirir.
    // - işlem: Başlatılan ve bir bağlantı noktası içeren işlemler izlenerek keşfedildiğinde bağlantı noktaları otomatik olarak iletilecektir.
    // - çıktı: Terminal ve hata ayıklama çıktısı okunarak keşfedildiğinde bağlantı noktaları otomatik olarak iletilecektir. Bağlantı noktalarını kullanan tüm işlemler entegre terminale veya hata ayıklama konsoluna yazdırılmayacaktır, bu nedenle bazı bağlantı noktaları kaçırılacaktır. Çıktıya göre iletilen bağlantı noktaları, yeniden yüklenene veya bağlantı noktası kullanıcı tarafından Bağlantı Noktaları görünümünde kapatılana kadar "yönlendirilmez".
    "remote.autoForwardPortsSource" : " süreç " ,
  
    // Etkinleştirilen uzantılar yerel olarak indirilip uzaktan kumandaya yüklendiğinde.
    "remote.downloadExtensionsLocally" : false ,
  
    // Bir uzantı türünü geçersiz kıl. "ui" uzantıları yerel makinede kurulur ve çalıştırılırken, "çalışma alanı" uzantıları uzaktan kumandada çalıştırılır. Bu ayarı kullanarak bir uzantının varsayılan türünü geçersiz kılarak, bu uzantının yerel olarak mı yoksa uzaktan mı yüklenip etkinleştirileceğini belirtirsiniz.
    "remote.extensionKind" : {
      "pub.name" : [ " ui " ]
    },
  
    // Bağlantı noktası yönlendirme için kullanılacak yerel ana bilgisayar adını belirtir.
    "remote.localPortHost" : " localhost " ,
  
    // `remote.portsAttributes` ayarından özellik almayan tüm bağlantı noktalarına uygulanan varsayılan özellikleri ayarlayın.
    "remote.otherPortsAttributes" : {},
  
    // Set properties that are applied when a specific port number is forwarded.
    "remote.portsAttributes": {},
  
    // Restores the ports you forwarded in a workspace.
    "remote.restoreForwardedPorts": true,
  
    // Emmet
  
    // An array of languages where Emmet abbreviations should not be expanded.
    "emmet.excludeLanguages": ["markdown"],
  
    // An array of paths, where each path can contain Emmet syntaxProfiles and/or snippet files.
    // In case of conflicts, the profiles/snippets of later paths will override those of earlier paths.
    "emmet.extensionsPath": [],
  
    // Varsayılan olarak desteklenmeyen dillerde Emmet kısaltmalarını etkinleştirin. Buraya dil ve Emmet tarafından desteklenen dil arasında bir eşleme ekleyin.
    // Örneğin: `{"vue-html": "html", "javascript": "javascriptreact"}`
    "emmet.includeLanguages" : {},
  
    // 'false' olarak ayarlandığında, mevcut konumun Emmet kısaltmalarını genişletmek için geçerli olup olmadığını belirlemek için tüm dosya ayrıştırılır. "true" olarak ayarlandığında, yalnızca CSS/SCSS/Less dosyalarındaki geçerli konumun etrafındaki içerik ayrıştırılır.
    "emmet.optimizeStylesheetParsing" : true ,
  
    // Emmet'in bazı eylemlerinin ve çözümleyicilerinin davranışını değiştirmek için kullanılan tercihler.
    "emmet.preferences" : {},
  
    // Olası Emmet kısaltmalarını öneri olarak gösterir. Stil sayfalarında veya emmet.showExpandedAbbreviation "asla" olarak ayarlandığında geçerli değildir.
    "emmet.showKısaltmaÖneriler" : true ,
  
    // Genişletilmiş Emmet kısaltmalarını öneri olarak gösterir.
    // `"inMarkupAndStylesheetFilesOnly"` seçeneği html, haml, jade, slim, xml, xsl, css, scss, sass, less ve stylus için geçerlidir.
    // `"always"` seçeneği, biçimlendirme/css'den bağımsız olarak dosyanın tüm bölümleri için geçerlidir.
    "emmet.showExpandedKısaltma" : " her zaman " ,
  
    // "true" ise, Emmet önerileri, onları "editör.snippetÖneriler" ayarına göre sipariş etmenize olanak tanıyan snippet'ler olarak görünür.
    "emmet.show RecommendionsAsSnippets" : false ,
  
    // Belirtilen sözdizimi için profili tanımlayın veya belirli kurallarla kendi profilinizi kullanın.
    "emmet.syntaxProfiles" : {},
  
    // Etkinleştirildiğinde, SEKME tuşuna basıldığında Emmet kısaltmaları genişletilir.
    "emmet.triggerExpansionOnTab" : yanlış ,
  
    // Emmet snippet'lerinde kullanılacak değişkenler.
    "emmet.değişkenler" : {},
  
    // Git
  
    // Zorla itmenin (kiralamalı veya kiralamasız) etkinleştirilip etkinleştirilmediğini kontrol eder.
    "git.allowForcePush" : yanlış ,
  
    // Ön-taahhüt ve taahhüt-msg kancalarını çalıştırmadan kesinleştirmelere izin verilip verilmediğini kontrol eder.
    "git.allowNoVerifyCommit" : yanlış ,
  
    // Her zaman Aşamalı Değişiklikler kaynak grubunu göster.
    "git.alwaysShowStagedChangesResourceGroup" : false ,
  
    // Tüm taahhütler için imza bayrağını kontrol eder.
    "git.alwaysSignOff" : yanlış ,
  
    // true olarak ayarlandığında, taahhütler otomatik olarak geçerli Git deposunun varsayılan uzaktan kumandasından alınır. 'all' olarak ayarlamak, tüm uzaktan kumandalardan getirecektir.
    "git.autofetch" : yanlış ,
  
    // "git.autofetch" etkinleştirildiğinde, her otomatik git getirme işlemi arasındaki saniye cinsinden süre.
    "git.autofetchPeriod" : 180 ,
  
    // Otomatik yenilemenin etkin olup olmadığı.
    "git.autorefresh" : doğru ,
  
    // Depoların ne zaman otomatik olarak algılanacağını yapılandırır.
    // - true: Geçerli açık klasörün hem alt klasörlerini hem de açık dosyaların üst klasörlerini tarayın.
    // - false: Otomatik depo taramasını devre dışı bırakın.
    // - alt Klasörler: Açık olan klasörün alt klasörlerini tara.
    // - openEditors: Açık dosyaların üst klasörlerini tarayın.
    "git.autoRepositoryDetection" : true ,
  
    // Herhangi bir değişikliği çekmeden önce saklayın ve başarılı bir şekilde çektikten sonra geri yükleyin.
    "git.autoStash" : yanlış ,
  
    // Dallar için sıralama düzenini kontrol eder.
    "git.branchSortOrder" : " taahhüt tarihi " ,
  
    // Yeni dal adlarını doğrulamak için normal bir ifade.
    "git.branchValidationRegex" : " " ,
  
    // Yeni dal adlarında boşluk değiştirilecek karakter.
    "git.branchWhitespaceChar" : " - " ,
  
    // `Checkout to...` ​​çalıştırılırken ne tür git referanslarının listelendiğini kontrol eder.
    // - yerel: Yerel şubeler
    // - etiketler: Etiketler
    // - uzak: Uzak dallar
    "git.checkoutType" : [ " yerel " , " uzak " , " etiketler " ],
  
    // 'Git: Commit Empty' komutu için her zaman boş taahhütlerin oluşturulmasını onaylayın.
    "git.confirmEmptyCommits" : doğru ,
  
    // Zorlamadan önce onay istenip istenmeyeceğini kontrol eder.
    "git.confirmForcePush" : doğru ,
  
    // Doğrulama olmadan taahhütte bulunmadan önce onay istenip istenmeyeceğini kontrol eder.
    "git.confirmNoVerifyCommit" : doğru ,
  
    // Git depolarını senkronize etmeden önce onaylayın.
    "git.confirmSync" : doğru ,
  
    // Git sayısı rozetini kontrol eder.
    // - tümü: Tüm değişiklikleri sayın.
    // - izlendi: Yalnızca izlenen değişiklikleri sayın.
    // - kapalı: Sayacı kapatır.
    "git.countBadge" : " tümü " ,
  
    // Git'in Explorer'a ve Editörleri Aç görünümüne renk ve rozet katkısı sağlayıp sağlamadığını kontrol eder.
    "git.decorations.enabled" : true ,
  
    // Git deposunu klonlamak için varsayılan konum.
    "git.defaultCloneDirectory" : boş ,
  
    // Git alt modüllerinin otomatik olarak algılanıp algılanmayacağını kontrol eder.
    "git.detectSubmodules" : doğru ,
  
    // Algılanan git alt modüllerinin sınırını kontrol eder.
    "git.detectSubmodulesLimit" : 10 ,
  
    // GPG veya X.509 ile kesin imzalamayı etkinleştirir.
    "git.enableCommitSigning" : yanlış ,
  
    // Git'in etkin olup olmadığı.
    "git.enabled" : doğru ,
  
    // Aşamalı değişiklik olmadığında tüm değişiklikleri taahhüt et.
    "git.enableSmartCommit" : yanlış ,
  
    // Git Sync komutunun durum çubuğunda görünüp görünmediğini kontrol eder.
    "git.enableStatusBarSync" : doğru ,
  
    // Etkinleştirildiğinde, çekerken tüm dalları getir. Aksi takdirde, yalnızca geçerli olanı getirin.
    "git.fetchOnPull" : yanlış ,
  
    // sync komutunu çalıştırırken tüm etiketleri it'i takip edin.
    "git.followTagsWhenSync" : false ,
  
    // Yoksayılacak git depolarının listesi.
    "git.ignoredRepositories" : [],
  
    // Eski Git uyarısını yok sayar.
    "git.ignoreLegacyWarning" : yanlış ,
  
    // Bir depoda çok fazla değişiklik olduğunda uyarıyı yok sayar.
    "git.ignoreLimitWarning" : yanlış ,
  
    // Git eksik olduğunda uyarıyı yok sayar.
    "git.ignoreMissingGitWarning" : yanlış ,
  
    // Dal çekilirken yeniden temellendirilmiş gibi göründüğünde uyarıyı yok sayar.
    "git.ignoreRebaseWarning" : yanlış ,
  
    // Dosya ağacındaki alt modüllerde yapılan değişiklikleri yok sayın.
    "git.ignoreSubmodules" : yanlış ,
  
    // Windows'ta Git 2.25 - 2.26 yüklendiğinde uyarıyı yok sayar.
    "git.ignoreWindowsGit27Warning" : yanlış ,
  
    // Kesin mesaj girişi doğrulamasının ne zaman gösterileceğini kontrol eder.
    "git.inputValidation" : " uyar " ,
  
    // Bir uyarı göstermek için taahhüt mesajı uzunluğu eşiğini kontrol eder.
    "git.inputValidationLength" : 72 ,
  
    // Bir uyarı göstermek için taahhüt mesajı konu uzunluğu eşiğini kontrol eder. "config.inputValidationLength" değerini devralacak şekilde ayarını kaldırın.
    "git.inputValidationSubjectLength" : 50 ,
  
    // Klonlamadan sonra bir havuzun otomatik olarak açılıp açılmayacağını kontrol eder.
    // - her zaman: Her zaman geçerli pencerede aç.
    // - AlwaysNewWindow: Her zaman yeni bir pencerede aç.
    // - WhenNoFolderOpen: Yalnızca geçerli pencerede, hiçbir klasör açılmadığında aç.
    // - komut istemi: Her zaman eylem istemi.
    "git.openAfterClone" : " komut istemi " ,
  
    // Bir değişiklik tıklandığında diff editörünün açılıp açılmayacağını kontrol eder. Aksi takdirde normal editör açılacaktır.
    "git.openDiffOnClick" : doğru ,
  
    // Git yürütülebilir dosyasının yolu ve dosya adı, örneğin `C:\Program Files\Git\bin\git.exe` (Windows). Bu, aranacak birden çok yol içeren bir dizi dize değeri de olabilir.
    "git.path" : boş ,
  
    // Başarılı bir taahhütten sonra bir git komutu çalıştırır.
    // - yok: Bir taahhütten sonra herhangi bir komut çalıştırmayın.
    // - push: Başarılı bir taahhütten sonra 'Git Push'u çalıştırın.
    // - senkronizasyon: Başarılı bir taahhütten sonra 'Git Sync'i çalıştırın.
    "git.postCommitCommand" : " yok " ,
  
    // Git'in kaydetmeden önce kaydedilmemiş dosyaları kontrol edip etmeyeceğini kontrol eder.
    // - her zaman: Kaydedilmemiş dosyaları kontrol edin.
    // - aşamalı: Yalnızca kaydedilmemiş aşamalı dosyaları kontrol edin.
    // - asla: Bu kontrolü devre dışı bırakın.
    "git.promptToSaveFilesBeforeCommit" : " her zaman " ,
  
    // Değişiklikleri saklamadan önce Git'in kaydedilmemiş dosyaları kontrol edip etmeyeceğini kontrol eder.
    // - her zaman: Kaydedilmemiş dosyaları kontrol edin.
    // - aşamalı: Yalnızca kaydedilmemiş aşamalı dosyaları kontrol edin.
    // - asla: Bu kontrolü devre dışı bırakın.
    "git.promptToSaveFilesBeforeStash" : " her zaman " ,
  
    // Getirirken budama yapın.
    "git.pruneOnFetch" : yanlış ,
  
    // Çekerken tüm etiketleri getir.
    "git.pullTags" : doğru ,
  
    // sync komutunu çalıştırırken git'i rebase kullanmaya zorla.
    "git.rebaseWhenSync" : yanlış ,
  
    // Açık Git kullanıcı yapılandırmasının gerekip gerekmediğini veya eksikse Git'in tahmin etmesine izin verilip verilmeyeceğini kontrol eder.
    "git.requireGitUserConfig" : doğru ,
  
    // İçinde git depoları aranacak yolların listesi.
    "git.scanRepositories" : [],
  
    // Git kaynak kontrol panelinde taahhüt girişinin gösterilip gösterilmeyeceğini kontrol eder.
    "git.showCommitInput" : doğru ,
  
    // Git değişiklikleri görünümünde satır içi Dosya Aç eyleminin gösterilip gösterilmeyeceğini kontrol eder.
    "git.showInlineOpenFileAction" : doğru ,
  
    // Git eylemlerinin ilerleme gösterip göstermeyeceğini kontrol eder.
    "git.showProgress" : doğru ,
  
    // Bir push işlemi başarılı olduğunda bildirim gösterilip gösterilmeyeceğini kontrol eder.
    "git.showPushSuccessNotification" : yanlış ,
  
    // Yayınlanmamış taahhütler varsa, senkronize etmek veya yayınlamak için bir eylem düğmesinin gösterilip gösterilmeyeceğini kontrol eder.
    // - her zaman: Yayınlanmamış taahhütler varsa, her zaman eylem düğmesini gösterir.
    // - WhenEmpty: Eylem düğmesini yalnızca başka bir değişiklik yoksa ve yayınlanmamış taahhütler varsa gösterir.
    // - asla: Eylem düğmesini hiçbir zaman göstermez.
    "git.showUnpublishedCommitsButton" : " WhenEmpty " ,
  
    // Smart Commit tarafından hangi değişikliklerin otomatik olarak gerçekleştirileceğini kontrol edin.
    // - tümü: Tüm değişiklikleri otomatik olarak aşamalandırın.
    // - izlendi: Yalnızca izlenen değişiklikleri otomatik olarak aşamalandırın.
    "git.smartCommitChanges" : " tümü " ,
  
    // Git durum komutundan ayrıştırılabilecek değişiklik sayısının nasıl sınırlanacağını kontrol eder. Limitsiz olarak 0'a ayarlanabilir.
    "git.statusLimit" : 10000 ,
  
    // Akıllı kaydetmeyi etkinleştirmeyi önerir (aşamalı değişiklik olmadığında tüm değişiklikleri uygula).
    "git.suggestSmartCommit" : doğru ,
  
    // Senkronizasyon eylemi çalıştırıldığında, kullanıcının işlemi iptal etmesini sağlayan bir bildirim gelip gelmediğini kontrol eder.
    "git.supportCancellation" : yanlış ,
  
    // VS Code'un tümleşik terminalde oluşturulan git işlemleri için kimlik doğrulama işleyicisi olarak etkinleştirilip etkinleştirilmeyeceğini kontrol eder. Not: Bu ayardaki bir değişikliği almak için terminallerin yeniden başlatılması gerekir.
    "git.terminalAuthentication" : doğru ,
  
    // Zaman Çizelgesi görünümündeki öğeler için hangi tarihin kullanılacağını kontrol eder.
    // - taahhüt: taahhüt edilen tarihi kullanın
    // - yazar: Yazma tarihini kullan
    "git.timeline.date" : " taahhüt edilmiş " ,
  
    // Kesinleşen yazarın Zaman Çizelgesi görünümünde gösterilip gösterilmeyeceğini kontrol eder.
    "git.timeline.showAuthor" : doğru ,
  
    // İzlenmeyen değişikliklerin nasıl davranacağını kontrol eder.
    // - karışık: İzlenen ve izlenmeyen tüm değişiklikler birlikte görünür ve eşit davranır.
    // - ayrı: İzlenmeyen değişiklikler Kaynak Kontrolü görünümünde ayrı olarak görünür. Ayrıca çeşitli eylemlerden hariç tutulurlar.
    // - gizli: İzlenmeyen değişiklikler gizlenir ve çeşitli eylemlerden hariç tutulur.
    "git.untrackedChanges" : " karışık " ,
  
    // Taahhüt giriş kutusundan gelen mesajın varsayılan saklama mesajı olarak kullanılıp kullanılmayacağını kontrol eder.
    "git.useCommitInputAsStashMessage" : false ,
  
    // Zorlamanın daha güvenli kiralamalı kuvvet varyantını kullanıp kullanmadığını kontrol eder.
    "git.useForcePushWithLease" : true ,
  
    // VS Kodu içindeki git komutları için otomatik GitHub kimlik doğrulamasının etkinleştirilip etkinleştirilmeyeceğini kontrol eder.
    "github.gitAuthentication" : doğru ,
  
    // GitHub Enterprise Örnekinizin URI'si
    "github-enterprise.uri" : " " ,
  
    // Homurtu
  
    // Grunt görev algılamasının etkinleştirilmesini kontrol eder. Grunt görev algılama, herhangi bir açık çalışma alanındaki dosyaların yürütülmesine neden olabilir.
    "grunt.autoDetect" : " kapalı " ,
  
    // yudum
  
    // Gulp görev algılamasının etkinleştirilmesini kontrol eder. Gulp görev algılama, herhangi bir açık çalışma alanındaki dosyaların yürütülmesine neden olabilir.
    "gulp.autoDetect" : " kapalı " ,
  
    // Jake
  
    // Jake görev algılamasının etkinleştirilmesini kontrol eder. Jake görev algılama, herhangi bir açık çalışma alanındaki dosyaların yürütülmesine neden olabilir.
    "jake.autoDetect" : " kapalı " ,
  
    // Çakışmayı Birleştir
  
    // Bir birleştirme çakışmasını çözdükten sonra bir sonraki birleştirme çakışmasına otomatik olarak gidilip gidilmeyeceği.
    "merge-conflict.autoNavigateNextConflict.enabled" : false ,
  
    // Düzenleyici içinde çakışma bloklarını birleştirmek için bir CodeLens oluşturun.
    "merge-conflict.codeLens.enabled" : true ,
  
    // Düzenleyici içinde çakışma bloklarını birleştirmek için dekoratörler oluşturun.
    "merge-conflict.decorators.enabled" : true ,
  
    // Birleştirme çakışmalarındaki değişiklikleri karşılaştırırken fark görünümünün nerede açılacağını kontrol eder.
    // - Geçerli: Geçerli düzenleyici grubundaki fark görünümünü açın.
    // - Yanında: Mevcut editör grubunun yanındaki fark görünümünü açın.
    // - Aşağıda: Mevcut editör grubunun altındaki fark görünümünü açın.
    "merge-conflict.diffViewPosition" : " Geçerli " ,
  
    // JavaScript Hata Ayıklayıcı
  
    // `debug.node.autoAttach` açıkken hangi işlemlerin otomatik olarak ekleneceğini ve hata ayıklanacağını yapılandırır. "--inspect" bayrağıyla başlatılan bir Düğüm işlemi, bu ayardan bağımsız olarak her zaman eklenecektir.
    // - her zaman: Terminalde başlatılan her Node.js işlemine otomatik olarak eklenir.
    // - akıllı: node_modules klasöründe olmayan komut dosyalarını çalıştırırken otomatik ekleme.
    // - onlyWithFlag: Yalnızca `--inspect' verildiğinde otomatik olarak eklenir.
    // - devre dışı: Otomatik ekleme devre dışıdır ve durum çubuğunda gösterilmez.
    "debug.javascript.autoAttachFilter" : " devre dışı " ,
  
    // "akıllı" `debug.javascript.autoAttachFilter' modunda ne zaman ekleneceğini belirlemek için glob kalıplarını yapılandırır. "$KNOWN_TOOLS$", yaygın test ve kod çalıştırıcıların adlarının bir listesiyle değiştirilir.
    "debug.javascript.autoAttachSmartPattern" : [
      " ${workspaceFolder}/** " ,
      " !**/node_modules/** " ,
      " **/$KNOWN_TOOLS$/** "
    ],
  
    // Özellik alıcılarının otomatik olarak genişletilip genişletilmeyeceğini yapılandırır. Eğer bu yanlışsa, alıcı `get propertyName` olarak görünecek ve sadece üzerine tıkladığınızda değerlendirilecektir.
    "debug.javascript.autoExpandGetters" : yanlış ,
  
    // Uzak bir web uygulamasında hata ayıklarken, uzak sunucuyu yerel makinenize otomatik olarak tünelleyip tünellememeyi yapılandırır.
    "debug.javascript.automaticallyTunnelRemoteServer" : true ,
  
    // Koşullu kesme noktaları bir hata verdiğinde durup durmayacağı.
    "debug.javascript.breakOnConditionalError" : yanlış ,
  
    // Npm komut dosyalarınızda bir "Çalıştır" ve "Hata Ayıkla" kod merceğinin gösterilmesi gereken yer. "tümü", komut dosyaları, komut dosyası bölümünün "üstü" veya "hiçbir zaman" olabilir.
    "debug.javascript.codelens.npmScripts" : " top " ,
  
    // JavaScript Hata Ayıklama Terminali içinden tıklanan açık bağlantılarda hata ayıklarken kullanılan seçenekler. Bu davranışı devre dışı bırakmak için "kapalı" veya tüm terminallerde hata ayıklamayı etkinleştirmek için "her zaman" olarak ayarlanabilir.
    "debug.javascript.debugByLinkOptions" : " üzerinde " ,
  
    // Belirtilmemişse, başlatma yapılandırmaları için kullanılan varsayılan 'runtimeExecutable'. Bu, Node.js veya tarayıcı kurulumlarına özel yollar yapılandırmak için kullanılabilir.
    "debug.javascript.defaultRuntimeExecutable" : {
      "pwa düğümü" : " düğüm "
    },
  
    // `Hata Ayıklama: Node.js İşlemine Ekle` komutu aracılığıyla bir işlemde hata ayıklarken kullanılan varsayılan seçenekler.
    "debug.javascript.pickAndAttachOptions" : {},
  
    // Hata ayıklayıcıda kaynak haritalar gibi kaynakları yüklerken kullanılacak seçenekleri isteyin. Örneğin, kaynak haritalarınız kimlik doğrulama gerektiriyorsa veya kendinden imzalı bir sertifika kullanıyorsa bunu yapılandırmanız gerekebilir. Seçenekler, `got` kütüphanesini kullanarak bir istek oluşturmak için kullanılır.
    // Sertifika doğrulamasını devre dışı bırakmak için yaygın bir durum, `{ "https": { "rejectUnauthorized": false } }` iletilerek yapılabilir.
    "debug.javascript.resourceRequestOptions" : {},
  
    // İçeri girdiğinizde küçültülmüş görünen hoş bir JavaScript kodu yazdırmanın önerilip önerilmeyeceği.
    "debug.javascript.suggestPrettyPrinting" : true ,
  
    // JavaScript hata ayıklama terminali ve npm komut dosyaları için varsayılan başlatma seçenekleri.
    "debug.javascript.terminalOptions" : {},
  
    // Orijinal dosyanın okunamadığı kaynak eşlemeli dosyanın otomatik olarak eşlenmemiş olup olmayacağını yapılandırır. Bu yanlışsa (varsayılan), bir bilgi istemi gösterilir.
    "debug.javascript.unmapMissingSources" : yanlış ,
  
    // Referans Arama Görünümü
  
    // CodeLens referansları seçilirken 'Peek References' mı yoksa 'Find References' mı çağrılacağını kontrol eder.
    // - peek: Referansları peek düzenleyicide göster.
    // - görünüm: Referansları ayrı bir görünümde göster.
    "references.preferredLocation" : " peek " ,
  
    // Npm
  
    // npm betiklerinin otomatik olarak algılanıp algılanmayacağını kontrol eder.
    "npm.autoDetect" : " on " ,
  
    // Explorer içerik menüsünden bir klasörde bulunan npm komut dosyalarını çalıştırmayı etkinleştirin.
    "npm.enableRunFromFolder" : yanlış ,
  
    // NPM Komut Dosyası Gezgini, artık tüm klasörlerde Gezgin'deki 'Görünümler' menüsünde mevcuttur.
    // Üst düzey 'package.json' dosyası olmadığında npm komut dosyaları için bir gezgin görünümünü etkinleştirin.
    "npm.enableScriptExplorer" : yanlış ,
  
    // Otomatik komut dosyası algılamasının dışında tutulması gereken klasörler için glob kalıplarını yapılandırın.
    "npm.hariç" : " " ,
  
    // Otomatik tamamlama ve npm bağımlılıklarında üzerine gelme özellikleri hakkında bilgi sağlamak için https://registry.npmjs.org ve https://registry.bower.io'dan veri alın.
    "npm.fetchOnlinePackageInfo" : doğru ,
  
    // Komut dosyalarını çalıştırmak için kullanılan paket yöneticisi.
    // - otomatik: Kilit dosyalarına ve kurulu paket yöneticilerine dayalı olarak komut dosyalarını çalıştırmak için hangi paket yöneticisinin kullanılacağını otomatik olarak algılar.
    // - npm: Komut dosyalarını çalıştırmak için paket yöneticisi olarak npm'yi kullanın.
    // - iplik: Komut dosyalarını çalıştırmak için paket yöneticisi olarak ipliği kullanın.
    // - pnpm: Komut dosyalarını çalıştırmak için paket yöneticisi olarak pnpm'yi kullanın.
    "npm.packageManager" : " otomatik " ,
  
    // `--silent` seçeneğiyle npm komutlarını çalıştırın.
    "npm.runSilent" : yanlış ,
  
    // npm komut dosyası gezgininde kullanılan varsayılan tıklama eylemi: `open` veya `run`, varsayılan `open`.
    "npm.scriptExplorerAction" : " aç " ,
  
    // Hangi komut dosyalarının NPM Komut Dosyaları görünümünden hariç tutulması gerektiğini belirten bir dizi normal ifade.
    "npm.scriptExplorerExclude" : []
  }
